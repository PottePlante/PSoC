ARM GAS  C:\temp\ccSYH5Oo.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	UART_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_Init, %function
  23              	UART_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART.c"
   1:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC4/UART.c **** * Version 2.50
   4:.\Generated_Source\PSoC4/UART.c **** *
   5:.\Generated_Source\PSoC4/UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/UART.c **** *
   8:.\Generated_Source\PSoC4/UART.c **** * Note:
   9:.\Generated_Source\PSoC4/UART.c **** *
  10:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART.c **** 
  17:.\Generated_Source\PSoC4/UART.c **** #include "UART.h"
  18:.\Generated_Source\PSoC4/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC4/UART.c ****     #include "UART_IntClock.h"
  20:.\Generated_Source\PSoC4/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC4/UART.c **** 
  22:.\Generated_Source\PSoC4/UART.c **** 
  23:.\Generated_Source\PSoC4/UART.c **** /***************************************
  24:.\Generated_Source\PSoC4/UART.c **** * Global data allocation
  25:.\Generated_Source\PSoC4/UART.c **** ***************************************/
  26:.\Generated_Source\PSoC4/UART.c **** 
  27:.\Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  28:.\Generated_Source\PSoC4/UART.c **** 
  29:.\Generated_Source\PSoC4/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_txBufferWrite = 0u;
ARM GAS  C:\temp\ccSYH5Oo.s 			page 2


  33:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:.\Generated_Source\PSoC4/UART.c **** 
  35:.\Generated_Source\PSoC4/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_errorStatus = 0u;
  37:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC4/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC4/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:.\Generated_Source\PSoC4/UART.c **** 
  48:.\Generated_Source\PSoC4/UART.c **** 
  49:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
  51:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
  52:.\Generated_Source\PSoC4/UART.c **** *
  53:.\Generated_Source\PSoC4/UART.c **** * Summary:
  54:.\Generated_Source\PSoC4/UART.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC4/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC4/UART.c **** *  UART_Init() function, and then calls the
  57:.\Generated_Source\PSoC4/UART.c **** *  UART_Enable() function.
  58:.\Generated_Source\PSoC4/UART.c **** *
  59:.\Generated_Source\PSoC4/UART.c **** * Parameters:
  60:.\Generated_Source\PSoC4/UART.c **** *  None.
  61:.\Generated_Source\PSoC4/UART.c **** *
  62:.\Generated_Source\PSoC4/UART.c **** * Return:
  63:.\Generated_Source\PSoC4/UART.c **** *  None.
  64:.\Generated_Source\PSoC4/UART.c **** *
  65:.\Generated_Source\PSoC4/UART.c **** * Global variables:
  66:.\Generated_Source\PSoC4/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC4/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC4/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:.\Generated_Source\PSoC4/UART.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC4/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:.\Generated_Source\PSoC4/UART.c **** *
  72:.\Generated_Source\PSoC4/UART.c **** * Reentrant:
  73:.\Generated_Source\PSoC4/UART.c **** *  No.
  74:.\Generated_Source\PSoC4/UART.c **** *
  75:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC4/UART.c **** void UART_Start(void) 
  77:.\Generated_Source\PSoC4/UART.c **** {
  78:.\Generated_Source\PSoC4/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC4/UART.c ****     if(UART_initVar == 0u)
  80:.\Generated_Source\PSoC4/UART.c ****     {
  81:.\Generated_Source\PSoC4/UART.c ****         UART_Init();
  82:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u;
  83:.\Generated_Source\PSoC4/UART.c ****     }
  84:.\Generated_Source\PSoC4/UART.c **** 
  85:.\Generated_Source\PSoC4/UART.c ****     UART_Enable();
  86:.\Generated_Source\PSoC4/UART.c **** }
  87:.\Generated_Source\PSoC4/UART.c **** 
  88:.\Generated_Source\PSoC4/UART.c **** 
  89:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
ARM GAS  C:\temp\ccSYH5Oo.s 			page 3


  90:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
  91:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
  92:.\Generated_Source\PSoC4/UART.c **** *
  93:.\Generated_Source\PSoC4/UART.c **** * Summary:
  94:.\Generated_Source\PSoC4/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC4/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:.\Generated_Source\PSoC4/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC4/UART.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC4/UART.c **** *
  99:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 100:.\Generated_Source\PSoC4/UART.c **** *  None.
 101:.\Generated_Source\PSoC4/UART.c **** *
 102:.\Generated_Source\PSoC4/UART.c **** * Return:
 103:.\Generated_Source\PSoC4/UART.c **** *  None.
 104:.\Generated_Source\PSoC4/UART.c **** *
 105:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC4/UART.c **** void UART_Init(void) 
 107:.\Generated_Source\PSoC4/UART.c **** {
  26              		.loc 1 107 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 108:.\Generated_Source\PSoC4/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:.\Generated_Source\PSoC4/UART.c **** 
 110:.\Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC4/UART.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC4/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
  32              		.loc 1 112 0
  33 0002 1149     		ldr	r1, .L2
  34 0004 0020     		mov	r0, #0
  35 0006 FFF7FEFF 		bl	CyIntSetVector
  36              	.LVL0:
 113:.\Generated_Source\PSoC4/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
  37              		.loc 1 113 0
  38 000a 0020     		mov	r0, #0
  39 000c 0321     		mov	r1, #3
  40 000e FFF7FEFF 		bl	CyIntSetPriority
  41              	.LVL1:
 114:.\Generated_Source\PSoC4/UART.c ****             UART_errorStatus = 0u;
  42              		.loc 1 114 0
  43 0012 0022     		mov	r2, #0
  44 0014 0D4B     		ldr	r3, .L2+4
 115:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC4/UART.c **** 
 117:.\Generated_Source\PSoC4/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC4/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC4/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC4/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC4/UART.c **** 
 123:.\Generated_Source\PSoC4/UART.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
 125:.\Generated_Source\PSoC4/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 127:.\Generated_Source\PSoC4/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
ARM GAS  C:\temp\ccSYH5Oo.s 			page 4


 128:.\Generated_Source\PSoC4/UART.c **** 
 129:.\Generated_Source\PSoC4/UART.c ****     #if(UART_TX_ENABLED)
 130:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC4/UART.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC4/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
  45              		.loc 1 132 0
  46 0016 0E49     		ldr	r1, .L2+8
 114:.\Generated_Source\PSoC4/UART.c ****             UART_errorStatus = 0u;
  47              		.loc 1 114 0
  48 0018 1A70     		strb	r2, [r3]
 124:.\Generated_Source\PSoC4/UART.c ****         /* Configure the Initial RX interrupt mask */
  49              		.loc 1 124 0
  50 001a 0E4B     		ldr	r3, .L2+12
  51 001c 7632     		add	r2, r2, #118
  52 001e 1A70     		strb	r2, [r3]
 126:.\Generated_Source\PSoC4/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
  53              		.loc 1 126 0
  54 0020 0D4B     		ldr	r3, .L2+16
  55 0022 563A     		sub	r2, r2, #86
  56 0024 1A70     		strb	r2, [r3]
  57              		.loc 1 132 0
  58 0026 0220     		mov	r0, #2
  59 0028 FFF7FEFF 		bl	CyIntSetVector
  60              	.LVL2:
 133:.\Generated_Source\PSoC4/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
  61              		.loc 1 133 0
  62 002c 0220     		mov	r0, #2
  63 002e 0321     		mov	r1, #3
  64 0030 FFF7FEFF 		bl	CyIntSetPriority
  65              	.LVL3:
 134:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC4/UART.c **** 
 136:.\Generated_Source\PSoC4/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  66              		.loc 1 138 0
  67 0034 0E22     		mov	r2, #14
  68 0036 094B     		ldr	r3, .L2+20
 139:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC4/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC4/UART.c ****         #else
 142:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC4/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC4/UART.c **** 
 146:.\Generated_Source\PSoC4/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC4/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC4/UART.c ****         #else
 150:.\Generated_Source\PSoC4/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC4/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC4/UART.c **** 
 153:.\Generated_Source\PSoC4/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:.\Generated_Source\PSoC4/UART.c **** 
 155:.\Generated_Source\PSoC4/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC4/UART.c ****         UART_WriteControlRegister( \
 157:.\Generated_Source\PSoC4/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
ARM GAS  C:\temp\ccSYH5Oo.s 			page 5


 158:.\Generated_Source\PSoC4/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC4/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC4/UART.c **** }
  69              		.loc 1 160 0
  70              		@ sp needed
 138:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  71              		.loc 1 138 0
  72 0038 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  73              		.loc 1 139 0
  74 003a 094B     		ldr	r3, .L2+24
  75 003c 8132     		add	r2, r2, #129
  76 003e 1A70     		strb	r2, [r3]
 148:.\Generated_Source\PSoC4/UART.c ****         #else
  77              		.loc 1 148 0
  78 0040 084B     		ldr	r3, .L2+28
  79 0042 8D3A     		sub	r2, r2, #141
  80 0044 1A70     		strb	r2, [r3]
  81              		.loc 1 160 0
  82 0046 08BD     		pop	{r3, pc}
  83              	.L3:
  84              		.align	2
  85              	.L2:
  86 0048 00000000 		.word	UART_RXISR
  87 004c 00000000 		.word	.LANCHOR0
  88 0050 00000000 		.word	UART_TXISR
  89 0054 83000F40 		.word	1074724995
  90 0058 80000F40 		.word	1074724992
  91 005c 22000F40 		.word	1074724898
  92 0060 32000F40 		.word	1074724914
  93 0064 81000F40 		.word	1074724993
  94              		.cfi_endproc
  95              	.LFE1:
  96              		.size	UART_Init, .-UART_Init
  97              		.section	.text.UART_Enable,"ax",%progbits
  98              		.align	1
  99              		.global	UART_Enable
 100              		.code	16
 101              		.thumb_func
 102              		.type	UART_Enable, %function
 103              	UART_Enable:
 104              	.LFB2:
 161:.\Generated_Source\PSoC4/UART.c **** 
 162:.\Generated_Source\PSoC4/UART.c **** 
 163:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
 165:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/UART.c **** *
 167:.\Generated_Source\PSoC4/UART.c **** * Summary:
 168:.\Generated_Source\PSoC4/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC4/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:.\Generated_Source\PSoC4/UART.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC4/UART.c **** *  operation.
 172:.\Generated_Source\PSoC4/UART.c **** 
 173:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 174:.\Generated_Source\PSoC4/UART.c **** *  None.
 175:.\Generated_Source\PSoC4/UART.c **** *
ARM GAS  C:\temp\ccSYH5Oo.s 			page 6


 176:.\Generated_Source\PSoC4/UART.c **** * Return:
 177:.\Generated_Source\PSoC4/UART.c **** *  None.
 178:.\Generated_Source\PSoC4/UART.c **** *
 179:.\Generated_Source\PSoC4/UART.c **** * Global Variables:
 180:.\Generated_Source\PSoC4/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC4/UART.c **** *
 182:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC4/UART.c **** void UART_Enable(void) 
 184:.\Generated_Source\PSoC4/UART.c **** {
 105              		.loc 1 184 0
 106              		.cfi_startproc
 107 0000 38B5     		push	{r3, r4, r5, lr}
 108              		.cfi_def_cfa_offset 16
 109              		.cfi_offset 3, -16
 110              		.cfi_offset 4, -12
 111              		.cfi_offset 5, -8
 112              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC4/UART.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC4/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 113              		.loc 1 186 0
 114 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 115              	.LVL4:
 187:.\Generated_Source\PSoC4/UART.c **** 
 188:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:.\Generated_Source\PSoC4/UART.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 116              		.loc 1 190 0
 117 0006 2021     		mov	r1, #32
 191:.\Generated_Source\PSoC4/UART.c **** 
 192:.\Generated_Source\PSoC4/UART.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 118              		.loc 1 193 0
 119 0008 1025     		mov	r5, #16
 186:.\Generated_Source\PSoC4/UART.c **** 
 120              		.loc 1 186 0
 121 000a 041C     		mov	r4, r0
 122              	.LVL5:
 190:.\Generated_Source\PSoC4/UART.c **** 
 123              		.loc 1 190 0
 124 000c 0D4A     		ldr	r2, .L5
 194:.\Generated_Source\PSoC4/UART.c **** 
 195:.\Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC4/UART.c ****             UART_EnableRxInt();
 125              		.loc 1 196 0
 126 000e 0020     		mov	r0, #0
 190:.\Generated_Source\PSoC4/UART.c **** 
 127              		.loc 1 190 0
 128 0010 1378     		ldrb	r3, [r2]
 197:.\Generated_Source\PSoC4/UART.c **** 
 198:.\Generated_Source\PSoC4/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC4/UART.c ****                 UART_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:.\Generated_Source\PSoC4/UART.c **** 
 204:.\Generated_Source\PSoC4/UART.c ****     #if(UART_TX_ENABLED)
 205:.\Generated_Source\PSoC4/UART.c ****         /* TX Counter (DP/Count7) Enable */
ARM GAS  C:\temp\ccSYH5Oo.s 			page 7


 206:.\Generated_Source\PSoC4/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC4/UART.c **** 
 210:.\Generated_Source\PSoC4/UART.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 212:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC4/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 215:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC4/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC4/UART.c **** 
 218:.\Generated_Source\PSoC4/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC4/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 220:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC4/UART.c **** 
 222:.\Generated_Source\PSoC4/UART.c ****     CyExitCriticalSection(enableInterrupts);
 223:.\Generated_Source\PSoC4/UART.c **** }
 129              		.loc 1 223 0
 130              		@ sp needed
 190:.\Generated_Source\PSoC4/UART.c **** 
 131              		.loc 1 190 0
 132 0012 0B43     		orr	r3, r1
 133 0014 1370     		strb	r3, [r2]
 193:.\Generated_Source\PSoC4/UART.c **** 
 134              		.loc 1 193 0
 135 0016 0C4A     		ldr	r2, .L5+4
 136 0018 1378     		ldrb	r3, [r2]
 137 001a 2B43     		orr	r3, r5
 138 001c 1370     		strb	r3, [r2]
 196:.\Generated_Source\PSoC4/UART.c **** 
 139              		.loc 1 196 0
 140 001e FFF7FEFF 		bl	CyIntEnable
 141              	.LVL6:
 211:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 142              		.loc 1 211 0
 143 0022 0A4A     		ldr	r2, .L5+8
 213:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 144              		.loc 1 213 0
 145 0024 0220     		mov	r0, #2
 211:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 146              		.loc 1 211 0
 147 0026 1378     		ldrb	r3, [r2]
 148 0028 2B43     		orr	r3, r5
 149 002a 1370     		strb	r3, [r2]
 213:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 150              		.loc 1 213 0
 151 002c FFF7FEFF 		bl	CyIntClearPending
 152              	.LVL7:
 214:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 153              		.loc 1 214 0
 154 0030 0220     		mov	r0, #2
 155 0032 FFF7FEFF 		bl	CyIntEnable
 156              	.LVL8:
 219:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 157              		.loc 1 219 0
 158 0036 FFF7FEFF 		bl	UART_IntClock_Start
ARM GAS  C:\temp\ccSYH5Oo.s 			page 8


 159              	.LVL9:
 222:.\Generated_Source\PSoC4/UART.c **** }
 160              		.loc 1 222 0
 161 003a 201C     		mov	r0, r4
 162 003c FFF7FEFF 		bl	CyExitCriticalSection
 163              	.LVL10:
 164              	.LVL11:
 165              		.loc 1 223 0
 166 0040 38BD     		pop	{r3, r4, r5, pc}
 167              	.L6:
 168 0042 C046     		.align	2
 169              	.L5:
 170 0044 93000F40 		.word	1074725011
 171 0048 90000F40 		.word	1074725008
 172 004c 91000F40 		.word	1074725009
 173              		.cfi_endproc
 174              	.LFE2:
 175              		.size	UART_Enable, .-UART_Enable
 176              		.section	.text.UART_Start,"ax",%progbits
 177              		.align	1
 178              		.global	UART_Start
 179              		.code	16
 180              		.thumb_func
 181              		.type	UART_Start, %function
 182              	UART_Start:
 183              	.LFB0:
  77:.\Generated_Source\PSoC4/UART.c ****     /* If not initialized then initialize all required hardware and software */
 184              		.loc 1 77 0
 185              		.cfi_startproc
 186 0000 10B5     		push	{r4, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 4, -8
 189              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC4/UART.c ****     {
 190              		.loc 1 79 0
 191 0002 054C     		ldr	r4, .L10
 192 0004 6378     		ldrb	r3, [r4, #1]
 193 0006 002B     		cmp	r3, #0
 194 0008 03D1     		bne	.L8
  81:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u;
 195              		.loc 1 81 0
 196 000a FFF7FEFF 		bl	UART_Init
 197              	.LVL12:
  82:.\Generated_Source\PSoC4/UART.c ****     }
 198              		.loc 1 82 0
 199 000e 0123     		mov	r3, #1
 200 0010 6370     		strb	r3, [r4, #1]
 201              	.L8:
  85:.\Generated_Source\PSoC4/UART.c **** }
 202              		.loc 1 85 0
 203 0012 FFF7FEFF 		bl	UART_Enable
 204              	.LVL13:
  86:.\Generated_Source\PSoC4/UART.c **** 
 205              		.loc 1 86 0
 206              		@ sp needed
 207 0016 10BD     		pop	{r4, pc}
 208              	.L11:
ARM GAS  C:\temp\ccSYH5Oo.s 			page 9


 209              		.align	2
 210              	.L10:
 211 0018 00000000 		.word	.LANCHOR0
 212              		.cfi_endproc
 213              	.LFE0:
 214              		.size	UART_Start, .-UART_Start
 215              		.section	.text.UART_Stop,"ax",%progbits
 216              		.align	1
 217              		.global	UART_Stop
 218              		.code	16
 219              		.thumb_func
 220              		.type	UART_Stop, %function
 221              	UART_Stop:
 222              	.LFB3:
 224:.\Generated_Source\PSoC4/UART.c **** 
 225:.\Generated_Source\PSoC4/UART.c **** 
 226:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 228:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/UART.c **** *
 230:.\Generated_Source\PSoC4/UART.c **** * Summary:
 231:.\Generated_Source\PSoC4/UART.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC4/UART.c **** *
 233:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 234:.\Generated_Source\PSoC4/UART.c **** *  None.
 235:.\Generated_Source\PSoC4/UART.c **** *
 236:.\Generated_Source\PSoC4/UART.c **** * Return:
 237:.\Generated_Source\PSoC4/UART.c **** *  None.
 238:.\Generated_Source\PSoC4/UART.c **** *
 239:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC4/UART.c **** void UART_Stop(void) 
 241:.\Generated_Source\PSoC4/UART.c **** {
 223              		.loc 1 241 0
 224              		.cfi_startproc
 225 0000 38B5     		push	{r3, r4, r5, lr}
 226              		.cfi_def_cfa_offset 16
 227              		.cfi_offset 3, -16
 228              		.cfi_offset 4, -12
 229              		.cfi_offset 5, -8
 230              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC4/UART.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC4/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 231              		.loc 1 243 0
 232 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 233              	.LVL14:
 244:.\Generated_Source\PSoC4/UART.c **** 
 245:.\Generated_Source\PSoC4/UART.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:.\Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 234              		.loc 1 247 0
 235 0006 2021     		mov	r1, #32
 248:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:.\Generated_Source\PSoC4/UART.c **** 
 250:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_ENABLED)
 251:.\Generated_Source\PSoC4/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:.\Generated_Source\PSoC4/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
ARM GAS  C:\temp\ccSYH5Oo.s 			page 10


 254:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:.\Generated_Source\PSoC4/UART.c **** 
 256:.\Generated_Source\PSoC4/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC4/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC4/UART.c **** 
 260:.\Generated_Source\PSoC4/UART.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 236              		.loc 1 262 0
 237 0008 1025     		mov	r5, #16
 243:.\Generated_Source\PSoC4/UART.c **** 
 238              		.loc 1 243 0
 239 000a 041C     		mov	r4, r0
 240              	.LVL15:
 247:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 241              		.loc 1 247 0
 242 000c 0B4A     		ldr	r2, .L13
 263:.\Generated_Source\PSoC4/UART.c **** 
 264:.\Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC4/UART.c ****             UART_DisableRxInt();
 266:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:.\Generated_Source\PSoC4/UART.c **** 
 269:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_ENABLED)
 270:.\Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 271:.\Generated_Source\PSoC4/UART.c **** 
 272:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
 274:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:.\Generated_Source\PSoC4/UART.c **** 
 277:.\Generated_Source\PSoC4/UART.c ****     CyExitCriticalSection(enableInterrupts);
 278:.\Generated_Source\PSoC4/UART.c **** }
 243              		.loc 1 278 0
 244              		@ sp needed
 247:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 245              		.loc 1 247 0
 246 000e 1378     		ldrb	r3, [r2]
 247 0010 8B43     		bic	r3, r1
 248 0012 1370     		strb	r3, [r2]
 257:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 249              		.loc 1 257 0
 250 0014 FFF7FEFF 		bl	UART_IntClock_Stop
 251              	.LVL16:
 262:.\Generated_Source\PSoC4/UART.c **** 
 252              		.loc 1 262 0
 253 0018 094A     		ldr	r2, .L13+4
 265:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 254              		.loc 1 265 0
 255 001a 0020     		mov	r0, #0
 262:.\Generated_Source\PSoC4/UART.c **** 
 256              		.loc 1 262 0
 257 001c 1378     		ldrb	r3, [r2]
 258 001e AB43     		bic	r3, r5
 259 0020 1370     		strb	r3, [r2]
 265:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\temp\ccSYH5Oo.s 			page 11


 260              		.loc 1 265 0
 261 0022 FFF7FEFF 		bl	CyIntDisable
 262              	.LVL17:
 270:.\Generated_Source\PSoC4/UART.c **** 
 263              		.loc 1 270 0
 264 0026 074A     		ldr	r2, .L13+8
 273:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 265              		.loc 1 273 0
 266 0028 0220     		mov	r0, #2
 270:.\Generated_Source\PSoC4/UART.c **** 
 267              		.loc 1 270 0
 268 002a 1378     		ldrb	r3, [r2]
 269 002c AB43     		bic	r3, r5
 270 002e 1370     		strb	r3, [r2]
 273:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 271              		.loc 1 273 0
 272 0030 FFF7FEFF 		bl	CyIntDisable
 273              	.LVL18:
 277:.\Generated_Source\PSoC4/UART.c **** }
 274              		.loc 1 277 0
 275 0034 201C     		mov	r0, r4
 276 0036 FFF7FEFF 		bl	CyExitCriticalSection
 277              	.LVL19:
 278              	.LVL20:
 279              		.loc 1 278 0
 280 003a 38BD     		pop	{r3, r4, r5, pc}
 281              	.L14:
 282              		.align	2
 283              	.L13:
 284 003c 93000F40 		.word	1074725011
 285 0040 90000F40 		.word	1074725008
 286 0044 91000F40 		.word	1074725009
 287              		.cfi_endproc
 288              	.LFE3:
 289              		.size	UART_Stop, .-UART_Stop
 290              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 291              		.align	1
 292              		.global	UART_ReadControlRegister
 293              		.code	16
 294              		.thumb_func
 295              		.type	UART_ReadControlRegister, %function
 296              	UART_ReadControlRegister:
 297              	.LFB4:
 279:.\Generated_Source\PSoC4/UART.c **** 
 280:.\Generated_Source\PSoC4/UART.c **** 
 281:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_ReadControlRegister
 283:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 284:.\Generated_Source\PSoC4/UART.c **** *
 285:.\Generated_Source\PSoC4/UART.c **** * Summary:
 286:.\Generated_Source\PSoC4/UART.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC4/UART.c **** *
 288:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART.c **** *  None.
 290:.\Generated_Source\PSoC4/UART.c **** *
 291:.\Generated_Source\PSoC4/UART.c **** * Return:
 292:.\Generated_Source\PSoC4/UART.c **** *  Contents of the control register.
ARM GAS  C:\temp\ccSYH5Oo.s 			page 12


 293:.\Generated_Source\PSoC4/UART.c **** *
 294:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC4/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC4/UART.c **** {
 298              		.loc 1 296 0
 299              		.cfi_startproc
 297:.\Generated_Source\PSoC4/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC4/UART.c ****         return(0u);
 299:.\Generated_Source\PSoC4/UART.c ****     #else
 300:.\Generated_Source\PSoC4/UART.c ****         return(UART_CONTROL_REG);
 301:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC4/UART.c **** }
 300              		.loc 1 302 0
 301 0000 0020     		mov	r0, #0
 302              		@ sp needed
 303 0002 7047     		bx	lr
 304              		.cfi_endproc
 305              	.LFE4:
 306              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 307              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 308              		.align	1
 309              		.global	UART_WriteControlRegister
 310              		.code	16
 311              		.thumb_func
 312              		.type	UART_WriteControlRegister, %function
 313              	UART_WriteControlRegister:
 314              	.LFB5:
 303:.\Generated_Source\PSoC4/UART.c **** 
 304:.\Generated_Source\PSoC4/UART.c **** 
 305:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_WriteControlRegister
 307:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 308:.\Generated_Source\PSoC4/UART.c **** *
 309:.\Generated_Source\PSoC4/UART.c **** * Summary:
 310:.\Generated_Source\PSoC4/UART.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC4/UART.c **** *
 312:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 313:.\Generated_Source\PSoC4/UART.c **** *  control:  control register value
 314:.\Generated_Source\PSoC4/UART.c **** *
 315:.\Generated_Source\PSoC4/UART.c **** * Return:
 316:.\Generated_Source\PSoC4/UART.c **** *  None.
 317:.\Generated_Source\PSoC4/UART.c **** *
 318:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC4/UART.c **** {
 315              		.loc 1 320 0
 316              		.cfi_startproc
 317              	.LVL21:
 321:.\Generated_Source\PSoC4/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC4/UART.c ****         if(0u != control)
 323:.\Generated_Source\PSoC4/UART.c ****         {
 324:.\Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC4/UART.c ****         }
 326:.\Generated_Source\PSoC4/UART.c ****     #else
 327:.\Generated_Source\PSoC4/UART.c ****        UART_CONTROL_REG = control;
 328:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC4/UART.c **** }
ARM GAS  C:\temp\ccSYH5Oo.s 			page 13


 318              		.loc 1 329 0
 319              		@ sp needed
 320 0000 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE5:
 323              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 324              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 325              		.align	1
 326              		.global	UART_SetRxInterruptMode
 327              		.code	16
 328              		.thumb_func
 329              		.type	UART_SetRxInterruptMode, %function
 330              	UART_SetRxInterruptMode:
 331              	.LFB6:
 330:.\Generated_Source\PSoC4/UART.c **** 
 331:.\Generated_Source\PSoC4/UART.c **** 
 332:.\Generated_Source\PSoC4/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC4/UART.c ****     *
 337:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 338:.\Generated_Source\PSoC4/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC4/UART.c ****     *
 340:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 341:.\Generated_Source\PSoC4/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC4/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC4/UART.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC4/UART.c ****     *
 352:.\Generated_Source\PSoC4/UART.c ****     * Return:
 353:.\Generated_Source\PSoC4/UART.c ****     *  None.
 354:.\Generated_Source\PSoC4/UART.c ****     *
 355:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 356:.\Generated_Source\PSoC4/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC4/UART.c ****     *
 358:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC4/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC4/UART.c ****     {
 332              		.loc 1 360 0
 333              		.cfi_startproc
 334              	.LVL22:
 361:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 335              		.loc 1 361 0
 336 0000 014B     		ldr	r3, .L18
 362:.\Generated_Source\PSoC4/UART.c ****     }
 337              		.loc 1 362 0
 338              		@ sp needed
 361:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 339              		.loc 1 361 0
 340 0002 1870     		strb	r0, [r3]
ARM GAS  C:\temp\ccSYH5Oo.s 			page 14


 341              		.loc 1 362 0
 342 0004 7047     		bx	lr
 343              	.L19:
 344 0006 C046     		.align	2
 345              	.L18:
 346 0008 80000F40 		.word	1074724992
 347              		.cfi_endproc
 348              	.LFE6:
 349              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 350              		.section	.text.UART_ReadRxData,"ax",%progbits
 351              		.align	1
 352              		.global	UART_ReadRxData
 353              		.code	16
 354              		.thumb_func
 355              		.type	UART_ReadRxData, %function
 356              	UART_ReadRxData:
 357              	.LFB7:
 363:.\Generated_Source\PSoC4/UART.c **** 
 364:.\Generated_Source\PSoC4/UART.c **** 
 365:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadRxData
 367:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC4/UART.c ****     *
 369:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 370:.\Generated_Source\PSoC4/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC4/UART.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC4/UART.c ****     *
 373:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 374:.\Generated_Source\PSoC4/UART.c ****     *  None.
 375:.\Generated_Source\PSoC4/UART.c ****     *
 376:.\Generated_Source\PSoC4/UART.c ****     * Return:
 377:.\Generated_Source\PSoC4/UART.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC4/UART.c ****     *
 379:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 380:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC4/UART.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC4/UART.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC4/UART.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC4/UART.c ****     *
 388:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 389:.\Generated_Source\PSoC4/UART.c ****     *  No.
 390:.\Generated_Source\PSoC4/UART.c ****     *
 391:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadRxData(void) 
 393:.\Generated_Source\PSoC4/UART.c ****     {
 358              		.loc 1 393 0
 359              		.cfi_startproc
 360 0000 10B5     		push	{r4, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 394:.\Generated_Source\PSoC4/UART.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC4/UART.c **** 
 396:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
ARM GAS  C:\temp\ccSYH5Oo.s 			page 15


 397:.\Generated_Source\PSoC4/UART.c **** 
 398:.\Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC4/UART.c **** 
 401:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 364              		.loc 1 402 0
 365 0002 0020     		mov	r0, #0
 366 0004 FFF7FEFF 		bl	CyIntDisable
 367              	.LVL23:
 403:.\Generated_Source\PSoC4/UART.c **** 
 404:.\Generated_Source\PSoC4/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 368              		.loc 1 404 0
 369 0008 124A     		ldr	r2, .L28
 370 000a 9378     		ldrb	r3, [r2, #2]
 405:.\Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 371              		.loc 1 405 0
 372 000c D078     		ldrb	r0, [r2, #3]
 406:.\Generated_Source\PSoC4/UART.c **** 
 407:.\Generated_Source\PSoC4/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 373              		.loc 1 407 0
 374 000e 1479     		ldrb	r4, [r2, #4]
 404:.\Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 375              		.loc 1 404 0
 376 0010 DBB2     		uxtb	r3, r3
 377              	.LVL24:
 405:.\Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 378              		.loc 1 405 0
 379 0012 C0B2     		uxtb	r0, r0
 380              	.LVL25:
 381 0014 111C     		mov	r1, r2
 382              		.loc 1 407 0
 383 0016 002C     		cmp	r4, #0
 384 0018 01D1     		bne	.L21
 385              		.loc 1 407 0 is_stmt 0 discriminator 1
 386 001a 8342     		cmp	r3, r0
 387 001c 11D0     		beq	.L22
 388              	.L21:
 408:.\Generated_Source\PSoC4/UART.c ****         {
 409:.\Generated_Source\PSoC4/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 389              		.loc 1 409 0 is_stmt 1
 390 001e 0E4A     		ldr	r2, .L28+4
 391 0020 D45C     		ldrb	r4, [r2, r3]
 410:.\Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 392              		.loc 1 410 0
 393 0022 0133     		add	r3, r3, #1
 394              	.LVL26:
 395 0024 DBB2     		uxtb	r3, r3
 396              	.LVL27:
 411:.\Generated_Source\PSoC4/UART.c **** 
 412:.\Generated_Source\PSoC4/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC4/UART.c ****             {
 414:.\Generated_Source\PSoC4/UART.c ****                 locRxBufferRead = 0u;
 397              		.loc 1 414 0
 398 0026 1A1C     		mov	r2, r3
 399 0028 FF3A     		sub	r2, r2, #255
 400 002a 501E     		sub	r0, r2, #1
ARM GAS  C:\temp\ccSYH5Oo.s 			page 16


 401 002c 8241     		sbc	r2, r2, r0
 402              	.LVL28:
 403 002e 5242     		neg	r2, r2
 404 0030 1340     		and	r3, r2
 415:.\Generated_Source\PSoC4/UART.c ****             }
 416:.\Generated_Source\PSoC4/UART.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC4/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 405              		.loc 1 417 0
 406 0032 8B70     		strb	r3, [r1, #2]
 418:.\Generated_Source\PSoC4/UART.c **** 
 419:.\Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 407              		.loc 1 419 0
 408 0034 0B79     		ldrb	r3, [r1, #4]
 409:.\Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 409              		.loc 1 409 0
 410 0036 E4B2     		uxtb	r4, r4
 411              	.LVL29:
 412              		.loc 1 419 0
 413 0038 002B     		cmp	r3, #0
 414 003a 05D0     		beq	.L24
 420:.\Generated_Source\PSoC4/UART.c ****             {
 421:.\Generated_Source\PSoC4/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 415              		.loc 1 421 0
 416 003c 0023     		mov	r3, #0
 417 003e 0B71     		strb	r3, [r1, #4]
 418 0040 02E0     		b	.L24
 419              	.LVL30:
 420              	.L22:
 422:.\Generated_Source\PSoC4/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC4/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC4/UART.c ****                     #if( UART_HD_ENABLED )
 425:.\Generated_Source\PSoC4/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC4/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC4/UART.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC4/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC4/UART.c ****                             */
 430:.\Generated_Source\PSoC4/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC4/UART.c ****                         }
 432:.\Generated_Source\PSoC4/UART.c ****                     #else
 433:.\Generated_Source\PSoC4/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC4/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:.\Generated_Source\PSoC4/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC4/UART.c ****             }
 437:.\Generated_Source\PSoC4/UART.c ****         }
 438:.\Generated_Source\PSoC4/UART.c ****         else
 439:.\Generated_Source\PSoC4/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC4/UART.c ****             rxData = UART_RXDATA_REG;
 421              		.loc 1 440 0
 422 0042 064B     		ldr	r3, .L28+8
 423              	.LVL31:
 424 0044 1C78     		ldrb	r4, [r3]
 425 0046 E4B2     		uxtb	r4, r4
 426              	.LVL32:
 427              	.L24:
 441:.\Generated_Source\PSoC4/UART.c ****         }
 442:.\Generated_Source\PSoC4/UART.c **** 
 443:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
ARM GAS  C:\temp\ccSYH5Oo.s 			page 17


 428              		.loc 1 443 0
 429 0048 0020     		mov	r0, #0
 430 004a FFF7FEFF 		bl	CyIntEnable
 431              	.LVL33:
 444:.\Generated_Source\PSoC4/UART.c **** 
 445:.\Generated_Source\PSoC4/UART.c ****     #else
 446:.\Generated_Source\PSoC4/UART.c **** 
 447:.\Generated_Source\PSoC4/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC4/UART.c ****         rxData = UART_RXDATA_REG;
 449:.\Generated_Source\PSoC4/UART.c **** 
 450:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC4/UART.c **** 
 452:.\Generated_Source\PSoC4/UART.c ****         return(rxData);
 453:.\Generated_Source\PSoC4/UART.c ****     }
 432              		.loc 1 453 0
 433              		@ sp needed
 434 004e 201C     		mov	r0, r4
 435              	.LVL34:
 436 0050 10BD     		pop	{r4, pc}
 437              	.L29:
 438 0052 C046     		.align	2
 439              	.L28:
 440 0054 00000000 		.word	.LANCHOR0
 441 0058 00000000 		.word	UART_rxBuffer
 442 005c 40000F40 		.word	1074724928
 443              		.cfi_endproc
 444              	.LFE7:
 445              		.size	UART_ReadRxData, .-UART_ReadRxData
 446              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 447              		.align	1
 448              		.global	UART_ReadRxStatus
 449              		.code	16
 450              		.thumb_func
 451              		.type	UART_ReadRxStatus, %function
 452              	UART_ReadRxStatus:
 453              	.LFB8:
 454:.\Generated_Source\PSoC4/UART.c **** 
 455:.\Generated_Source\PSoC4/UART.c **** 
 456:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadRxStatus
 458:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC4/UART.c ****     *
 460:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 461:.\Generated_Source\PSoC4/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC4/UART.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC4/UART.c ****     *
 464:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 465:.\Generated_Source\PSoC4/UART.c ****     *  None.
 466:.\Generated_Source\PSoC4/UART.c ****     *
 467:.\Generated_Source\PSoC4/UART.c ****     * Return:
 468:.\Generated_Source\PSoC4/UART.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC4/UART.c ****     *
 470:.\Generated_Source\PSoC4/UART.c ****     * Side Effect:
 471:.\Generated_Source\PSoC4/UART.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC4/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC4/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC4/UART.c ****     *  register read.
ARM GAS  C:\temp\ccSYH5Oo.s 			page 18


 475:.\Generated_Source\PSoC4/UART.c ****     *
 476:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 477:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC4/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC4/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC4/UART.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC4/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC4/UART.c ****     *   bits.
 483:.\Generated_Source\PSoC4/UART.c ****     *
 484:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC4/UART.c ****     {
 454              		.loc 1 486 0
 455              		.cfi_startproc
 487:.\Generated_Source\PSoC4/UART.c ****         uint8 status;
 488:.\Generated_Source\PSoC4/UART.c **** 
 489:.\Generated_Source\PSoC4/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 456              		.loc 1 489 0
 457 0000 064B     		ldr	r3, .L35
 458 0002 1878     		ldrb	r0, [r3]
 459 0004 7F23     		mov	r3, #127
 460 0006 1840     		and	r0, r3
 461              	.LVL35:
 490:.\Generated_Source\PSoC4/UART.c **** 
 491:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC4/UART.c ****         if(UART_rxBufferOverflow != 0u)
 462              		.loc 1 492 0
 463 0008 054B     		ldr	r3, .L35+4
 464 000a 5A79     		ldrb	r2, [r3, #5]
 465 000c 002A     		cmp	r2, #0
 466 000e 03D0     		beq	.L31
 493:.\Generated_Source\PSoC4/UART.c ****         {
 494:.\Generated_Source\PSoC4/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 467              		.loc 1 494 0
 468 0010 8022     		mov	r2, #128
 469 0012 1043     		orr	r0, r2
 470              	.LVL36:
 495:.\Generated_Source\PSoC4/UART.c ****             UART_rxBufferOverflow = 0u;
 471              		.loc 1 495 0
 472 0014 0022     		mov	r2, #0
 473 0016 5A71     		strb	r2, [r3, #5]
 474              	.L31:
 496:.\Generated_Source\PSoC4/UART.c ****         }
 497:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC4/UART.c **** 
 499:.\Generated_Source\PSoC4/UART.c ****         return(status);
 500:.\Generated_Source\PSoC4/UART.c ****     }
 475              		.loc 1 500 0
 476              		@ sp needed
 477 0018 7047     		bx	lr
 478              	.L36:
 479 001a C046     		.align	2
 480              	.L35:
 481 001c 60000F40 		.word	1074724960
 482 0020 00000000 		.word	.LANCHOR0
 483              		.cfi_endproc
 484              	.LFE8:
ARM GAS  C:\temp\ccSYH5Oo.s 			page 19


 485              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 486              		.section	.text.UART_GetChar,"ax",%progbits
 487              		.align	1
 488              		.global	UART_GetChar
 489              		.code	16
 490              		.thumb_func
 491              		.type	UART_GetChar, %function
 492              	UART_GetChar:
 493              	.LFB9:
 501:.\Generated_Source\PSoC4/UART.c **** 
 502:.\Generated_Source\PSoC4/UART.c **** 
 503:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetChar
 505:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC4/UART.c ****     *
 507:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 508:.\Generated_Source\PSoC4/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:.\Generated_Source\PSoC4/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC4/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC4/UART.c ****     *
 512:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 513:.\Generated_Source\PSoC4/UART.c ****     *  None.
 514:.\Generated_Source\PSoC4/UART.c ****     *
 515:.\Generated_Source\PSoC4/UART.c ****     * Return:
 516:.\Generated_Source\PSoC4/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC4/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC4/UART.c ****     *
 519:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 520:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC4/UART.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC4/UART.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC4/UART.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC4/UART.c ****     *
 528:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 529:.\Generated_Source\PSoC4/UART.c ****     *  No.
 530:.\Generated_Source\PSoC4/UART.c ****     *
 531:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_GetChar(void) 
 533:.\Generated_Source\PSoC4/UART.c ****     {
 494              		.loc 1 533 0
 495              		.cfi_startproc
 496              	.LVL37:
 497 0000 10B5     		push	{r4, lr}
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 4, -8
 500              		.cfi_offset 14, -4
 534:.\Generated_Source\PSoC4/UART.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC4/UART.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC4/UART.c **** 
 537:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC4/UART.c **** 
 541:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\temp\ccSYH5Oo.s 			page 20


 542:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 501              		.loc 1 542 0
 502 0002 0020     		mov	r0, #0
 503 0004 FFF7FEFF 		bl	CyIntDisable
 504              	.LVL38:
 543:.\Generated_Source\PSoC4/UART.c **** 
 544:.\Generated_Source\PSoC4/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 505              		.loc 1 544 0
 506 0008 174A     		ldr	r2, .L49
 507 000a 9378     		ldrb	r3, [r2, #2]
 545:.\Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 508              		.loc 1 545 0
 509 000c D078     		ldrb	r0, [r2, #3]
 546:.\Generated_Source\PSoC4/UART.c **** 
 547:.\Generated_Source\PSoC4/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 510              		.loc 1 547 0
 511 000e 1479     		ldrb	r4, [r2, #4]
 544:.\Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 512              		.loc 1 544 0
 513 0010 DBB2     		uxtb	r3, r3
 514              	.LVL39:
 515              		.loc 1 547 0
 516 0012 E4B2     		uxtb	r4, r4
 545:.\Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 517              		.loc 1 545 0
 518 0014 C0B2     		uxtb	r0, r0
 519              	.LVL40:
 520 0016 111C     		mov	r1, r2
 521              		.loc 1 547 0
 522 0018 002C     		cmp	r4, #0
 523 001a 01D1     		bne	.L38
 524              		.loc 1 547 0 is_stmt 0 discriminator 1
 525 001c 8342     		cmp	r3, r0
 526 001e 11D0     		beq	.L39
 527              	.L38:
 548:.\Generated_Source\PSoC4/UART.c ****         {
 549:.\Generated_Source\PSoC4/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 528              		.loc 1 549 0 is_stmt 1
 529 0020 124A     		ldr	r2, .L49+4
 530 0022 D45C     		ldrb	r4, [r2, r3]
 550:.\Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 531              		.loc 1 550 0
 532 0024 0133     		add	r3, r3, #1
 533              	.LVL41:
 534 0026 DBB2     		uxtb	r3, r3
 535              	.LVL42:
 551:.\Generated_Source\PSoC4/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC4/UART.c ****             {
 553:.\Generated_Source\PSoC4/UART.c ****                 locRxBufferRead = 0u;
 536              		.loc 1 553 0
 537 0028 1A1C     		mov	r2, r3
 538 002a FF3A     		sub	r2, r2, #255
 539 002c 501E     		sub	r0, r2, #1
 540 002e 8241     		sbc	r2, r2, r0
 541              	.LVL43:
 542 0030 5242     		neg	r2, r2
 543 0032 1340     		and	r3, r2
ARM GAS  C:\temp\ccSYH5Oo.s 			page 21


 554:.\Generated_Source\PSoC4/UART.c ****             }
 555:.\Generated_Source\PSoC4/UART.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC4/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 544              		.loc 1 556 0
 545 0034 8B70     		strb	r3, [r1, #2]
 557:.\Generated_Source\PSoC4/UART.c **** 
 558:.\Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 546              		.loc 1 558 0
 547 0036 0B79     		ldrb	r3, [r1, #4]
 549:.\Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 548              		.loc 1 549 0
 549 0038 E4B2     		uxtb	r4, r4
 550              	.LVL44:
 551              		.loc 1 558 0
 552 003a 002B     		cmp	r3, #0
 553 003c 0FD0     		beq	.L41
 559:.\Generated_Source\PSoC4/UART.c ****             {
 560:.\Generated_Source\PSoC4/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 554              		.loc 1 560 0
 555 003e 0023     		mov	r3, #0
 556 0040 0B71     		strb	r3, [r1, #4]
 557 0042 0CE0     		b	.L41
 558              	.LVL45:
 559              	.L39:
 561:.\Generated_Source\PSoC4/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC4/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC4/UART.c ****                     #if( UART_HD_ENABLED )
 564:.\Generated_Source\PSoC4/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC4/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC4/UART.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC4/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC4/UART.c ****                             */
 569:.\Generated_Source\PSoC4/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC4/UART.c ****                         }
 571:.\Generated_Source\PSoC4/UART.c ****                     #else
 572:.\Generated_Source\PSoC4/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC4/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:.\Generated_Source\PSoC4/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC4/UART.c ****             }
 576:.\Generated_Source\PSoC4/UART.c **** 
 577:.\Generated_Source\PSoC4/UART.c ****         }
 578:.\Generated_Source\PSoC4/UART.c ****         else
 579:.\Generated_Source\PSoC4/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 560              		.loc 1 579 0
 561 0044 0A4B     		ldr	r3, .L49+8
 562              	.LVL46:
 563 0046 1B78     		ldrb	r3, [r3]
 564 0048 DBB2     		uxtb	r3, r3
 565              	.LVL47:
 580:.\Generated_Source\PSoC4/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 566              		.loc 1 580 0
 567 004a 9A06     		lsl	r2, r3, #26
 568 004c 07D5     		bpl	.L41
 581:.\Generated_Source\PSoC4/UART.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC4/UART.c ****                 rxData = UART_RXDATA_REG;
 569              		.loc 1 582 0
 570 004e 094A     		ldr	r2, .L49+12
ARM GAS  C:\temp\ccSYH5Oo.s 			page 22


 571 0050 1178     		ldrb	r1, [r2]
 572              	.LVL48:
 583:.\Generated_Source\PSoC4/UART.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC4/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 573              		.loc 1 584 0
 574 0052 1E22     		mov	r2, #30
 575 0054 1340     		and	r3, r2
 576              	.LVL49:
 585:.\Generated_Source\PSoC4/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC4/UART.c ****                 {
 587:.\Generated_Source\PSoC4/UART.c ****                     rxData = 0u;
 577              		.loc 1 587 0
 578 0056 5C42     		neg	r4, r3
 579 0058 6341     		adc	r3, r3, r4
 580 005a 5C42     		neg	r4, r3
 581 005c 0C40     		and	r4, r1
 582              	.LVL50:
 583              	.L41:
 588:.\Generated_Source\PSoC4/UART.c ****                 }
 589:.\Generated_Source\PSoC4/UART.c ****             }
 590:.\Generated_Source\PSoC4/UART.c ****         }
 591:.\Generated_Source\PSoC4/UART.c **** 
 592:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 584              		.loc 1 592 0
 585 005e 0020     		mov	r0, #0
 586 0060 FFF7FEFF 		bl	CyIntEnable
 587              	.LVL51:
 593:.\Generated_Source\PSoC4/UART.c **** 
 594:.\Generated_Source\PSoC4/UART.c ****     #else
 595:.\Generated_Source\PSoC4/UART.c **** 
 596:.\Generated_Source\PSoC4/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:.\Generated_Source\PSoC4/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC4/UART.c ****         {
 599:.\Generated_Source\PSoC4/UART.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC4/UART.c ****             rxData = UART_RXDATA_REG;
 601:.\Generated_Source\PSoC4/UART.c **** 
 602:.\Generated_Source\PSoC4/UART.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC4/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC4/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC4/UART.c ****             {
 606:.\Generated_Source\PSoC4/UART.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC4/UART.c ****             }
 608:.\Generated_Source\PSoC4/UART.c ****         }
 609:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC4/UART.c **** 
 611:.\Generated_Source\PSoC4/UART.c ****         return(rxData);
 612:.\Generated_Source\PSoC4/UART.c ****     }
 588              		.loc 1 612 0
 589              		@ sp needed
 590 0064 201C     		mov	r0, r4
 591              	.LVL52:
 592 0066 10BD     		pop	{r4, pc}
 593              	.L50:
 594              		.align	2
 595              	.L49:
 596 0068 00000000 		.word	.LANCHOR0
 597 006c 00000000 		.word	UART_rxBuffer
ARM GAS  C:\temp\ccSYH5Oo.s 			page 23


 598 0070 60000F40 		.word	1074724960
 599 0074 40000F40 		.word	1074724928
 600              		.cfi_endproc
 601              	.LFE9:
 602              		.size	UART_GetChar, .-UART_GetChar
 603              		.section	.text.UART_GetByte,"ax",%progbits
 604              		.align	1
 605              		.global	UART_GetByte
 606              		.code	16
 607              		.thumb_func
 608              		.type	UART_GetByte, %function
 609              	UART_GetByte:
 610              	.LFB10:
 613:.\Generated_Source\PSoC4/UART.c **** 
 614:.\Generated_Source\PSoC4/UART.c **** 
 615:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetByte
 617:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC4/UART.c ****     *
 619:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 620:.\Generated_Source\PSoC4/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC4/UART.c ****     *  condition.
 622:.\Generated_Source\PSoC4/UART.c ****     *
 623:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 624:.\Generated_Source\PSoC4/UART.c ****     *  None.
 625:.\Generated_Source\PSoC4/UART.c ****     *
 626:.\Generated_Source\PSoC4/UART.c ****     * Return:
 627:.\Generated_Source\PSoC4/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC4/UART.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC4/UART.c ****     *
 630:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 631:.\Generated_Source\PSoC4/UART.c ****     *  No.
 632:.\Generated_Source\PSoC4/UART.c ****     *
 633:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC4/UART.c ****     uint16 UART_GetByte(void) 
 635:.\Generated_Source\PSoC4/UART.c ****     {
 611              		.loc 1 635 0
 612              		.cfi_startproc
 613 0000 10B5     		push	{r4, lr}
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
 636:.\Generated_Source\PSoC4/UART.c ****         
 637:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC4/UART.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 617              		.loc 1 640 0
 618 0002 0020     		mov	r0, #0
 619 0004 FFF7FEFF 		bl	CyIntDisable
 620              	.LVL53:
 641:.\Generated_Source\PSoC4/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:.\Generated_Source\PSoC4/UART.c ****         UART_errorStatus = 0u;
 621              		.loc 1 642 0
 622 0008 0020     		mov	r0, #0
 641:.\Generated_Source\PSoC4/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 623              		.loc 1 641 0
ARM GAS  C:\temp\ccSYH5Oo.s 			page 24


 624 000a 054B     		ldr	r3, .L52
 643:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 644:.\Generated_Source\PSoC4/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:.\Generated_Source\PSoC4/UART.c ****     #else
 646:.\Generated_Source\PSoC4/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 647:.\Generated_Source\PSoC4/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC4/UART.c ****         
 649:.\Generated_Source\PSoC4/UART.c ****     }
 625              		.loc 1 649 0
 626              		@ sp needed
 641:.\Generated_Source\PSoC4/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 627              		.loc 1 641 0
 628 000c 1C78     		ldrb	r4, [r3]
 629              	.LVL54:
 642:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 630              		.loc 1 642 0
 631 000e 1870     		strb	r0, [r3]
 643:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 632              		.loc 1 643 0
 633 0010 FFF7FEFF 		bl	CyIntEnable
 634              	.LVL55:
 644:.\Generated_Source\PSoC4/UART.c ****     #else
 635              		.loc 1 644 0
 636 0014 FFF7FEFF 		bl	UART_ReadRxData
 637              	.LVL56:
 638 0018 2402     		lsl	r4, r4, #8
 639              	.LVL57:
 640 001a 2043     		orr	r0, r4
 641 001c 80B2     		uxth	r0, r0
 642              		.loc 1 649 0
 643 001e 10BD     		pop	{r4, pc}
 644              	.L53:
 645              		.align	2
 646              	.L52:
 647 0020 00000000 		.word	.LANCHOR0
 648              		.cfi_endproc
 649              	.LFE10:
 650              		.size	UART_GetByte, .-UART_GetByte
 651              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 652              		.align	1
 653              		.global	UART_GetRxBufferSize
 654              		.code	16
 655              		.thumb_func
 656              		.type	UART_GetRxBufferSize, %function
 657              	UART_GetRxBufferSize:
 658              	.LFB11:
 650:.\Generated_Source\PSoC4/UART.c **** 
 651:.\Generated_Source\PSoC4/UART.c **** 
 652:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC4/UART.c ****     *
 656:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 657:.\Generated_Source\PSoC4/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC4/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC4/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC4/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
ARM GAS  C:\temp\ccSYH5Oo.s 			page 25


 661:.\Generated_Source\PSoC4/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC4/UART.c ****     *    account.
 663:.\Generated_Source\PSoC4/UART.c ****     *
 664:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 665:.\Generated_Source\PSoC4/UART.c ****     *  None.
 666:.\Generated_Source\PSoC4/UART.c ****     *
 667:.\Generated_Source\PSoC4/UART.c ****     * Return:
 668:.\Generated_Source\PSoC4/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC4/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC4/UART.c ****     *
 671:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 672:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC4/UART.c ****     *
 676:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 677:.\Generated_Source\PSoC4/UART.c ****     *  No.
 678:.\Generated_Source\PSoC4/UART.c ****     *
 679:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 680:.\Generated_Source\PSoC4/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC4/UART.c ****     *
 682:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC4/UART.c ****                                                             
 685:.\Generated_Source\PSoC4/UART.c ****     {
 659              		.loc 1 685 0
 660              		.cfi_startproc
 661 0000 10B5     		push	{r4, lr}
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 4, -8
 664              		.cfi_offset 14, -4
 686:.\Generated_Source\PSoC4/UART.c ****         uint8 size;
 687:.\Generated_Source\PSoC4/UART.c **** 
 688:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC4/UART.c **** 
 690:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 665              		.loc 1 691 0
 666 0002 0020     		mov	r0, #0
 667 0004 FFF7FEFF 		bl	CyIntDisable
 668              	.LVL58:
 692:.\Generated_Source\PSoC4/UART.c **** 
 693:.\Generated_Source\PSoC4/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 669              		.loc 1 693 0
 670 0008 0D4A     		ldr	r2, .L59
 671 000a 9178     		ldrb	r1, [r2, #2]
 672 000c D378     		ldrb	r3, [r2, #3]
 673 000e 9942     		cmp	r1, r3
 674 0010 04D1     		bne	.L55
 694:.\Generated_Source\PSoC4/UART.c ****         {
 695:.\Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 675              		.loc 1 695 0
 676 0012 1479     		ldrb	r4, [r2, #4]
 677 0014 631E     		sub	r3, r4, #1
 678 0016 9C41     		sbc	r4, r4, r3
 679 0018 6442     		neg	r4, r4
 680 001a 0BE0     		b	.L58
ARM GAS  C:\temp\ccSYH5Oo.s 			page 26


 681              	.L55:
 696:.\Generated_Source\PSoC4/UART.c ****             {
 697:.\Generated_Source\PSoC4/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC4/UART.c ****             }
 699:.\Generated_Source\PSoC4/UART.c ****             else
 700:.\Generated_Source\PSoC4/UART.c ****             {
 701:.\Generated_Source\PSoC4/UART.c ****                 size = 0u;
 702:.\Generated_Source\PSoC4/UART.c ****             }
 703:.\Generated_Source\PSoC4/UART.c ****         }
 704:.\Generated_Source\PSoC4/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 682              		.loc 1 704 0
 683 001c 9178     		ldrb	r1, [r2, #2]
 684 001e D378     		ldrb	r3, [r2, #3]
 685 0020 9942     		cmp	r1, r3
 686 0022 03D2     		bcs	.L57
 705:.\Generated_Source\PSoC4/UART.c ****         {
 706:.\Generated_Source\PSoC4/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 687              		.loc 1 706 0
 688 0024 D378     		ldrb	r3, [r2, #3]
 689 0026 9478     		ldrb	r4, [r2, #2]
 690 0028 1C1B     		sub	r4, r3, r4
 691 002a 03E0     		b	.L58
 692              	.L57:
 707:.\Generated_Source\PSoC4/UART.c ****         }
 708:.\Generated_Source\PSoC4/UART.c ****         else
 709:.\Generated_Source\PSoC4/UART.c ****         {
 710:.\Generated_Source\PSoC4/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 693              		.loc 1 710 0
 694 002c D478     		ldrb	r4, [r2, #3]
 695 002e 9378     		ldrb	r3, [r2, #2]
 696 0030 013C     		sub	r4, r4, #1
 697 0032 E41A     		sub	r4, r4, r3
 698              	.L58:
 699 0034 E4B2     		uxtb	r4, r4
 700              	.LVL59:
 711:.\Generated_Source\PSoC4/UART.c ****         }
 712:.\Generated_Source\PSoC4/UART.c **** 
 713:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 701              		.loc 1 713 0
 702 0036 0020     		mov	r0, #0
 703 0038 FFF7FEFF 		bl	CyIntEnable
 704              	.LVL60:
 714:.\Generated_Source\PSoC4/UART.c **** 
 715:.\Generated_Source\PSoC4/UART.c ****     #else
 716:.\Generated_Source\PSoC4/UART.c **** 
 717:.\Generated_Source\PSoC4/UART.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC4/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC4/UART.c **** 
 720:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC4/UART.c **** 
 722:.\Generated_Source\PSoC4/UART.c ****         return(size);
 723:.\Generated_Source\PSoC4/UART.c ****     }
 705              		.loc 1 723 0
 706              		@ sp needed
 707 003c 201C     		mov	r0, r4
 708              	.LVL61:
 709 003e 10BD     		pop	{r4, pc}
ARM GAS  C:\temp\ccSYH5Oo.s 			page 27


 710              	.L60:
 711              		.align	2
 712              	.L59:
 713 0040 00000000 		.word	.LANCHOR0
 714              		.cfi_endproc
 715              	.LFE11:
 716              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 717              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 718              		.align	1
 719              		.global	UART_ClearRxBuffer
 720              		.code	16
 721              		.thumb_func
 722              		.type	UART_ClearRxBuffer, %function
 723              	UART_ClearRxBuffer:
 724              	.LFB12:
 724:.\Generated_Source\PSoC4/UART.c **** 
 725:.\Generated_Source\PSoC4/UART.c **** 
 726:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC4/UART.c ****     *
 730:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 731:.\Generated_Source\PSoC4/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC4/UART.c ****     *
 733:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 734:.\Generated_Source\PSoC4/UART.c ****     *  None.
 735:.\Generated_Source\PSoC4/UART.c ****     *
 736:.\Generated_Source\PSoC4/UART.c ****     * Return:
 737:.\Generated_Source\PSoC4/UART.c ****     *  None.
 738:.\Generated_Source\PSoC4/UART.c ****     *
 739:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 740:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC4/UART.c ****     *
 745:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 746:.\Generated_Source\PSoC4/UART.c ****     *  No.
 747:.\Generated_Source\PSoC4/UART.c ****     *
 748:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 749:.\Generated_Source\PSoC4/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC4/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC4/UART.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC4/UART.c ****     *
 753:.\Generated_Source\PSoC4/UART.c ****     * Side Effects:
 754:.\Generated_Source\PSoC4/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC4/UART.c ****     *
 756:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC4/UART.c ****     void UART_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC4/UART.c ****     {
 725              		.loc 1 758 0
 726              		.cfi_startproc
 727 0000 08B5     		push	{r3, lr}
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 3, -8
 730              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC4/UART.c ****         uint8 enableInterrupts;
ARM GAS  C:\temp\ccSYH5Oo.s 			page 28


 760:.\Generated_Source\PSoC4/UART.c **** 
 761:.\Generated_Source\PSoC4/UART.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC4/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 731              		.loc 1 762 0
 732 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 733              	.LVL62:
 763:.\Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 734              		.loc 1 763 0
 735 0006 0121     		mov	r1, #1
 736 0008 0A4B     		ldr	r3, .L62
 764:.\Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 765:.\Generated_Source\PSoC4/UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/UART.c **** 
 767:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC4/UART.c **** 
 769:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 771:.\Generated_Source\PSoC4/UART.c **** 
 772:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC4/UART.c **** 
 777:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 778:.\Generated_Source\PSoC4/UART.c **** 
 779:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC4/UART.c **** 
 781:.\Generated_Source\PSoC4/UART.c ****     }
 737              		.loc 1 781 0
 738              		@ sp needed
 763:.\Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 739              		.loc 1 763 0
 740 000a 1A78     		ldrb	r2, [r3]
 741 000c 0A43     		orr	r2, r1
 742 000e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 743              		.loc 1 764 0
 744 0010 1A78     		ldrb	r2, [r3]
 745 0012 8A43     		bic	r2, r1
 746 0014 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC4/UART.c **** 
 747              		.loc 1 765 0
 748 0016 FFF7FEFF 		bl	CyExitCriticalSection
 749              	.LVL63:
 770:.\Generated_Source\PSoC4/UART.c **** 
 750              		.loc 1 770 0
 751 001a 0020     		mov	r0, #0
 752 001c FFF7FEFF 		bl	CyIntDisable
 753              	.LVL64:
 772:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferWrite = 0u;
 754              		.loc 1 772 0
 755 0020 0020     		mov	r0, #0
 756 0022 054B     		ldr	r3, .L62+4
 757 0024 9870     		strb	r0, [r3, #2]
 773:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferLoopDetect = 0u;
 758              		.loc 1 773 0
 759 0026 D870     		strb	r0, [r3, #3]
ARM GAS  C:\temp\ccSYH5Oo.s 			page 29


 774:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferOverflow = 0u;
 760              		.loc 1 774 0
 761 0028 1871     		strb	r0, [r3, #4]
 775:.\Generated_Source\PSoC4/UART.c **** 
 762              		.loc 1 775 0
 763 002a 5871     		strb	r0, [r3, #5]
 777:.\Generated_Source\PSoC4/UART.c **** 
 764              		.loc 1 777 0
 765 002c FFF7FEFF 		bl	CyIntEnable
 766              	.LVL65:
 767              		.loc 1 781 0
 768 0030 08BD     		pop	{r3, pc}
 769              	.L63:
 770 0032 C046     		.align	2
 771              	.L62:
 772 0034 90000F40 		.word	1074725008
 773 0038 00000000 		.word	.LANCHOR0
 774              		.cfi_endproc
 775              	.LFE12:
 776              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 777              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 778              		.align	1
 779              		.global	UART_SetRxAddressMode
 780              		.code	16
 781              		.thumb_func
 782              		.type	UART_SetRxAddressMode, %function
 783              	UART_SetRxAddressMode:
 784              	.LFB13:
 782:.\Generated_Source\PSoC4/UART.c **** 
 783:.\Generated_Source\PSoC4/UART.c **** 
 784:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC4/UART.c ****     *
 788:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 789:.\Generated_Source\PSoC4/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC4/UART.c ****     *  UART.
 791:.\Generated_Source\PSoC4/UART.c ****     *
 792:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 793:.\Generated_Source\PSoC4/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC4/UART.c ****     *                                               detection
 796:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC4/UART.c ****     *                                               address detection
 798:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC4/UART.c ****     *                                               detection
 800:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC4/UART.c ****     *                                               address detection
 802:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC4/UART.c ****     *
 804:.\Generated_Source\PSoC4/UART.c ****     * Return:
 805:.\Generated_Source\PSoC4/UART.c ****     *  None.
 806:.\Generated_Source\PSoC4/UART.c ****     *
 807:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 808:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC4/UART.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
ARM GAS  C:\temp\ccSYH5Oo.s 			page 30


 811:.\Generated_Source\PSoC4/UART.c ****     *
 812:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC4/UART.c ****                                                         
 815:.\Generated_Source\PSoC4/UART.c ****     {
 785              		.loc 1 815 0
 786              		.cfi_startproc
 787              	.LVL66:
 816:.\Generated_Source\PSoC4/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC4/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC4/UART.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC4/UART.c ****                 {
 820:.\Generated_Source\PSoC4/UART.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC4/UART.c ****                 }
 822:.\Generated_Source\PSoC4/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC4/UART.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC4/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC4/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC4/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC4/UART.c **** 
 828:.\Generated_Source\PSoC4/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC4/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC4/UART.c ****                     UART_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC4/UART.c ****                     UART_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC4/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC4/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC4/UART.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC4/UART.c ****             {
 837:.\Generated_Source\PSoC4/UART.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC4/UART.c ****             }
 839:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC4/UART.c ****     }
 788              		.loc 1 840 0
 789              		@ sp needed
 790 0000 7047     		bx	lr
 791              		.cfi_endproc
 792              	.LFE13:
 793              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 794              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 795              		.align	1
 796              		.global	UART_SetRxAddress1
 797              		.code	16
 798              		.thumb_func
 799              		.type	UART_SetRxAddress1, %function
 800              	UART_SetRxAddress1:
 801              	.LFB14:
 841:.\Generated_Source\PSoC4/UART.c **** 
 842:.\Generated_Source\PSoC4/UART.c **** 
 843:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddress1
 845:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC4/UART.c ****     *
 847:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 848:.\Generated_Source\PSoC4/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC4/UART.c ****     *
 850:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
ARM GAS  C:\temp\ccSYH5Oo.s 			page 31


 851:.\Generated_Source\PSoC4/UART.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC4/UART.c ****     *
 853:.\Generated_Source\PSoC4/UART.c ****     * Return:
 854:.\Generated_Source\PSoC4/UART.c ****     *  None.
 855:.\Generated_Source\PSoC4/UART.c ****     *
 856:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC4/UART.c ****     {
 802              		.loc 1 858 0
 803              		.cfi_startproc
 804              	.LVL67:
 859:.\Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS1_REG = address;
 805              		.loc 1 859 0
 806 0000 014B     		ldr	r3, .L66
 860:.\Generated_Source\PSoC4/UART.c ****     }
 807              		.loc 1 860 0
 808              		@ sp needed
 859:.\Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS1_REG = address;
 809              		.loc 1 859 0
 810 0002 1870     		strb	r0, [r3]
 811              		.loc 1 860 0
 812 0004 7047     		bx	lr
 813              	.L67:
 814 0006 C046     		.align	2
 815              	.L66:
 816 0008 20000F40 		.word	1074724896
 817              		.cfi_endproc
 818              	.LFE14:
 819              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 820              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 821              		.align	1
 822              		.global	UART_SetRxAddress2
 823              		.code	16
 824              		.thumb_func
 825              		.type	UART_SetRxAddress2, %function
 826              	UART_SetRxAddress2:
 827              	.LFB15:
 861:.\Generated_Source\PSoC4/UART.c **** 
 862:.\Generated_Source\PSoC4/UART.c **** 
 863:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddress2
 865:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC4/UART.c ****     *
 867:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 868:.\Generated_Source\PSoC4/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC4/UART.c ****     *
 870:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 871:.\Generated_Source\PSoC4/UART.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC4/UART.c ****     *
 873:.\Generated_Source\PSoC4/UART.c ****     * Return:
 874:.\Generated_Source\PSoC4/UART.c ****     *  None.
 875:.\Generated_Source\PSoC4/UART.c ****     *
 876:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC4/UART.c ****     {
 828              		.loc 1 878 0
 829              		.cfi_startproc
ARM GAS  C:\temp\ccSYH5Oo.s 			page 32


 830              	.LVL68:
 879:.\Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS2_REG = address;
 831              		.loc 1 879 0
 832 0000 014B     		ldr	r3, .L69
 880:.\Generated_Source\PSoC4/UART.c ****     }
 833              		.loc 1 880 0
 834              		@ sp needed
 879:.\Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS2_REG = address;
 835              		.loc 1 879 0
 836 0002 1870     		strb	r0, [r3]
 837              		.loc 1 880 0
 838 0004 7047     		bx	lr
 839              	.L70:
 840 0006 C046     		.align	2
 841              	.L69:
 842 0008 30000F40 		.word	1074724912
 843              		.cfi_endproc
 844              	.LFE15:
 845              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 846              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 847              		.align	1
 848              		.global	UART_SetTxInterruptMode
 849              		.code	16
 850              		.thumb_func
 851              		.type	UART_SetTxInterruptMode, %function
 852              	UART_SetTxInterruptMode:
 853              	.LFB16:
 881:.\Generated_Source\PSoC4/UART.c **** 
 882:.\Generated_Source\PSoC4/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:.\Generated_Source\PSoC4/UART.c **** 
 884:.\Generated_Source\PSoC4/UART.c **** 
 885:.\Generated_Source\PSoC4/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC4/UART.c ****     *
 890:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 891:.\Generated_Source\PSoC4/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC4/UART.c ****     *  interrupt.
 893:.\Generated_Source\PSoC4/UART.c ****     *
 894:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 895:.\Generated_Source\PSoC4/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC4/UART.c ****     *
 901:.\Generated_Source\PSoC4/UART.c ****     * Return:
 902:.\Generated_Source\PSoC4/UART.c ****     *  None.
 903:.\Generated_Source\PSoC4/UART.c ****     *
 904:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 905:.\Generated_Source\PSoC4/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC4/UART.c ****     *
 907:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC4/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC4/UART.c ****     {
 854              		.loc 1 909 0
ARM GAS  C:\temp\ccSYH5Oo.s 			page 33


 855              		.cfi_startproc
 856              	.LVL69:
 910:.\Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 857              		.loc 1 910 0
 858 0000 014B     		ldr	r3, .L72
 911:.\Generated_Source\PSoC4/UART.c ****     }
 859              		.loc 1 911 0
 860              		@ sp needed
 910:.\Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 861              		.loc 1 910 0
 862 0002 1870     		strb	r0, [r3]
 863              		.loc 1 911 0
 864 0004 7047     		bx	lr
 865              	.L73:
 866 0006 C046     		.align	2
 867              	.L72:
 868 0008 81000F40 		.word	1074724993
 869              		.cfi_endproc
 870              	.LFE16:
 871              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 872              		.section	.text.UART_WriteTxData,"ax",%progbits
 873              		.align	1
 874              		.global	UART_WriteTxData
 875              		.code	16
 876              		.thumb_func
 877              		.type	UART_WriteTxData, %function
 878              	UART_WriteTxData:
 879              	.LFB17:
 912:.\Generated_Source\PSoC4/UART.c **** 
 913:.\Generated_Source\PSoC4/UART.c **** 
 914:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_WriteTxData
 916:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC4/UART.c ****     *
 918:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 919:.\Generated_Source\PSoC4/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC4/UART.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC4/UART.c ****     *  separately.
 922:.\Generated_Source\PSoC4/UART.c ****     *
 923:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 924:.\Generated_Source\PSoC4/UART.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC4/UART.c ****     *
 926:.\Generated_Source\PSoC4/UART.c ****     * Return:
 927:.\Generated_Source\PSoC4/UART.c ****     * None.
 928:.\Generated_Source\PSoC4/UART.c ****     *
 929:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 930:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC4/UART.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC4/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC4/UART.c ****     *    initialized.
 937:.\Generated_Source\PSoC4/UART.c ****     *
 938:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 939:.\Generated_Source\PSoC4/UART.c ****     *  No.
 940:.\Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\temp\ccSYH5Oo.s 			page 34


 941:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC4/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC4/UART.c ****     {
 880              		.loc 1 943 0
 881              		.cfi_startproc
 882              	.LVL70:
 883 0000 70B5     		push	{r4, r5, r6, lr}
 884              		.cfi_def_cfa_offset 16
 885              		.cfi_offset 4, -16
 886              		.cfi_offset 5, -12
 887              		.cfi_offset 6, -8
 888              		.cfi_offset 14, -4
 944:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 889              		.loc 1 945 0
 890 0002 104C     		ldr	r4, .L82
 943:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
 891              		.loc 1 943 0
 892 0004 061C     		mov	r6, r0
 893              		.loc 1 945 0
 894 0006 6378     		ldrb	r3, [r4, #1]
 895 0008 251C     		mov	r5, r4
 896 000a 002B     		cmp	r3, #0
 897 000c 19D0     		beq	.L74
 946:.\Generated_Source\PSoC4/UART.c ****         {
 947:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC4/UART.c **** 
 949:.\Generated_Source\PSoC4/UART.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
 898              		.loc 1 950 0
 899 000e 0220     		mov	r0, #2
 900              	.LVL71:
 901 0010 FFF7FEFF 		bl	CyIntDisable
 902              	.LVL72:
 951:.\Generated_Source\PSoC4/UART.c **** 
 952:.\Generated_Source\PSoC4/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 903              		.loc 1 952 0
 904 0014 A279     		ldrb	r2, [r4, #6]
 905 0016 E379     		ldrb	r3, [r4, #7]
 906 0018 9A42     		cmp	r2, r3
 907 001a 06D1     		bne	.L76
 953:.\Generated_Source\PSoC4/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 908              		.loc 1 953 0 discriminator 1
 909 001c 0A4A     		ldr	r2, .L82+4
 910 001e 1278     		ldrb	r2, [r2]
 952:.\Generated_Source\PSoC4/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 911              		.loc 1 952 0 discriminator 1
 912 0020 5207     		lsl	r2, r2, #29
 913 0022 02D4     		bmi	.L76
 954:.\Generated_Source\PSoC4/UART.c ****             {
 955:.\Generated_Source\PSoC4/UART.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = txDataByte;
 914              		.loc 1 956 0
 915 0024 094B     		ldr	r3, .L82+8
 916 0026 1E70     		strb	r6, [r3]
 917 0028 08E0     		b	.L77
 918              	.L76:
ARM GAS  C:\temp\ccSYH5Oo.s 			page 35


 957:.\Generated_Source\PSoC4/UART.c ****             }
 958:.\Generated_Source\PSoC4/UART.c ****             else
 959:.\Generated_Source\PSoC4/UART.c ****             {
 960:.\Generated_Source\PSoC4/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 919              		.loc 1 960 0
 920 002a FF2B     		cmp	r3, #255
 921 002c 01D1     		bne	.L78
 961:.\Generated_Source\PSoC4/UART.c ****                 {
 962:.\Generated_Source\PSoC4/UART.c ****                     UART_txBufferWrite = 0u;
 922              		.loc 1 962 0
 923 002e 0023     		mov	r3, #0
 924 0030 EB71     		strb	r3, [r5, #7]
 925              	.L78:
 963:.\Generated_Source\PSoC4/UART.c ****                 }
 964:.\Generated_Source\PSoC4/UART.c **** 
 965:.\Generated_Source\PSoC4/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 926              		.loc 1 965 0
 927 0032 EB79     		ldrb	r3, [r5, #7]
 928 0034 064A     		ldr	r2, .L82+12
 929 0036 D654     		strb	r6, [r2, r3]
 966:.\Generated_Source\PSoC4/UART.c **** 
 967:.\Generated_Source\PSoC4/UART.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC4/UART.c ****                 UART_txBufferWrite++;
 930              		.loc 1 968 0
 931 0038 0133     		add	r3, r3, #1
 932 003a EB71     		strb	r3, [r5, #7]
 933              	.L77:
 969:.\Generated_Source\PSoC4/UART.c ****             }
 970:.\Generated_Source\PSoC4/UART.c **** 
 971:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 934              		.loc 1 971 0
 935 003c 0220     		mov	r0, #2
 936 003e FFF7FEFF 		bl	CyIntEnable
 937              	.LVL73:
 938              	.L74:
 972:.\Generated_Source\PSoC4/UART.c **** 
 973:.\Generated_Source\PSoC4/UART.c ****         #else
 974:.\Generated_Source\PSoC4/UART.c **** 
 975:.\Generated_Source\PSoC4/UART.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC4/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:.\Generated_Source\PSoC4/UART.c **** 
 978:.\Generated_Source\PSoC4/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC4/UART.c ****         }
 980:.\Generated_Source\PSoC4/UART.c ****     }
 939              		.loc 1 980 0
 940              		@ sp needed
 941 0042 70BD     		pop	{r4, r5, r6, pc}
 942              	.L83:
 943              		.align	2
 944              	.L82:
 945 0044 00000000 		.word	.LANCHOR0
 946 0048 61000F40 		.word	1074724961
 947 004c 41000F40 		.word	1074724929
 948 0050 00000000 		.word	UART_txBuffer
 949              		.cfi_endproc
 950              	.LFE17:
 951              		.size	UART_WriteTxData, .-UART_WriteTxData
ARM GAS  C:\temp\ccSYH5Oo.s 			page 36


 952              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 953              		.align	1
 954              		.global	UART_ReadTxStatus
 955              		.code	16
 956              		.thumb_func
 957              		.type	UART_ReadTxStatus, %function
 958              	UART_ReadTxStatus:
 959              	.LFB18:
 981:.\Generated_Source\PSoC4/UART.c **** 
 982:.\Generated_Source\PSoC4/UART.c **** 
 983:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadTxStatus
 985:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC4/UART.c ****     *
 987:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 988:.\Generated_Source\PSoC4/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC4/UART.c ****     *
 990:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 991:.\Generated_Source\PSoC4/UART.c ****     *  None.
 992:.\Generated_Source\PSoC4/UART.c ****     *
 993:.\Generated_Source\PSoC4/UART.c ****     * Return:
 994:.\Generated_Source\PSoC4/UART.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC4/UART.c ****     *
 996:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 997:.\Generated_Source\PSoC4/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC4/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC4/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC4/UART.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC4/UART.c ****     *
1002:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC4/UART.c ****     {
 960              		.loc 1 1004 0
 961              		.cfi_startproc
1005:.\Generated_Source\PSoC4/UART.c ****         return(UART_TXSTATUS_REG);
 962              		.loc 1 1005 0
 963 0000 014B     		ldr	r3, .L85
1006:.\Generated_Source\PSoC4/UART.c ****     }
 964              		.loc 1 1006 0
 965              		@ sp needed
1005:.\Generated_Source\PSoC4/UART.c ****         return(UART_TXSTATUS_REG);
 966              		.loc 1 1005 0
 967 0002 1878     		ldrb	r0, [r3]
 968 0004 C0B2     		uxtb	r0, r0
 969              		.loc 1 1006 0
 970 0006 7047     		bx	lr
 971              	.L86:
 972              		.align	2
 973              	.L85:
 974 0008 61000F40 		.word	1074724961
 975              		.cfi_endproc
 976              	.LFE18:
 977              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 978              		.section	.text.UART_PutChar,"ax",%progbits
 979              		.align	1
 980              		.global	UART_PutChar
 981              		.code	16
ARM GAS  C:\temp\ccSYH5Oo.s 			page 37


 982              		.thumb_func
 983              		.type	UART_PutChar, %function
 984              	UART_PutChar:
 985              	.LFB19:
1007:.\Generated_Source\PSoC4/UART.c **** 
1008:.\Generated_Source\PSoC4/UART.c **** 
1009:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutChar
1011:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/UART.c ****     *
1013:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1014:.\Generated_Source\PSoC4/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC4/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC4/UART.c ****     *  hold the data.
1017:.\Generated_Source\PSoC4/UART.c ****     *
1018:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1019:.\Generated_Source\PSoC4/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC4/UART.c ****     *
1021:.\Generated_Source\PSoC4/UART.c ****     * Return:
1022:.\Generated_Source\PSoC4/UART.c ****     *  None.
1023:.\Generated_Source\PSoC4/UART.c ****     *
1024:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1025:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC4/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC4/UART.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC4/UART.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1033:.\Generated_Source\PSoC4/UART.c ****     *
1034:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1035:.\Generated_Source\PSoC4/UART.c ****     *  No.
1036:.\Generated_Source\PSoC4/UART.c ****     *
1037:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1038:.\Generated_Source\PSoC4/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC4/UART.c ****     *
1040:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC4/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC4/UART.c ****     {
 986              		.loc 1 1042 0
 987              		.cfi_startproc
 988              	.LVL74:
 989 0000 38B5     		push	{r3, r4, r5, lr}
 990              		.cfi_def_cfa_offset 16
 991              		.cfi_offset 3, -16
 992              		.cfi_offset 4, -12
 993              		.cfi_offset 5, -8
 994              		.cfi_offset 14, -4
1043:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC4/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC4/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC4/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC4/UART.c ****         */
1048:.\Generated_Source\PSoC4/UART.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC4/UART.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\temp\ccSYH5Oo.s 			page 38


1051:.\Generated_Source\PSoC4/UART.c ****         do
1052:.\Generated_Source\PSoC4/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC4/UART.c **** 
1054:.\Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC4/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
1057:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC4/UART.c **** 
1059:.\Generated_Source\PSoC4/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
 995              		.loc 1 1059 0
 996 0002 154C     		ldr	r4, .L98
 997 0004 E279     		ldrb	r2, [r4, #7]
 998              	.L90:
 999              	.LVL75:
1060:.\Generated_Source\PSoC4/UART.c ****             locTxBufferRead  = UART_txBufferRead;
 1000              		.loc 1 1060 0
 1001 0006 A179     		ldrb	r1, [r4, #6]
 1002 0008 C9B2     		uxtb	r1, r1
 1003              	.LVL76:
1061:.\Generated_Source\PSoC4/UART.c **** 
1062:.\Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC4/UART.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
1065:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC4/UART.c ****         }
1067:.\Generated_Source\PSoC4/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 1004              		.loc 1 1067 0
 1005 000a 8A42     		cmp	r2, r1
 1006 000c 02D2     		bcs	.L88
 1007              		.loc 1 1067 0 is_stmt 0 discriminator 1
 1008 000e 4B1E     		sub	r3, r1, #1
 1009 0010 D31A     		sub	r3, r2, r3
 1010 0012 01E0     		b	.L97
 1011              	.L88:
1068:.\Generated_Source\PSoC4/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1012              		.loc 1 1068 0 is_stmt 1 discriminator 2
 1013 0014 531A     		sub	r3, r2, r1
1067:.\Generated_Source\PSoC4/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1014              		.loc 1 1067 0 discriminator 2
 1015 0016 FE3B     		sub	r3, r3, #254
 1016              	.L97:
 1017 0018 5D42     		neg	r5, r3
 1018 001a 6B41     		adc	r3, r3, r5
 1019 001c DBB2     		uxtb	r3, r3
1069:.\Generated_Source\PSoC4/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
 1020              		.loc 1 1069 0 discriminator 2
 1021 001e 002B     		cmp	r3, #0
 1022 0020 F1D1     		bne	.L90
 1023 0022 0E4D     		ldr	r5, .L98+4
1070:.\Generated_Source\PSoC4/UART.c **** 
1071:.\Generated_Source\PSoC4/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 1024              		.loc 1 1071 0
 1025 0024 9142     		cmp	r1, r2
 1026 0026 05D1     		bne	.L91
1072:.\Generated_Source\PSoC4/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1027              		.loc 1 1072 0 discriminator 1
 1028 0028 2B78     		ldrb	r3, [r5]
ARM GAS  C:\temp\ccSYH5Oo.s 			page 39


1071:.\Generated_Source\PSoC4/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1029              		.loc 1 1071 0 discriminator 1
 1030 002a 5B07     		lsl	r3, r3, #29
 1031 002c 02D4     		bmi	.L91
1073:.\Generated_Source\PSoC4/UART.c ****         {
1074:.\Generated_Source\PSoC4/UART.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC4/UART.c ****             UART_TXDATA_REG = txDataByte;
 1032              		.loc 1 1075 0
 1033 002e 0C4B     		ldr	r3, .L98+8
 1034 0030 1870     		strb	r0, [r3]
 1035              	.LVL77:
 1036 0032 0FE0     		b	.L87
 1037              	.LVL78:
 1038              	.L91:
1076:.\Generated_Source\PSoC4/UART.c ****         }
1077:.\Generated_Source\PSoC4/UART.c ****         else
1078:.\Generated_Source\PSoC4/UART.c ****         {
1079:.\Generated_Source\PSoC4/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC4/UART.c ****             {
1081:.\Generated_Source\PSoC4/UART.c ****                 locTxBufferWrite = 0u;
 1039              		.loc 1 1081 0
 1040 0034 131C     		mov	r3, r2
 1041 0036 FF3B     		sub	r3, r3, #255
 1042 0038 591E     		sub	r1, r3, #1
 1043 003a 8B41     		sbc	r3, r3, r1
 1044              	.LVL79:
 1045 003c 5B42     		neg	r3, r3
 1046 003e 1A40     		and	r2, r3
 1047              	.LVL80:
1082:.\Generated_Source\PSoC4/UART.c ****             }
1083:.\Generated_Source\PSoC4/UART.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC4/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
 1048              		.loc 1 1084 0
 1049 0040 084B     		ldr	r3, .L98+12
 1050 0042 9854     		strb	r0, [r3, r2]
 1051              	.LVL81:
1085:.\Generated_Source\PSoC4/UART.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC4/UART.c **** 
1087:.\Generated_Source\PSoC4/UART.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
1090:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC4/UART.c **** 
1092:.\Generated_Source\PSoC4/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC4/UART.c **** 
1094:.\Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
1096:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC4/UART.c **** 
1098:.\Generated_Source\PSoC4/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
 1052              		.loc 1 1098 0
 1053 0044 0220     		mov	r0, #2
 1054              	.LVL82:
1085:.\Generated_Source\PSoC4/UART.c ****             locTxBufferWrite++;
 1055              		.loc 1 1085 0
 1056 0046 0132     		add	r2, r2, #1
 1057              	.LVL83:
ARM GAS  C:\temp\ccSYH5Oo.s 			page 40


1092:.\Generated_Source\PSoC4/UART.c **** 
 1058              		.loc 1 1092 0
 1059 0048 E271     		strb	r2, [r4, #7]
 1060              		.loc 1 1098 0
 1061 004a 2B78     		ldrb	r3, [r5]
 1062              	.LVL84:
 1063 004c 0342     		tst	r3, r0
 1064 004e 01D0     		beq	.L87
1099:.\Generated_Source\PSoC4/UART.c ****             {
1100:.\Generated_Source\PSoC4/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC4/UART.c ****                 UART_SetPendingTxInt();
 1065              		.loc 1 1101 0
 1066 0050 FFF7FEFF 		bl	CyIntSetPending
 1067              	.LVL85:
 1068              	.L87:
1102:.\Generated_Source\PSoC4/UART.c ****             }
1103:.\Generated_Source\PSoC4/UART.c ****         }
1104:.\Generated_Source\PSoC4/UART.c **** 
1105:.\Generated_Source\PSoC4/UART.c ****     #else
1106:.\Generated_Source\PSoC4/UART.c **** 
1107:.\Generated_Source\PSoC4/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:.\Generated_Source\PSoC4/UART.c ****         {
1109:.\Generated_Source\PSoC4/UART.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC4/UART.c ****         }
1111:.\Generated_Source\PSoC4/UART.c **** 
1112:.\Generated_Source\PSoC4/UART.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC4/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:.\Generated_Source\PSoC4/UART.c **** 
1115:.\Generated_Source\PSoC4/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC4/UART.c ****     }
 1069              		.loc 1 1116 0
 1070              		@ sp needed
 1071 0054 38BD     		pop	{r3, r4, r5, pc}
 1072              	.L99:
 1073 0056 C046     		.align	2
 1074              	.L98:
 1075 0058 00000000 		.word	.LANCHOR0
 1076 005c 61000F40 		.word	1074724961
 1077 0060 41000F40 		.word	1074724929
 1078 0064 00000000 		.word	UART_txBuffer
 1079              		.cfi_endproc
 1080              	.LFE19:
 1081              		.size	UART_PutChar, .-UART_PutChar
 1082              		.section	.text.UART_PutString,"ax",%progbits
 1083              		.align	1
 1084              		.global	UART_PutString
 1085              		.code	16
 1086              		.thumb_func
 1087              		.type	UART_PutString, %function
 1088              	UART_PutString:
 1089              	.LFB20:
1117:.\Generated_Source\PSoC4/UART.c **** 
1118:.\Generated_Source\PSoC4/UART.c **** 
1119:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutString
1121:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\temp\ccSYH5Oo.s 			page 41


1123:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1124:.\Generated_Source\PSoC4/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC4/UART.c ****     *
1126:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1127:.\Generated_Source\PSoC4/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC4/UART.c ****     *
1129:.\Generated_Source\PSoC4/UART.c ****     * Return:
1130:.\Generated_Source\PSoC4/UART.c ****     *  None.
1131:.\Generated_Source\PSoC4/UART.c ****     *
1132:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1133:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1135:.\Generated_Source\PSoC4/UART.c ****     *
1136:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1137:.\Generated_Source\PSoC4/UART.c ****     *  No.
1138:.\Generated_Source\PSoC4/UART.c ****     *
1139:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1140:.\Generated_Source\PSoC4/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC4/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC4/UART.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC4/UART.c ****     *
1144:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC4/UART.c ****     void UART_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC4/UART.c ****     {
 1090              		.loc 1 1146 0
 1091              		.cfi_startproc
 1092              	.LVL86:
 1093 0000 38B5     		push	{r3, r4, r5, lr}
 1094              		.cfi_def_cfa_offset 16
 1095              		.cfi_offset 3, -16
 1096              		.cfi_offset 4, -12
 1097              		.cfi_offset 5, -8
 1098              		.cfi_offset 14, -4
 1099 0002 0024     		mov	r4, #0
1147:.\Generated_Source\PSoC4/UART.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC4/UART.c **** 
1149:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 1100              		.loc 1 1150 0
 1101 0004 064B     		ldr	r3, .L105
1146:.\Generated_Source\PSoC4/UART.c ****         uint16 bufIndex = 0u;
 1102              		.loc 1 1146 0
 1103 0006 051C     		mov	r5, r0
 1104              		.loc 1 1150 0
 1105 0008 5B78     		ldrb	r3, [r3, #1]
 1106 000a A342     		cmp	r3, r4
 1107 000c 07D0     		beq	.L100
 1108              	.LVL87:
 1109              	.L101:
1151:.\Generated_Source\PSoC4/UART.c ****         {
1152:.\Generated_Source\PSoC4/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC4/UART.c ****             while(string[bufIndex] != (char8) 0)
 1110              		.loc 1 1153 0
 1111 000e 285D     		ldrb	r0, [r5, r4]
 1112 0010 0028     		cmp	r0, #0
 1113 0012 04D0     		beq	.L100
1154:.\Generated_Source\PSoC4/UART.c ****             {
ARM GAS  C:\temp\ccSYH5Oo.s 			page 42


1155:.\Generated_Source\PSoC4/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
1156:.\Generated_Source\PSoC4/UART.c ****                 bufIndex++;
 1114              		.loc 1 1156 0
 1115 0014 0134     		add	r4, r4, #1
 1116              	.LVL88:
1155:.\Generated_Source\PSoC4/UART.c ****                 bufIndex++;
 1117              		.loc 1 1155 0
 1118 0016 FFF7FEFF 		bl	UART_PutChar
 1119              	.LVL89:
 1120              		.loc 1 1156 0
 1121 001a A4B2     		uxth	r4, r4
 1122              	.LVL90:
 1123 001c F7E7     		b	.L101
 1124              	.LVL91:
 1125              	.L100:
1157:.\Generated_Source\PSoC4/UART.c ****             }
1158:.\Generated_Source\PSoC4/UART.c ****         }
1159:.\Generated_Source\PSoC4/UART.c ****     }
 1126              		.loc 1 1159 0
 1127              		@ sp needed
 1128              	.LVL92:
 1129 001e 38BD     		pop	{r3, r4, r5, pc}
 1130              	.L106:
 1131              		.align	2
 1132              	.L105:
 1133 0020 00000000 		.word	.LANCHOR0
 1134              		.cfi_endproc
 1135              	.LFE20:
 1136              		.size	UART_PutString, .-UART_PutString
 1137              		.section	.text.UART_PutArray,"ax",%progbits
 1138              		.align	1
 1139              		.global	UART_PutArray
 1140              		.code	16
 1141              		.thumb_func
 1142              		.type	UART_PutArray, %function
 1143              	UART_PutArray:
 1144              	.LFB21:
1160:.\Generated_Source\PSoC4/UART.c **** 
1161:.\Generated_Source\PSoC4/UART.c **** 
1162:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutArray
1164:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC4/UART.c ****     *
1166:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1167:.\Generated_Source\PSoC4/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC4/UART.c ****     *  transmission.
1169:.\Generated_Source\PSoC4/UART.c ****     *
1170:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1171:.\Generated_Source\PSoC4/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC4/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC4/UART.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC4/UART.c ****     *
1175:.\Generated_Source\PSoC4/UART.c ****     * Return:
1176:.\Generated_Source\PSoC4/UART.c ****     *  None.
1177:.\Generated_Source\PSoC4/UART.c ****     *
1178:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1179:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
ARM GAS  C:\temp\ccSYH5Oo.s 			page 43


1180:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1181:.\Generated_Source\PSoC4/UART.c ****     *
1182:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1183:.\Generated_Source\PSoC4/UART.c ****     *  No.
1184:.\Generated_Source\PSoC4/UART.c ****     *
1185:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1186:.\Generated_Source\PSoC4/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC4/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC4/UART.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC4/UART.c ****     *
1190:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC4/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC4/UART.c ****                                                                     
1193:.\Generated_Source\PSoC4/UART.c ****     {
 1145              		.loc 1 1193 0
 1146              		.cfi_startproc
 1147              	.LVL93:
 1148 0000 38B5     		push	{r3, r4, r5, lr}
 1149              		.cfi_def_cfa_offset 16
 1150              		.cfi_offset 3, -16
 1151              		.cfi_offset 4, -12
 1152              		.cfi_offset 5, -8
 1153              		.cfi_offset 14, -4
1194:.\Generated_Source\PSoC4/UART.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC4/UART.c **** 
1196:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 1154              		.loc 1 1197 0
 1155 0002 074B     		ldr	r3, .L112
 1156 0004 5B78     		ldrb	r3, [r3, #1]
 1157 0006 002B     		cmp	r3, #0
 1158 0008 08D0     		beq	.L107
 1159 000a 041C     		mov	r4, r0
 1160 000c 4518     		add	r5, r0, r1
 1161              	.LVL94:
 1162              	.L109:
1198:.\Generated_Source\PSoC4/UART.c ****         {
1199:.\Generated_Source\PSoC4/UART.c ****             while(bufIndex < byteCount)
 1163              		.loc 1 1199 0
 1164 000e AC42     		cmp	r4, r5
 1165 0010 04D0     		beq	.L107
1200:.\Generated_Source\PSoC4/UART.c ****             {
1201:.\Generated_Source\PSoC4/UART.c ****                 UART_PutChar(string[bufIndex]);
 1166              		.loc 1 1201 0
 1167 0012 2078     		ldrb	r0, [r4]
 1168 0014 FFF7FEFF 		bl	UART_PutChar
 1169              	.LVL95:
 1170 0018 0134     		add	r4, r4, #1
 1171              	.LVL96:
 1172 001a F8E7     		b	.L109
 1173              	.L107:
1202:.\Generated_Source\PSoC4/UART.c ****                 bufIndex++;
1203:.\Generated_Source\PSoC4/UART.c ****             }
1204:.\Generated_Source\PSoC4/UART.c ****         }
1205:.\Generated_Source\PSoC4/UART.c ****     }
 1174              		.loc 1 1205 0
 1175              		@ sp needed
ARM GAS  C:\temp\ccSYH5Oo.s 			page 44


 1176 001c 38BD     		pop	{r3, r4, r5, pc}
 1177              	.L113:
 1178 001e C046     		.align	2
 1179              	.L112:
 1180 0020 00000000 		.word	.LANCHOR0
 1181              		.cfi_endproc
 1182              	.LFE21:
 1183              		.size	UART_PutArray, .-UART_PutArray
 1184              		.section	.text.UART_PutCRLF,"ax",%progbits
 1185              		.align	1
 1186              		.global	UART_PutCRLF
 1187              		.code	16
 1188              		.thumb_func
 1189              		.type	UART_PutCRLF, %function
 1190              	UART_PutCRLF:
 1191              	.LFB22:
1206:.\Generated_Source\PSoC4/UART.c **** 
1207:.\Generated_Source\PSoC4/UART.c **** 
1208:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutCRLF
1210:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC4/UART.c ****     *
1212:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1213:.\Generated_Source\PSoC4/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC4/UART.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC4/UART.c ****     *
1216:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1217:.\Generated_Source\PSoC4/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC4/UART.c ****     *
1219:.\Generated_Source\PSoC4/UART.c ****     * Return:
1220:.\Generated_Source\PSoC4/UART.c ****     *  None.
1221:.\Generated_Source\PSoC4/UART.c ****     *
1222:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1223:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1225:.\Generated_Source\PSoC4/UART.c ****     *
1226:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1227:.\Generated_Source\PSoC4/UART.c ****     *  No.
1228:.\Generated_Source\PSoC4/UART.c ****     *
1229:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC4/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC4/UART.c ****     {
 1192              		.loc 1 1231 0
 1193              		.cfi_startproc
 1194              	.LVL97:
 1195 0000 08B5     		push	{r3, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 3, -8
 1198              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 1199              		.loc 1 1233 0
 1200 0002 064B     		ldr	r3, .L119
 1201 0004 5B78     		ldrb	r3, [r3, #1]
 1202 0006 002B     		cmp	r3, #0
 1203 0008 07D0     		beq	.L114
1234:.\Generated_Source\PSoC4/UART.c ****         {
ARM GAS  C:\temp\ccSYH5Oo.s 			page 45


1235:.\Generated_Source\PSoC4/UART.c ****             UART_PutChar(txDataByte);
 1204              		.loc 1 1235 0
 1205 000a FFF7FEFF 		bl	UART_PutChar
 1206              	.LVL98:
1236:.\Generated_Source\PSoC4/UART.c ****             UART_PutChar(0x0Du);
 1207              		.loc 1 1236 0
 1208 000e 0D20     		mov	r0, #13
 1209 0010 FFF7FEFF 		bl	UART_PutChar
 1210              	.LVL99:
1237:.\Generated_Source\PSoC4/UART.c ****             UART_PutChar(0x0Au);
 1211              		.loc 1 1237 0
 1212 0014 0A20     		mov	r0, #10
 1213 0016 FFF7FEFF 		bl	UART_PutChar
 1214              	.LVL100:
 1215              	.L114:
1238:.\Generated_Source\PSoC4/UART.c ****         }
1239:.\Generated_Source\PSoC4/UART.c ****     }
 1216              		.loc 1 1239 0
 1217              		@ sp needed
 1218 001a 08BD     		pop	{r3, pc}
 1219              	.L120:
 1220              		.align	2
 1221              	.L119:
 1222 001c 00000000 		.word	.LANCHOR0
 1223              		.cfi_endproc
 1224              	.LFE22:
 1225              		.size	UART_PutCRLF, .-UART_PutCRLF
 1226              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1227              		.align	1
 1228              		.global	UART_GetTxBufferSize
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	UART_GetTxBufferSize, %function
 1232              	UART_GetTxBufferSize:
 1233              	.LFB23:
1240:.\Generated_Source\PSoC4/UART.c **** 
1241:.\Generated_Source\PSoC4/UART.c **** 
1242:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC4/UART.c ****     *
1246:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1247:.\Generated_Source\PSoC4/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC4/UART.c ****     *  transmitted.
1249:.\Generated_Source\PSoC4/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC4/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC4/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC4/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC4/UART.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC4/UART.c ****     *
1255:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1256:.\Generated_Source\PSoC4/UART.c ****     *  None.
1257:.\Generated_Source\PSoC4/UART.c ****     *
1258:.\Generated_Source\PSoC4/UART.c ****     * Return:
1259:.\Generated_Source\PSoC4/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC4/UART.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\temp\ccSYH5Oo.s 			page 46


1262:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1263:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC4/UART.c ****     *
1266:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1267:.\Generated_Source\PSoC4/UART.c ****     *  No.
1268:.\Generated_Source\PSoC4/UART.c ****     *
1269:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1270:.\Generated_Source\PSoC4/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC4/UART.c ****     *
1272:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC4/UART.c ****                                                             
1275:.\Generated_Source\PSoC4/UART.c ****     {
 1234              		.loc 1 1275 0
 1235              		.cfi_startproc
 1236 0000 10B5     		push	{r4, lr}
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 4, -8
 1239              		.cfi_offset 14, -4
1276:.\Generated_Source\PSoC4/UART.c ****         uint8 size;
1277:.\Generated_Source\PSoC4/UART.c **** 
1278:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC4/UART.c **** 
1280:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC4/UART.c ****         UART_DisableTxInt();
 1240              		.loc 1 1281 0
 1241 0002 0220     		mov	r0, #2
 1242 0004 FFF7FEFF 		bl	CyIntDisable
 1243              	.LVL101:
1282:.\Generated_Source\PSoC4/UART.c **** 
1283:.\Generated_Source\PSoC4/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 1244              		.loc 1 1283 0
 1245 0008 084B     		ldr	r3, .L126
1284:.\Generated_Source\PSoC4/UART.c ****         {
1285:.\Generated_Source\PSoC4/UART.c ****             size = 0u;
 1246              		.loc 1 1285 0
 1247 000a 0024     		mov	r4, #0
1283:.\Generated_Source\PSoC4/UART.c ****         {
 1248              		.loc 1 1283 0
 1249 000c 9A79     		ldrb	r2, [r3, #6]
 1250 000e D879     		ldrb	r0, [r3, #7]
 1251 0010 8242     		cmp	r2, r0
 1252 0012 06D0     		beq	.L122
1286:.\Generated_Source\PSoC4/UART.c ****         }
1287:.\Generated_Source\PSoC4/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 1253              		.loc 1 1287 0
 1254 0014 9A79     		ldrb	r2, [r3, #6]
1288:.\Generated_Source\PSoC4/UART.c ****         {
1289:.\Generated_Source\PSoC4/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 1255              		.loc 1 1289 0
 1256 0016 9B79     		ldrb	r3, [r3, #6]
1287:.\Generated_Source\PSoC4/UART.c ****         {
 1257              		.loc 1 1287 0
 1258 0018 8242     		cmp	r2, r0
 1259 001a 00D3     		bcc	.L125
 1260 001c 0138     		sub	r0, r0, #1
ARM GAS  C:\temp\ccSYH5Oo.s 			page 47


 1261              	.L125:
1290:.\Generated_Source\PSoC4/UART.c ****         }
1291:.\Generated_Source\PSoC4/UART.c ****         else
1292:.\Generated_Source\PSoC4/UART.c ****         {
1293:.\Generated_Source\PSoC4/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 1262              		.loc 1 1293 0
 1263 001e C01A     		sub	r0, r0, r3
 1264 0020 C4B2     		uxtb	r4, r0
 1265              	.LVL102:
 1266              	.L122:
1294:.\Generated_Source\PSoC4/UART.c ****                     UART_txBufferWrite;
1295:.\Generated_Source\PSoC4/UART.c ****         }
1296:.\Generated_Source\PSoC4/UART.c **** 
1297:.\Generated_Source\PSoC4/UART.c ****         UART_EnableTxInt();
 1267              		.loc 1 1297 0
 1268 0022 0220     		mov	r0, #2
 1269 0024 FFF7FEFF 		bl	CyIntEnable
 1270              	.LVL103:
1298:.\Generated_Source\PSoC4/UART.c **** 
1299:.\Generated_Source\PSoC4/UART.c ****     #else
1300:.\Generated_Source\PSoC4/UART.c **** 
1301:.\Generated_Source\PSoC4/UART.c ****         size = UART_TXSTATUS_REG;
1302:.\Generated_Source\PSoC4/UART.c **** 
1303:.\Generated_Source\PSoC4/UART.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC4/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:.\Generated_Source\PSoC4/UART.c ****         {
1306:.\Generated_Source\PSoC4/UART.c ****             size = UART_FIFO_LENGTH;
1307:.\Generated_Source\PSoC4/UART.c ****         }
1308:.\Generated_Source\PSoC4/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:.\Generated_Source\PSoC4/UART.c ****         {
1310:.\Generated_Source\PSoC4/UART.c ****             size = 0u;
1311:.\Generated_Source\PSoC4/UART.c ****         }
1312:.\Generated_Source\PSoC4/UART.c ****         else
1313:.\Generated_Source\PSoC4/UART.c ****         {
1314:.\Generated_Source\PSoC4/UART.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC4/UART.c ****             size = 1u;
1316:.\Generated_Source\PSoC4/UART.c ****         }
1317:.\Generated_Source\PSoC4/UART.c **** 
1318:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC4/UART.c **** 
1320:.\Generated_Source\PSoC4/UART.c ****     return(size);
1321:.\Generated_Source\PSoC4/UART.c ****     }
 1271              		.loc 1 1321 0
 1272              		@ sp needed
 1273 0028 201C     		mov	r0, r4
 1274              	.LVL104:
 1275 002a 10BD     		pop	{r4, pc}
 1276              	.L127:
 1277              		.align	2
 1278              	.L126:
 1279 002c 00000000 		.word	.LANCHOR0
 1280              		.cfi_endproc
 1281              	.LFE23:
 1282              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1283              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1284              		.align	1
 1285              		.global	UART_ClearTxBuffer
ARM GAS  C:\temp\ccSYH5Oo.s 			page 48


 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	UART_ClearTxBuffer, %function
 1289              	UART_ClearTxBuffer:
 1290              	.LFB24:
1322:.\Generated_Source\PSoC4/UART.c **** 
1323:.\Generated_Source\PSoC4/UART.c **** 
1324:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC4/UART.c ****     *
1328:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1329:.\Generated_Source\PSoC4/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC4/UART.c ****     *
1331:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1332:.\Generated_Source\PSoC4/UART.c ****     *  None.
1333:.\Generated_Source\PSoC4/UART.c ****     *
1334:.\Generated_Source\PSoC4/UART.c ****     * Return:
1335:.\Generated_Source\PSoC4/UART.c ****     *  None.
1336:.\Generated_Source\PSoC4/UART.c ****     *
1337:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1338:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC4/UART.c ****     *
1341:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1342:.\Generated_Source\PSoC4/UART.c ****     *  No.
1343:.\Generated_Source\PSoC4/UART.c ****     *
1344:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1345:.\Generated_Source\PSoC4/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC4/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC4/UART.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC4/UART.c ****     *
1349:.\Generated_Source\PSoC4/UART.c ****     * Side Effects:
1350:.\Generated_Source\PSoC4/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC4/UART.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC4/UART.c ****     *
1353:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC4/UART.c ****     void UART_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC4/UART.c ****     {
 1291              		.loc 1 1355 0
 1292              		.cfi_startproc
 1293 0000 08B5     		push	{r3, lr}
 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 3, -8
 1296              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC4/UART.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC4/UART.c **** 
1358:.\Generated_Source\PSoC4/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1297              		.loc 1 1358 0
 1298 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1299              	.LVL105:
1359:.\Generated_Source\PSoC4/UART.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1300              		.loc 1 1360 0
 1301 0006 0121     		mov	r1, #1
 1302 0008 094B     		ldr	r3, .L129
1361:.\Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
ARM GAS  C:\temp\ccSYH5Oo.s 			page 49


1362:.\Generated_Source\PSoC4/UART.c ****         CyExitCriticalSection(enableInterrupts);
1363:.\Generated_Source\PSoC4/UART.c **** 
1364:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC4/UART.c **** 
1366:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC4/UART.c ****         UART_DisableTxInt();
1368:.\Generated_Source\PSoC4/UART.c **** 
1369:.\Generated_Source\PSoC4/UART.c ****         UART_txBufferRead = 0u;
1370:.\Generated_Source\PSoC4/UART.c ****         UART_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC4/UART.c **** 
1372:.\Generated_Source\PSoC4/UART.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC4/UART.c ****         UART_EnableTxInt();
1374:.\Generated_Source\PSoC4/UART.c **** 
1375:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC4/UART.c ****     }
 1303              		.loc 1 1376 0
 1304              		@ sp needed
1360:.\Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1305              		.loc 1 1360 0
 1306 000a 1A78     		ldrb	r2, [r3]
 1307 000c 0A43     		orr	r2, r1
 1308 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1309              		.loc 1 1361 0
 1310 0010 1A78     		ldrb	r2, [r3]
 1311 0012 8A43     		bic	r2, r1
 1312 0014 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC4/UART.c **** 
 1313              		.loc 1 1362 0
 1314 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1315              	.LVL106:
1367:.\Generated_Source\PSoC4/UART.c **** 
 1316              		.loc 1 1367 0
 1317 001a 0220     		mov	r0, #2
 1318 001c FFF7FEFF 		bl	CyIntDisable
 1319              	.LVL107:
1369:.\Generated_Source\PSoC4/UART.c ****         UART_txBufferWrite = 0u;
 1320              		.loc 1 1369 0
 1321 0020 0022     		mov	r2, #0
 1322 0022 044B     		ldr	r3, .L129+4
1373:.\Generated_Source\PSoC4/UART.c **** 
 1323              		.loc 1 1373 0
 1324 0024 0220     		mov	r0, #2
1369:.\Generated_Source\PSoC4/UART.c ****         UART_txBufferWrite = 0u;
 1325              		.loc 1 1369 0
 1326 0026 9A71     		strb	r2, [r3, #6]
1370:.\Generated_Source\PSoC4/UART.c **** 
 1327              		.loc 1 1370 0
 1328 0028 DA71     		strb	r2, [r3, #7]
1373:.\Generated_Source\PSoC4/UART.c **** 
 1329              		.loc 1 1373 0
 1330 002a FFF7FEFF 		bl	CyIntEnable
 1331              	.LVL108:
 1332              		.loc 1 1376 0
 1333 002e 08BD     		pop	{r3, pc}
 1334              	.L130:
 1335              		.align	2
ARM GAS  C:\temp\ccSYH5Oo.s 			page 50


 1336              	.L129:
 1337 0030 91000F40 		.word	1074725009
 1338 0034 00000000 		.word	.LANCHOR0
 1339              		.cfi_endproc
 1340              	.LFE24:
 1341              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1342              		.section	.text.UART_SendBreak,"ax",%progbits
 1343              		.align	1
 1344              		.global	UART_SendBreak
 1345              		.code	16
 1346              		.thumb_func
 1347              		.type	UART_SendBreak, %function
 1348              	UART_SendBreak:
 1349              	.LFB25:
1377:.\Generated_Source\PSoC4/UART.c **** 
1378:.\Generated_Source\PSoC4/UART.c **** 
1379:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SendBreak
1381:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC4/UART.c ****     *
1383:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1384:.\Generated_Source\PSoC4/UART.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC4/UART.c ****     *
1386:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1387:.\Generated_Source\PSoC4/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC4/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC4/UART.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC4/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC4/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC4/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC4/UART.c ****     *       then return.
1394:.\Generated_Source\PSoC4/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC4/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC4/UART.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC4/UART.c ****     *
1398:.\Generated_Source\PSoC4/UART.c ****     * Return:
1399:.\Generated_Source\PSoC4/UART.c ****     *  None.
1400:.\Generated_Source\PSoC4/UART.c ****     *
1401:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1402:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1404:.\Generated_Source\PSoC4/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC4/UART.c ****     *
1406:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1407:.\Generated_Source\PSoC4/UART.c ****     *  No.
1408:.\Generated_Source\PSoC4/UART.c ****     *
1409:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1410:.\Generated_Source\PSoC4/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC4/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC4/UART.c ****     *  operation.
1413:.\Generated_Source\PSoC4/UART.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC4/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC4/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC4/UART.c ****     *     complete.
1417:.\Generated_Source\PSoC4/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC4/UART.c ****     *     operation
1419:.\Generated_Source\PSoC4/UART.c ****     *     Example for this case:
ARM GAS  C:\temp\ccSYH5Oo.s 			page 51


1420:.\Generated_Source\PSoC4/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC4/UART.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC4/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC4/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC4/UART.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC4/UART.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC4/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC4/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC4/UART.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC4/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC4/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC4/UART.c ****     *
1432:.\Generated_Source\PSoC4/UART.c ****     * Side Effects:
1433:.\Generated_Source\PSoC4/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC4/UART.c ****     *  break signal.
1435:.\Generated_Source\PSoC4/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC4/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC4/UART.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC4/UART.c ****     *
1439:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC4/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC4/UART.c ****     {
 1350              		.loc 1 1441 0
 1351              		.cfi_startproc
 1352              	.LVL109:
1442:.\Generated_Source\PSoC4/UART.c **** 
1443:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 1353              		.loc 1 1444 0
 1354 0000 134B     		ldr	r3, .L151
 1355 0002 5A78     		ldrb	r2, [r3, #1]
 1356 0004 002A     		cmp	r2, #0
 1357 0006 22D0     		beq	.L131
 1358              	.LBB2:
1445:.\Generated_Source\PSoC4/UART.c ****         {
1446:.\Generated_Source\PSoC4/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC4/UART.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC4/UART.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC4/UART.c **** 
1450:.\Generated_Source\PSoC4/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC4/UART.c **** 
1452:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC4/UART.c ****             {
1455:.\Generated_Source\PSoC4/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:.\Generated_Source\PSoC4/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC4/UART.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC4/UART.c **** 
1461:.\Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC4/UART.c ****                 {
1463:.\Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:.\Generated_Source\PSoC4/UART.c ****                 }
1465:.\Generated_Source\PSoC4/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC4/UART.c ****             }
1467:.\Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\temp\ccSYH5Oo.s 			page 52


1468:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC4/UART.c ****             {
1471:.\Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC4/UART.c ****                 {
1473:.\Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:.\Generated_Source\PSoC4/UART.c ****                 }
1475:.\Generated_Source\PSoC4/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC4/UART.c ****             }
1477:.\Generated_Source\PSoC4/UART.c **** 
1478:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
1480:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC4/UART.c ****             {
1482:.\Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:.\Generated_Source\PSoC4/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC4/UART.c ****             }
1485:.\Generated_Source\PSoC4/UART.c **** 
1486:.\Generated_Source\PSoC4/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC4/UART.c **** 
1488:.\Generated_Source\PSoC4/UART.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC4/UART.c **** 
1490:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1359              		.loc 1 1490 0
 1360 0008 0028     		cmp	r0, #0
 1361 000a 01D0     		beq	.L134
 1362              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1363 000c 0328     		cmp	r0, #3
 1364 000e 17D1     		bne	.L135
 1365              	.L134:
1491:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC4/UART.c ****             {
1493:.\Generated_Source\PSoC4/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC4/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC4/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC4/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:.\Generated_Source\PSoC4/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC4/UART.c **** 
1500:.\Generated_Source\PSoC4/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC4/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1366              		.loc 1 1501 0 is_stmt 1
 1367 0010 104A     		ldr	r2, .L151+4
 1368 0012 1178     		ldrb	r1, [r2]
 1369 0014 1972     		strb	r1, [r3, #8]
1502:.\Generated_Source\PSoC4/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1370              		.loc 1 1502 0
 1371 0016 CF21     		mov	r1, #207
 1372 0018 1170     		strb	r1, [r2]
1503:.\Generated_Source\PSoC4/UART.c ****                 #else
1504:.\Generated_Source\PSoC4/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC4/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC4/UART.c **** 
1508:.\Generated_Source\PSoC4/UART.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = 0u;
 1373              		.loc 1 1509 0
ARM GAS  C:\temp\ccSYH5Oo.s 			page 53


 1374 001a 0021     		mov	r1, #0
 1375 001c 0E4A     		ldr	r2, .L151+8
 1376 001e 1170     		strb	r1, [r2]
 1377              	.L136:
1510:.\Generated_Source\PSoC4/UART.c **** 
1511:.\Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC4/UART.c ****                 {
1513:.\Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1378              		.loc 1 1513 0 discriminator 1
 1379 0020 0E4A     		ldr	r2, .L151+12
 1380 0022 1178     		ldrb	r1, [r2]
 1381              	.LVL110:
1514:.\Generated_Source\PSoC4/UART.c ****                 }
1515:.\Generated_Source\PSoC4/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1382              		.loc 1 1515 0 discriminator 1
 1383 0024 0222     		mov	r2, #2
 1384 0026 1142     		tst	r1, r2
 1385 0028 FAD1     		bne	.L136
1516:.\Generated_Source\PSoC4/UART.c ****             }
1517:.\Generated_Source\PSoC4/UART.c **** 
1518:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1386              		.loc 1 1518 0
 1387 002a 011C     		mov	r1, r0
 1388              	.LVL111:
 1389 002c 9143     		bic	r1, r2
 1390 002e 0129     		cmp	r1, #1
 1391 0030 08D0     		beq	.L140
 1392              	.L141:
1519:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC4/UART.c ****             {
1521:.\Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC4/UART.c ****                 {
1523:.\Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1524:.\Generated_Source\PSoC4/UART.c ****                 }
1525:.\Generated_Source\PSoC4/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1526:.\Generated_Source\PSoC4/UART.c ****             }
1527:.\Generated_Source\PSoC4/UART.c **** 
1528:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1393              		.loc 1 1528 0
 1394 0032 0138     		sub	r0, r0, #1
 1395              	.LVL112:
 1396 0034 0228     		cmp	r0, #2
 1397 0036 0AD8     		bhi	.L131
1529:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
1530:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC4/UART.c ****             {
1532:.\Generated_Source\PSoC4/UART.c **** 
1533:.\Generated_Source\PSoC4/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC4/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1398              		.loc 1 1534 0
 1399 0038 1A7A     		ldrb	r2, [r3, #8]
 1400 003a 064B     		ldr	r3, .L151+4
 1401 003c 1A70     		strb	r2, [r3]
 1402 003e 06E0     		b	.L131
 1403              	.LVL113:
 1404              	.L135:
1518:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
ARM GAS  C:\temp\ccSYH5Oo.s 			page 54


 1405              		.loc 1 1518 0
 1406 0040 0128     		cmp	r0, #1
 1407 0042 F6D1     		bne	.L141
 1408              	.L140:
1523:.\Generated_Source\PSoC4/UART.c ****                 }
 1409              		.loc 1 1523 0 discriminator 1
 1410 0044 054A     		ldr	r2, .L151+12
 1411 0046 1278     		ldrb	r2, [r2]
 1412              	.LVL114:
1525:.\Generated_Source\PSoC4/UART.c ****             }
 1413              		.loc 1 1525 0 discriminator 1
 1414 0048 D207     		lsl	r2, r2, #31
 1415 004a FBD5     		bpl	.L140
 1416              	.LVL115:
 1417 004c F1E7     		b	.L141
 1418              	.LVL116:
 1419              	.L131:
 1420              	.LBE2:
1535:.\Generated_Source\PSoC4/UART.c ****             #else
1536:.\Generated_Source\PSoC4/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC4/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC4/UART.c **** 
1539:.\Generated_Source\PSoC4/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC4/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:.\Generated_Source\PSoC4/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC4/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC4/UART.c ****             }
1545:.\Generated_Source\PSoC4/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:.\Generated_Source\PSoC4/UART.c ****         }
1547:.\Generated_Source\PSoC4/UART.c ****     }
 1421              		.loc 1 1547 0
 1422              		@ sp needed
 1423 004e 7047     		bx	lr
 1424              	.L152:
 1425              		.align	2
 1426              	.L151:
 1427 0050 00000000 		.word	.LANCHOR0
 1428 0054 32000F40 		.word	1074724914
 1429 0058 41000F40 		.word	1074724929
 1430 005c 61000F40 		.word	1074724961
 1431              		.cfi_endproc
 1432              	.LFE25:
 1433              		.size	UART_SendBreak, .-UART_SendBreak
 1434              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1435              		.align	1
 1436              		.global	UART_SetTxAddressMode
 1437              		.code	16
 1438              		.thumb_func
 1439              		.type	UART_SetTxAddressMode, %function
 1440              	UART_SetTxAddressMode:
 1441              	.LFB26:
1548:.\Generated_Source\PSoC4/UART.c **** 
1549:.\Generated_Source\PSoC4/UART.c **** 
1550:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
ARM GAS  C:\temp\ccSYH5Oo.s 			page 55


1553:.\Generated_Source\PSoC4/UART.c ****     *
1554:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1555:.\Generated_Source\PSoC4/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC4/UART.c ****     *
1557:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1558:.\Generated_Source\PSoC4/UART.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC4/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC4/UART.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC4/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC4/UART.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC4/UART.c ****     *
1564:.\Generated_Source\PSoC4/UART.c ****     * Return:
1565:.\Generated_Source\PSoC4/UART.c ****     *  None.
1566:.\Generated_Source\PSoC4/UART.c ****     *
1567:.\Generated_Source\PSoC4/UART.c ****     * Side Effects:
1568:.\Generated_Source\PSoC4/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC4/UART.c ****     *  register.
1570:.\Generated_Source\PSoC4/UART.c ****     *
1571:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC4/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC4/UART.c ****     {
 1442              		.loc 1 1573 0
 1443              		.cfi_startproc
 1444              	.LVL117:
1574:.\Generated_Source\PSoC4/UART.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC4/UART.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC4/UART.c ****         {
1577:.\Generated_Source\PSoC4/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC4/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
1579:.\Generated_Source\PSoC4/UART.c ****                                                   UART_CTRL_MARK);
1580:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC4/UART.c ****         }
1582:.\Generated_Source\PSoC4/UART.c ****         else
1583:.\Generated_Source\PSoC4/UART.c ****         {
1584:.\Generated_Source\PSoC4/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC4/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
1586:.\Generated_Source\PSoC4/UART.c ****                                                   (uint8) ~UART_CTRL_MARK);
1587:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC4/UART.c ****         }
1589:.\Generated_Source\PSoC4/UART.c ****     }
 1445              		.loc 1 1589 0
 1446              		@ sp needed
 1447 0000 7047     		bx	lr
 1448              		.cfi_endproc
 1449              	.LFE26:
 1450              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1451              		.global	UART_rxBufferOverflow
 1452              		.global	UART_rxBufferLoopDetect
 1453              		.global	UART_rxBufferWrite
 1454              		.global	UART_rxBufferRead
 1455              		.comm	UART_rxBuffer,255,1
 1456              		.global	UART_errorStatus
 1457              		.global	UART_txBufferWrite
 1458              		.global	UART_txBufferRead
 1459              		.comm	UART_txBuffer,255,1
 1460              		.global	UART_initVar
 1461              		.bss
ARM GAS  C:\temp\ccSYH5Oo.s 			page 56


 1462              		.set	.LANCHOR0,. + 0
 1463              		.type	UART_errorStatus, %object
 1464              		.size	UART_errorStatus, 1
 1465              	UART_errorStatus:
 1466 0000 00       		.space	1
 1467              		.type	UART_initVar, %object
 1468              		.size	UART_initVar, 1
 1469              	UART_initVar:
 1470 0001 00       		.space	1
 1471              		.type	UART_rxBufferRead, %object
 1472              		.size	UART_rxBufferRead, 1
 1473              	UART_rxBufferRead:
 1474 0002 00       		.space	1
 1475              		.type	UART_rxBufferWrite, %object
 1476              		.size	UART_rxBufferWrite, 1
 1477              	UART_rxBufferWrite:
 1478 0003 00       		.space	1
 1479              		.type	UART_rxBufferLoopDetect, %object
 1480              		.size	UART_rxBufferLoopDetect, 1
 1481              	UART_rxBufferLoopDetect:
 1482 0004 00       		.space	1
 1483              		.type	UART_rxBufferOverflow, %object
 1484              		.size	UART_rxBufferOverflow, 1
 1485              	UART_rxBufferOverflow:
 1486 0005 00       		.space	1
 1487              		.type	UART_txBufferRead, %object
 1488              		.size	UART_txBufferRead, 1
 1489              	UART_txBufferRead:
 1490 0006 00       		.space	1
 1491              		.type	UART_txBufferWrite, %object
 1492              		.size	UART_txBufferWrite, 1
 1493              	UART_txBufferWrite:
 1494 0007 00       		.space	1
 1495              		.type	txPeriod.4878, %object
 1496              		.size	txPeriod.4878, 1
 1497              	txPeriod.4878:
 1498 0008 00       		.space	1
 1499              		.text
 1500              	.Letext0:
 1501              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1502              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1503              		.file 4 ".\\Generated_Source\\PSoC4\\UART_IntClock.h"
 1504              		.section	.debug_info,"",%progbits
 1505              	.Ldebug_info0:
 1506 0000 7A090000 		.4byte	0x97a
 1507 0004 0400     		.2byte	0x4
 1508 0006 00000000 		.4byte	.Ldebug_abbrev0
 1509 000a 04       		.byte	0x4
 1510 000b 01       		.uleb128 0x1
 1511 000c 07000000 		.4byte	.LASF83
 1512 0010 01       		.byte	0x1
 1513 0011 63030000 		.4byte	.LASF84
 1514 0015 78010000 		.4byte	.LASF85
 1515 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1516 001d 00000000 		.4byte	0
 1517 0021 00000000 		.4byte	.Ldebug_line0
 1518 0025 02       		.uleb128 0x2
ARM GAS  C:\temp\ccSYH5Oo.s 			page 57


 1519 0026 01       		.byte	0x1
 1520 0027 06       		.byte	0x6
 1521 0028 40010000 		.4byte	.LASF0
 1522 002c 02       		.uleb128 0x2
 1523 002d 01       		.byte	0x1
 1524 002e 08       		.byte	0x8
 1525 002f 7F040000 		.4byte	.LASF1
 1526 0033 02       		.uleb128 0x2
 1527 0034 02       		.byte	0x2
 1528 0035 05       		.byte	0x5
 1529 0036 9E040000 		.4byte	.LASF2
 1530 003a 02       		.uleb128 0x2
 1531 003b 02       		.byte	0x2
 1532 003c 07       		.byte	0x7
 1533 003d 18030000 		.4byte	.LASF3
 1534 0041 02       		.uleb128 0x2
 1535 0042 04       		.byte	0x4
 1536 0043 05       		.byte	0x5
 1537 0044 55010000 		.4byte	.LASF4
 1538 0048 02       		.uleb128 0x2
 1539 0049 04       		.byte	0x4
 1540 004a 07       		.byte	0x7
 1541 004b A3020000 		.4byte	.LASF5
 1542 004f 02       		.uleb128 0x2
 1543 0050 08       		.byte	0x8
 1544 0051 05       		.byte	0x5
 1545 0052 32010000 		.4byte	.LASF6
 1546 0056 02       		.uleb128 0x2
 1547 0057 08       		.byte	0x8
 1548 0058 07       		.byte	0x7
 1549 0059 D0000000 		.4byte	.LASF7
 1550 005d 03       		.uleb128 0x3
 1551 005e 04       		.byte	0x4
 1552 005f 05       		.byte	0x5
 1553 0060 696E7400 		.ascii	"int\000"
 1554 0064 02       		.uleb128 0x2
 1555 0065 04       		.byte	0x4
 1556 0066 07       		.byte	0x7
 1557 0067 67020000 		.4byte	.LASF8
 1558 006b 04       		.uleb128 0x4
 1559 006c CE010000 		.4byte	.LASF9
 1560 0070 02       		.byte	0x2
 1561 0071 C2       		.byte	0xc2
 1562 0072 2C000000 		.4byte	0x2c
 1563 0076 04       		.uleb128 0x4
 1564 0077 00000000 		.4byte	.LASF10
 1565 007b 02       		.byte	0x2
 1566 007c C3       		.byte	0xc3
 1567 007d 3A000000 		.4byte	0x3a
 1568 0081 02       		.uleb128 0x2
 1569 0082 04       		.byte	0x4
 1570 0083 04       		.byte	0x4
 1571 0084 49040000 		.4byte	.LASF11
 1572 0088 02       		.uleb128 0x2
 1573 0089 08       		.byte	0x8
 1574 008a 04       		.byte	0x4
 1575 008b ED010000 		.4byte	.LASF12
ARM GAS  C:\temp\ccSYH5Oo.s 			page 58


 1576 008f 04       		.uleb128 0x4
 1577 0090 04050000 		.4byte	.LASF13
 1578 0094 02       		.byte	0x2
 1579 0095 D3       		.byte	0xd3
 1580 0096 9A000000 		.4byte	0x9a
 1581 009a 02       		.uleb128 0x2
 1582 009b 01       		.byte	0x1
 1583 009c 08       		.byte	0x8
 1584 009d F2040000 		.4byte	.LASF14
 1585 00a1 05       		.uleb128 0x5
 1586 00a2 64040000 		.4byte	.LASF15
 1587 00a6 02       		.byte	0x2
 1588 00a7 6C01     		.2byte	0x16c
 1589 00a9 AD000000 		.4byte	0xad
 1590 00ad 06       		.uleb128 0x6
 1591 00ae 6B000000 		.4byte	0x6b
 1592 00b2 05       		.uleb128 0x5
 1593 00b3 F7040000 		.4byte	.LASF16
 1594 00b7 02       		.byte	0x2
 1595 00b8 7E01     		.2byte	0x17e
 1596 00ba BE000000 		.4byte	0xbe
 1597 00be 07       		.uleb128 0x7
 1598 00bf 04       		.byte	0x4
 1599 00c0 C4000000 		.4byte	0xc4
 1600 00c4 08       		.uleb128 0x8
 1601 00c5 02       		.uleb128 0x2
 1602 00c6 04       		.byte	0x4
 1603 00c7 07       		.byte	0x7
 1604 00c8 B1030000 		.4byte	.LASF17
 1605 00cc 09       		.uleb128 0x9
 1606 00cd 3A020000 		.4byte	.LASF18
 1607 00d1 01       		.byte	0x1
 1608 00d2 6A       		.byte	0x6a
 1609 00d3 00000000 		.4byte	.LFB1
 1610 00d7 68000000 		.4byte	.LFE1-.LFB1
 1611 00db 01       		.uleb128 0x1
 1612 00dc 9C       		.byte	0x9c
 1613 00dd 34010000 		.4byte	0x134
 1614 00e1 0A       		.uleb128 0xa
 1615 00e2 0A000000 		.4byte	.LVL0
 1616 00e6 E3080000 		.4byte	0x8e3
 1617 00ea F4000000 		.4byte	0xf4
 1618 00ee 0B       		.uleb128 0xb
 1619 00ef 01       		.uleb128 0x1
 1620 00f0 50       		.byte	0x50
 1621 00f1 01       		.uleb128 0x1
 1622 00f2 30       		.byte	0x30
 1623 00f3 00       		.byte	0
 1624 00f4 0A       		.uleb128 0xa
 1625 00f5 12000000 		.4byte	.LVL1
 1626 00f9 FD080000 		.4byte	0x8fd
 1627 00fd 0C010000 		.4byte	0x10c
 1628 0101 0B       		.uleb128 0xb
 1629 0102 01       		.uleb128 0x1
 1630 0103 51       		.byte	0x51
 1631 0104 01       		.uleb128 0x1
 1632 0105 33       		.byte	0x33
ARM GAS  C:\temp\ccSYH5Oo.s 			page 59


 1633 0106 0B       		.uleb128 0xb
 1634 0107 01       		.uleb128 0x1
 1635 0108 50       		.byte	0x50
 1636 0109 01       		.uleb128 0x1
 1637 010a 30       		.byte	0x30
 1638 010b 00       		.byte	0
 1639 010c 0A       		.uleb128 0xa
 1640 010d 2C000000 		.4byte	.LVL2
 1641 0111 E3080000 		.4byte	0x8e3
 1642 0115 1F010000 		.4byte	0x11f
 1643 0119 0B       		.uleb128 0xb
 1644 011a 01       		.uleb128 0x1
 1645 011b 50       		.byte	0x50
 1646 011c 01       		.uleb128 0x1
 1647 011d 32       		.byte	0x32
 1648 011e 00       		.byte	0
 1649 011f 0C       		.uleb128 0xc
 1650 0120 34000000 		.4byte	.LVL3
 1651 0124 FD080000 		.4byte	0x8fd
 1652 0128 0B       		.uleb128 0xb
 1653 0129 01       		.uleb128 0x1
 1654 012a 51       		.byte	0x51
 1655 012b 01       		.uleb128 0x1
 1656 012c 33       		.byte	0x33
 1657 012d 0B       		.uleb128 0xb
 1658 012e 01       		.uleb128 0x1
 1659 012f 50       		.byte	0x50
 1660 0130 01       		.uleb128 0x1
 1661 0131 32       		.byte	0x32
 1662 0132 00       		.byte	0
 1663 0133 00       		.byte	0
 1664 0134 09       		.uleb128 0x9
 1665 0135 D4040000 		.4byte	.LASF19
 1666 0139 01       		.byte	0x1
 1667 013a B7       		.byte	0xb7
 1668 013b 00000000 		.4byte	.LFB2
 1669 013f 50000000 		.4byte	.LFE2-.LFB2
 1670 0143 01       		.uleb128 0x1
 1671 0144 9C       		.byte	0x9c
 1672 0145 B4010000 		.4byte	0x1b4
 1673 0149 0D       		.uleb128 0xd
 1674 014a 3F050000 		.4byte	.LASF22
 1675 014e 01       		.byte	0x1
 1676 014f B9       		.byte	0xb9
 1677 0150 6B000000 		.4byte	0x6b
 1678 0154 00000000 		.4byte	.LLST0
 1679 0158 0E       		.uleb128 0xe
 1680 0159 06000000 		.4byte	.LVL4
 1681 015d 13090000 		.4byte	0x913
 1682 0161 0A       		.uleb128 0xa
 1683 0162 22000000 		.4byte	.LVL6
 1684 0166 1E090000 		.4byte	0x91e
 1685 016a 74010000 		.4byte	0x174
 1686 016e 0B       		.uleb128 0xb
 1687 016f 01       		.uleb128 0x1
 1688 0170 50       		.byte	0x50
 1689 0171 01       		.uleb128 0x1
ARM GAS  C:\temp\ccSYH5Oo.s 			page 60


 1690 0172 30       		.byte	0x30
 1691 0173 00       		.byte	0
 1692 0174 0A       		.uleb128 0xa
 1693 0175 30000000 		.4byte	.LVL7
 1694 0179 2F090000 		.4byte	0x92f
 1695 017d 87010000 		.4byte	0x187
 1696 0181 0B       		.uleb128 0xb
 1697 0182 01       		.uleb128 0x1
 1698 0183 50       		.byte	0x50
 1699 0184 01       		.uleb128 0x1
 1700 0185 32       		.byte	0x32
 1701 0186 00       		.byte	0
 1702 0187 0A       		.uleb128 0xa
 1703 0188 36000000 		.4byte	.LVL8
 1704 018c 1E090000 		.4byte	0x91e
 1705 0190 9A010000 		.4byte	0x19a
 1706 0194 0B       		.uleb128 0xb
 1707 0195 01       		.uleb128 0x1
 1708 0196 50       		.byte	0x50
 1709 0197 01       		.uleb128 0x1
 1710 0198 32       		.byte	0x32
 1711 0199 00       		.byte	0
 1712 019a 0E       		.uleb128 0xe
 1713 019b 3A000000 		.4byte	.LVL9
 1714 019f 40090000 		.4byte	0x940
 1715 01a3 0C       		.uleb128 0xc
 1716 01a4 40000000 		.4byte	.LVL10
 1717 01a8 47090000 		.4byte	0x947
 1718 01ac 0B       		.uleb128 0xb
 1719 01ad 01       		.uleb128 0x1
 1720 01ae 50       		.byte	0x50
 1721 01af 02       		.uleb128 0x2
 1722 01b0 74       		.byte	0x74
 1723 01b1 00       		.sleb128 0
 1724 01b2 00       		.byte	0
 1725 01b3 00       		.byte	0
 1726 01b4 09       		.uleb128 0x9
 1727 01b5 E7000000 		.4byte	.LASF20
 1728 01b9 01       		.byte	0x1
 1729 01ba 4C       		.byte	0x4c
 1730 01bb 00000000 		.4byte	.LFB0
 1731 01bf 1C000000 		.4byte	.LFE0-.LFB0
 1732 01c3 01       		.uleb128 0x1
 1733 01c4 9C       		.byte	0x9c
 1734 01c5 DC010000 		.4byte	0x1dc
 1735 01c9 0E       		.uleb128 0xe
 1736 01ca 0E000000 		.4byte	.LVL12
 1737 01ce CC000000 		.4byte	0xcc
 1738 01d2 0E       		.uleb128 0xe
 1739 01d3 16000000 		.4byte	.LVL13
 1740 01d7 34010000 		.4byte	0x134
 1741 01db 00       		.byte	0
 1742 01dc 09       		.uleb128 0x9
 1743 01dd 79050000 		.4byte	.LASF21
 1744 01e1 01       		.byte	0x1
 1745 01e2 F0       		.byte	0xf0
 1746 01e3 00000000 		.4byte	.LFB3
ARM GAS  C:\temp\ccSYH5Oo.s 			page 61


 1747 01e7 48000000 		.4byte	.LFE3-.LFB3
 1748 01eb 01       		.uleb128 0x1
 1749 01ec 9C       		.byte	0x9c
 1750 01ed 49020000 		.4byte	0x249
 1751 01f1 0D       		.uleb128 0xd
 1752 01f2 3F050000 		.4byte	.LASF22
 1753 01f6 01       		.byte	0x1
 1754 01f7 F2       		.byte	0xf2
 1755 01f8 6B000000 		.4byte	0x6b
 1756 01fc 13000000 		.4byte	.LLST1
 1757 0200 0E       		.uleb128 0xe
 1758 0201 06000000 		.4byte	.LVL14
 1759 0205 13090000 		.4byte	0x913
 1760 0209 0E       		.uleb128 0xe
 1761 020a 18000000 		.4byte	.LVL16
 1762 020e 58090000 		.4byte	0x958
 1763 0212 0A       		.uleb128 0xa
 1764 0213 26000000 		.4byte	.LVL17
 1765 0217 5F090000 		.4byte	0x95f
 1766 021b 25020000 		.4byte	0x225
 1767 021f 0B       		.uleb128 0xb
 1768 0220 01       		.uleb128 0x1
 1769 0221 50       		.byte	0x50
 1770 0222 01       		.uleb128 0x1
 1771 0223 30       		.byte	0x30
 1772 0224 00       		.byte	0
 1773 0225 0A       		.uleb128 0xa
 1774 0226 34000000 		.4byte	.LVL18
 1775 022a 5F090000 		.4byte	0x95f
 1776 022e 38020000 		.4byte	0x238
 1777 0232 0B       		.uleb128 0xb
 1778 0233 01       		.uleb128 0x1
 1779 0234 50       		.byte	0x50
 1780 0235 01       		.uleb128 0x1
 1781 0236 32       		.byte	0x32
 1782 0237 00       		.byte	0
 1783 0238 0C       		.uleb128 0xc
 1784 0239 3A000000 		.4byte	.LVL19
 1785 023d 47090000 		.4byte	0x947
 1786 0241 0B       		.uleb128 0xb
 1787 0242 01       		.uleb128 0x1
 1788 0243 50       		.byte	0x50
 1789 0244 02       		.uleb128 0x2
 1790 0245 74       		.byte	0x74
 1791 0246 00       		.sleb128 0
 1792 0247 00       		.byte	0
 1793 0248 00       		.byte	0
 1794 0249 0F       		.uleb128 0xf
 1795 024a D4010000 		.4byte	.LASF48
 1796 024e 01       		.byte	0x1
 1797 024f 2701     		.2byte	0x127
 1798 0251 6B000000 		.4byte	0x6b
 1799 0255 00000000 		.4byte	.LFB4
 1800 0259 04000000 		.4byte	.LFE4-.LFB4
 1801 025d 01       		.uleb128 0x1
 1802 025e 9C       		.byte	0x9c
 1803 025f 10       		.uleb128 0x10
ARM GAS  C:\temp\ccSYH5Oo.s 			page 62


 1804 0260 A0050000 		.4byte	.LASF23
 1805 0264 01       		.byte	0x1
 1806 0265 3F01     		.2byte	0x13f
 1807 0267 00000000 		.4byte	.LFB5
 1808 026b 02000000 		.4byte	.LFE5-.LFB5
 1809 026f 01       		.uleb128 0x1
 1810 0270 9C       		.byte	0x9c
 1811 0271 84020000 		.4byte	0x284
 1812 0275 11       		.uleb128 0x11
 1813 0276 22020000 		.4byte	.LASF25
 1814 027a 01       		.byte	0x1
 1815 027b 3F01     		.2byte	0x13f
 1816 027d 6B000000 		.4byte	0x6b
 1817 0281 01       		.uleb128 0x1
 1818 0282 50       		.byte	0x50
 1819 0283 00       		.byte	0
 1820 0284 10       		.uleb128 0x10
 1821 0285 0A050000 		.4byte	.LASF24
 1822 0289 01       		.byte	0x1
 1823 028a 6701     		.2byte	0x167
 1824 028c 00000000 		.4byte	.LFB6
 1825 0290 0C000000 		.4byte	.LFE6-.LFB6
 1826 0294 01       		.uleb128 0x1
 1827 0295 9C       		.byte	0x9c
 1828 0296 A9020000 		.4byte	0x2a9
 1829 029a 11       		.uleb128 0x11
 1830 029b 46030000 		.4byte	.LASF26
 1831 029f 01       		.byte	0x1
 1832 02a0 6701     		.2byte	0x167
 1833 02a2 6B000000 		.4byte	0x6b
 1834 02a6 01       		.uleb128 0x1
 1835 02a7 50       		.byte	0x50
 1836 02a8 00       		.byte	0
 1837 02a9 12       		.uleb128 0x12
 1838 02aa BE010000 		.4byte	.LASF30
 1839 02ae 01       		.byte	0x1
 1840 02af 8801     		.2byte	0x188
 1841 02b1 6B000000 		.4byte	0x6b
 1842 02b5 00000000 		.4byte	.LFB7
 1843 02b9 60000000 		.4byte	.LFE7-.LFB7
 1844 02bd 01       		.uleb128 0x1
 1845 02be 9C       		.byte	0x9c
 1846 02bf 16030000 		.4byte	0x316
 1847 02c3 13       		.uleb128 0x13
 1848 02c4 CD040000 		.4byte	.LASF27
 1849 02c8 01       		.byte	0x1
 1850 02c9 8A01     		.2byte	0x18a
 1851 02cb 6B000000 		.4byte	0x6b
 1852 02cf 26000000 		.4byte	.LLST2
 1853 02d3 13       		.uleb128 0x13
 1854 02d4 2F050000 		.4byte	.LASF28
 1855 02d8 01       		.byte	0x1
 1856 02d9 8E01     		.2byte	0x18e
 1857 02db 6B000000 		.4byte	0x6b
 1858 02df 44000000 		.4byte	.LLST3
 1859 02e3 13       		.uleb128 0x13
 1860 02e4 FA030000 		.4byte	.LASF29
ARM GAS  C:\temp\ccSYH5Oo.s 			page 63


 1861 02e8 01       		.byte	0x1
 1862 02e9 8F01     		.2byte	0x18f
 1863 02eb 6B000000 		.4byte	0x6b
 1864 02ef 6F000000 		.4byte	.LLST4
 1865 02f3 0A       		.uleb128 0xa
 1866 02f4 08000000 		.4byte	.LVL23
 1867 02f8 5F090000 		.4byte	0x95f
 1868 02fc 06030000 		.4byte	0x306
 1869 0300 0B       		.uleb128 0xb
 1870 0301 01       		.uleb128 0x1
 1871 0302 50       		.byte	0x50
 1872 0303 01       		.uleb128 0x1
 1873 0304 30       		.byte	0x30
 1874 0305 00       		.byte	0
 1875 0306 0C       		.uleb128 0xc
 1876 0307 4E000000 		.4byte	.LVL33
 1877 030b 1E090000 		.4byte	0x91e
 1878 030f 0B       		.uleb128 0xb
 1879 0310 01       		.uleb128 0x1
 1880 0311 50       		.byte	0x50
 1881 0312 01       		.uleb128 0x1
 1882 0313 30       		.byte	0x30
 1883 0314 00       		.byte	0
 1884 0315 00       		.byte	0
 1885 0316 12       		.uleb128 0x12
 1886 0317 E0040000 		.4byte	.LASF31
 1887 031b 01       		.byte	0x1
 1888 031c E501     		.2byte	0x1e5
 1889 031e 6B000000 		.4byte	0x6b
 1890 0322 00000000 		.4byte	.LFB8
 1891 0326 24000000 		.4byte	.LFE8-.LFB8
 1892 032a 01       		.uleb128 0x1
 1893 032b 9C       		.byte	0x9c
 1894 032c 3F030000 		.4byte	0x33f
 1895 0330 14       		.uleb128 0x14
 1896 0331 72050000 		.4byte	.LASF32
 1897 0335 01       		.byte	0x1
 1898 0336 E701     		.2byte	0x1e7
 1899 0338 6B000000 		.4byte	0x6b
 1900 033c 01       		.uleb128 0x1
 1901 033d 50       		.byte	0x50
 1902 033e 00       		.byte	0
 1903 033f 12       		.uleb128 0x12
 1904 0340 22050000 		.4byte	.LASF33
 1905 0344 01       		.byte	0x1
 1906 0345 1402     		.2byte	0x214
 1907 0347 6B000000 		.4byte	0x6b
 1908 034b 00000000 		.4byte	.LFB9
 1909 034f 78000000 		.4byte	.LFE9-.LFB9
 1910 0353 01       		.uleb128 0x1
 1911 0354 9C       		.byte	0x9c
 1912 0355 BC030000 		.4byte	0x3bc
 1913 0359 13       		.uleb128 0x13
 1914 035a CD040000 		.4byte	.LASF27
 1915 035e 01       		.byte	0x1
 1916 035f 1602     		.2byte	0x216
 1917 0361 6B000000 		.4byte	0x6b
ARM GAS  C:\temp\ccSYH5Oo.s 			page 64


 1918 0365 8D000000 		.4byte	.LLST5
 1919 0369 13       		.uleb128 0x13
 1920 036a 0B040000 		.4byte	.LASF34
 1921 036e 01       		.byte	0x1
 1922 036f 1702     		.2byte	0x217
 1923 0371 6B000000 		.4byte	0x6b
 1924 0375 CE000000 		.4byte	.LLST6
 1925 0379 13       		.uleb128 0x13
 1926 037a 2F050000 		.4byte	.LASF28
 1927 037e 01       		.byte	0x1
 1928 037f 1A02     		.2byte	0x21a
 1929 0381 6B000000 		.4byte	0x6b
 1930 0385 E1000000 		.4byte	.LLST7
 1931 0389 13       		.uleb128 0x13
 1932 038a FA030000 		.4byte	.LASF29
 1933 038e 01       		.byte	0x1
 1934 038f 1B02     		.2byte	0x21b
 1935 0391 6B000000 		.4byte	0x6b
 1936 0395 0C010000 		.4byte	.LLST8
 1937 0399 0A       		.uleb128 0xa
 1938 039a 08000000 		.4byte	.LVL38
 1939 039e 5F090000 		.4byte	0x95f
 1940 03a2 AC030000 		.4byte	0x3ac
 1941 03a6 0B       		.uleb128 0xb
 1942 03a7 01       		.uleb128 0x1
 1943 03a8 50       		.byte	0x50
 1944 03a9 01       		.uleb128 0x1
 1945 03aa 30       		.byte	0x30
 1946 03ab 00       		.byte	0
 1947 03ac 0C       		.uleb128 0xc
 1948 03ad 64000000 		.4byte	.LVL51
 1949 03b1 1E090000 		.4byte	0x91e
 1950 03b5 0B       		.uleb128 0xb
 1951 03b6 01       		.uleb128 0x1
 1952 03b7 50       		.byte	0x50
 1953 03b8 01       		.uleb128 0x1
 1954 03b9 30       		.byte	0x30
 1955 03ba 00       		.byte	0
 1956 03bb 00       		.byte	0
 1957 03bc 12       		.uleb128 0x12
 1958 03bd 5A020000 		.4byte	.LASF35
 1959 03c1 01       		.byte	0x1
 1960 03c2 7A02     		.2byte	0x27a
 1961 03c4 76000000 		.4byte	0x76
 1962 03c8 00000000 		.4byte	.LFB10
 1963 03cc 24000000 		.4byte	.LFE10-.LFB10
 1964 03d0 01       		.uleb128 0x1
 1965 03d1 9C       		.byte	0x9c
 1966 03d2 16040000 		.4byte	0x416
 1967 03d6 13       		.uleb128 0x13
 1968 03d7 94020000 		.4byte	.LASF36
 1969 03db 01       		.byte	0x1
 1970 03dc 7E02     		.2byte	0x27e
 1971 03de 76000000 		.4byte	0x76
 1972 03e2 2A010000 		.4byte	.LLST9
 1973 03e6 0A       		.uleb128 0xa
 1974 03e7 08000000 		.4byte	.LVL53
ARM GAS  C:\temp\ccSYH5Oo.s 			page 65


 1975 03eb 5F090000 		.4byte	0x95f
 1976 03ef F9030000 		.4byte	0x3f9
 1977 03f3 0B       		.uleb128 0xb
 1978 03f4 01       		.uleb128 0x1
 1979 03f5 50       		.byte	0x50
 1980 03f6 01       		.uleb128 0x1
 1981 03f7 30       		.byte	0x30
 1982 03f8 00       		.byte	0
 1983 03f9 0A       		.uleb128 0xa
 1984 03fa 14000000 		.4byte	.LVL55
 1985 03fe 1E090000 		.4byte	0x91e
 1986 0402 0C040000 		.4byte	0x40c
 1987 0406 0B       		.uleb128 0xb
 1988 0407 01       		.uleb128 0x1
 1989 0408 50       		.byte	0x50
 1990 0409 01       		.uleb128 0x1
 1991 040a 30       		.byte	0x30
 1992 040b 00       		.byte	0
 1993 040c 0E       		.uleb128 0xe
 1994 040d 18000000 		.4byte	.LVL56
 1995 0411 A9020000 		.4byte	0x2a9
 1996 0415 00       		.byte	0
 1997 0416 12       		.uleb128 0x12
 1998 0417 5D050000 		.4byte	.LASF37
 1999 041b 01       		.byte	0x1
 2000 041c AB02     		.2byte	0x2ab
 2001 041e 6B000000 		.4byte	0x6b
 2002 0422 00000000 		.4byte	.LFB11
 2003 0426 44000000 		.4byte	.LFE11-.LFB11
 2004 042a 01       		.uleb128 0x1
 2005 042b 9C       		.byte	0x9c
 2006 042c 63040000 		.4byte	0x463
 2007 0430 13       		.uleb128 0x13
 2008 0431 13030000 		.4byte	.LASF38
 2009 0435 01       		.byte	0x1
 2010 0436 AE02     		.2byte	0x2ae
 2011 0438 6B000000 		.4byte	0x6b
 2012 043c 3D010000 		.4byte	.LLST10
 2013 0440 0A       		.uleb128 0xa
 2014 0441 08000000 		.4byte	.LVL58
 2015 0445 5F090000 		.4byte	0x95f
 2016 0449 53040000 		.4byte	0x453
 2017 044d 0B       		.uleb128 0xb
 2018 044e 01       		.uleb128 0x1
 2019 044f 50       		.byte	0x50
 2020 0450 01       		.uleb128 0x1
 2021 0451 30       		.byte	0x30
 2022 0452 00       		.byte	0
 2023 0453 0C       		.uleb128 0xc
 2024 0454 3C000000 		.4byte	.LVL60
 2025 0458 1E090000 		.4byte	0x91e
 2026 045c 0B       		.uleb128 0xb
 2027 045d 01       		.uleb128 0x1
 2028 045e 50       		.byte	0x50
 2029 045f 01       		.uleb128 0x1
 2030 0460 30       		.byte	0x30
 2031 0461 00       		.byte	0
ARM GAS  C:\temp\ccSYH5Oo.s 			page 66


 2032 0462 00       		.byte	0
 2033 0463 10       		.uleb128 0x10
 2034 0464 BA050000 		.4byte	.LASF39
 2035 0468 01       		.byte	0x1
 2036 0469 F502     		.2byte	0x2f5
 2037 046b 00000000 		.4byte	.LFB12
 2038 046f 3C000000 		.4byte	.LFE12-.LFB12
 2039 0473 01       		.uleb128 0x1
 2040 0474 9C       		.byte	0x9c
 2041 0475 BE040000 		.4byte	0x4be
 2042 0479 13       		.uleb128 0x13
 2043 047a 3F050000 		.4byte	.LASF22
 2044 047e 01       		.byte	0x1
 2045 047f F702     		.2byte	0x2f7
 2046 0481 6B000000 		.4byte	0x6b
 2047 0485 5B010000 		.4byte	.LLST11
 2048 0489 0E       		.uleb128 0xe
 2049 048a 06000000 		.4byte	.LVL62
 2050 048e 13090000 		.4byte	0x913
 2051 0492 0E       		.uleb128 0xe
 2052 0493 1A000000 		.4byte	.LVL63
 2053 0497 47090000 		.4byte	0x947
 2054 049b 0A       		.uleb128 0xa
 2055 049c 20000000 		.4byte	.LVL64
 2056 04a0 5F090000 		.4byte	0x95f
 2057 04a4 AE040000 		.4byte	0x4ae
 2058 04a8 0B       		.uleb128 0xb
 2059 04a9 01       		.uleb128 0x1
 2060 04aa 50       		.byte	0x50
 2061 04ab 01       		.uleb128 0x1
 2062 04ac 30       		.byte	0x30
 2063 04ad 00       		.byte	0
 2064 04ae 0C       		.uleb128 0xc
 2065 04af 30000000 		.4byte	.LVL65
 2066 04b3 1E090000 		.4byte	0x91e
 2067 04b7 0B       		.uleb128 0xb
 2068 04b8 01       		.uleb128 0x1
 2069 04b9 50       		.byte	0x50
 2070 04ba 01       		.uleb128 0x1
 2071 04bb 30       		.byte	0x30
 2072 04bc 00       		.byte	0
 2073 04bd 00       		.byte	0
 2074 04be 10       		.uleb128 0x10
 2075 04bf 69040000 		.4byte	.LASF40
 2076 04c3 01       		.byte	0x1
 2077 04c4 2D03     		.2byte	0x32d
 2078 04c6 00000000 		.4byte	.LFB13
 2079 04ca 02000000 		.4byte	.LFE13-.LFB13
 2080 04ce 01       		.uleb128 0x1
 2081 04cf 9C       		.byte	0x9c
 2082 04d0 E3040000 		.4byte	0x4e3
 2083 04d4 11       		.uleb128 0x11
 2084 04d5 F4010000 		.4byte	.LASF41
 2085 04d9 01       		.byte	0x1
 2086 04da 2D03     		.2byte	0x32d
 2087 04dc 6B000000 		.4byte	0x6b
 2088 04e0 01       		.uleb128 0x1
ARM GAS  C:\temp\ccSYH5Oo.s 			page 67


 2089 04e1 50       		.byte	0x50
 2090 04e2 00       		.byte	0
 2091 04e3 10       		.uleb128 0x10
 2092 04e4 D4030000 		.4byte	.LASF42
 2093 04e8 01       		.byte	0x1
 2094 04e9 5903     		.2byte	0x359
 2095 04eb 00000000 		.4byte	.LFB14
 2096 04ef 0C000000 		.4byte	.LFE14-.LFB14
 2097 04f3 01       		.uleb128 0x1
 2098 04f4 9C       		.byte	0x9c
 2099 04f5 08050000 		.4byte	0x508
 2100 04f9 11       		.uleb128 0x11
 2101 04fa CC030000 		.4byte	.LASF43
 2102 04fe 01       		.byte	0x1
 2103 04ff 5903     		.2byte	0x359
 2104 0501 6B000000 		.4byte	0x6b
 2105 0505 01       		.uleb128 0x1
 2106 0506 50       		.byte	0x50
 2107 0507 00       		.byte	0
 2108 0508 10       		.uleb128 0x10
 2109 0509 E7030000 		.4byte	.LASF44
 2110 050d 01       		.byte	0x1
 2111 050e 6D03     		.2byte	0x36d
 2112 0510 00000000 		.4byte	.LFB15
 2113 0514 0C000000 		.4byte	.LFE15-.LFB15
 2114 0518 01       		.uleb128 0x1
 2115 0519 9C       		.byte	0x9c
 2116 051a 2D050000 		.4byte	0x52d
 2117 051e 11       		.uleb128 0x11
 2118 051f CC030000 		.4byte	.LASF43
 2119 0523 01       		.byte	0x1
 2120 0524 6D03     		.2byte	0x36d
 2121 0526 6B000000 		.4byte	0x6b
 2122 052a 01       		.uleb128 0x1
 2123 052b 50       		.byte	0x50
 2124 052c 00       		.byte	0
 2125 052d 10       		.uleb128 0x10
 2126 052e F2000000 		.4byte	.LASF45
 2127 0532 01       		.byte	0x1
 2128 0533 8C03     		.2byte	0x38c
 2129 0535 00000000 		.4byte	.LFB16
 2130 0539 0C000000 		.4byte	.LFE16-.LFB16
 2131 053d 01       		.uleb128 0x1
 2132 053e 9C       		.byte	0x9c
 2133 053f 52050000 		.4byte	0x552
 2134 0543 11       		.uleb128 0x11
 2135 0544 46030000 		.4byte	.LASF26
 2136 0548 01       		.byte	0x1
 2137 0549 8C03     		.2byte	0x38c
 2138 054b 6B000000 		.4byte	0x6b
 2139 054f 01       		.uleb128 0x1
 2140 0550 50       		.byte	0x50
 2141 0551 00       		.byte	0
 2142 0552 10       		.uleb128 0x10
 2143 0553 8D040000 		.4byte	.LASF46
 2144 0557 01       		.byte	0x1
 2145 0558 AE03     		.2byte	0x3ae
ARM GAS  C:\temp\ccSYH5Oo.s 			page 68


 2146 055a 00000000 		.4byte	.LFB17
 2147 055e 54000000 		.4byte	.LFE17-.LFB17
 2148 0562 01       		.uleb128 0x1
 2149 0563 9C       		.byte	0x9c
 2150 0564 9B050000 		.4byte	0x59b
 2151 0568 15       		.uleb128 0x15
 2152 0569 AB000000 		.4byte	.LASF47
 2153 056d 01       		.byte	0x1
 2154 056e AE03     		.2byte	0x3ae
 2155 0570 6B000000 		.4byte	0x6b
 2156 0574 6E010000 		.4byte	.LLST12
 2157 0578 0A       		.uleb128 0xa
 2158 0579 14000000 		.4byte	.LVL72
 2159 057d 5F090000 		.4byte	0x95f
 2160 0581 8B050000 		.4byte	0x58b
 2161 0585 0B       		.uleb128 0xb
 2162 0586 01       		.uleb128 0x1
 2163 0587 50       		.byte	0x50
 2164 0588 01       		.uleb128 0x1
 2165 0589 32       		.byte	0x32
 2166 058a 00       		.byte	0
 2167 058b 0C       		.uleb128 0xc
 2168 058c 42000000 		.4byte	.LVL73
 2169 0590 1E090000 		.4byte	0x91e
 2170 0594 0B       		.uleb128 0xb
 2171 0595 01       		.uleb128 0x1
 2172 0596 50       		.byte	0x50
 2173 0597 01       		.uleb128 0x1
 2174 0598 32       		.byte	0x32
 2175 0599 00       		.byte	0
 2176 059a 00       		.byte	0
 2177 059b 0F       		.uleb128 0xf
 2178 059c 83030000 		.4byte	.LASF49
 2179 05a0 01       		.byte	0x1
 2180 05a1 EB03     		.2byte	0x3eb
 2181 05a3 6B000000 		.4byte	0x6b
 2182 05a7 00000000 		.4byte	.LFB18
 2183 05ab 0C000000 		.4byte	.LFE18-.LFB18
 2184 05af 01       		.uleb128 0x1
 2185 05b0 9C       		.byte	0x9c
 2186 05b1 10       		.uleb128 0x10
 2187 05b2 6B010000 		.4byte	.LASF50
 2188 05b6 01       		.byte	0x1
 2189 05b7 1104     		.2byte	0x411
 2190 05b9 00000000 		.4byte	.LFB19
 2191 05bd 68000000 		.4byte	.LFE19-.LFB19
 2192 05c1 01       		.uleb128 0x1
 2193 05c2 9C       		.byte	0x9c
 2194 05c3 07060000 		.4byte	0x607
 2195 05c7 15       		.uleb128 0x15
 2196 05c8 AB000000 		.4byte	.LASF47
 2197 05cc 01       		.byte	0x1
 2198 05cd 1104     		.2byte	0x411
 2199 05cf 6B000000 		.4byte	0x6b
 2200 05d3 8F010000 		.4byte	.LLST13
 2201 05d7 13       		.uleb128 0x13
 2202 05d8 B5020000 		.4byte	.LASF51
ARM GAS  C:\temp\ccSYH5Oo.s 			page 69


 2203 05dc 01       		.byte	0x1
 2204 05dd 1804     		.2byte	0x418
 2205 05df 6B000000 		.4byte	0x6b
 2206 05e3 E2010000 		.4byte	.LLST14
 2207 05e7 13       		.uleb128 0x13
 2208 05e8 2A020000 		.4byte	.LASF52
 2209 05ec 01       		.byte	0x1
 2210 05ed 1904     		.2byte	0x419
 2211 05ef 6B000000 		.4byte	0x6b
 2212 05f3 2D020000 		.4byte	.LLST15
 2213 05f7 0C       		.uleb128 0xc
 2214 05f8 54000000 		.4byte	.LVL85
 2215 05fc 70090000 		.4byte	0x970
 2216 0600 0B       		.uleb128 0xb
 2217 0601 01       		.uleb128 0x1
 2218 0602 50       		.byte	0x50
 2219 0603 01       		.uleb128 0x1
 2220 0604 32       		.byte	0x32
 2221 0605 00       		.byte	0
 2222 0606 00       		.byte	0
 2223 0607 10       		.uleb128 0x10
 2224 0608 91050000 		.4byte	.LASF53
 2225 060c 01       		.byte	0x1
 2226 060d 7904     		.2byte	0x479
 2227 060f 00000000 		.4byte	.LFB20
 2228 0613 24000000 		.4byte	.LFE20-.LFB20
 2229 0617 01       		.uleb128 0x1
 2230 0618 9C       		.byte	0x9c
 2231 0619 47060000 		.4byte	0x647
 2232 061d 15       		.uleb128 0x15
 2233 061e C9000000 		.4byte	.LASF54
 2234 0622 01       		.byte	0x1
 2235 0623 7904     		.2byte	0x479
 2236 0625 47060000 		.4byte	0x647
 2237 0629 40020000 		.4byte	.LLST16
 2238 062d 13       		.uleb128 0x13
 2239 062e 3D030000 		.4byte	.LASF55
 2240 0632 01       		.byte	0x1
 2241 0633 7B04     		.2byte	0x47b
 2242 0635 76000000 		.4byte	0x76
 2243 0639 6C020000 		.4byte	.LLST17
 2244 063d 0E       		.uleb128 0xe
 2245 063e 1A000000 		.4byte	.LVL89
 2246 0642 B1050000 		.4byte	0x5b1
 2247 0646 00       		.byte	0
 2248 0647 07       		.uleb128 0x7
 2249 0648 04       		.byte	0x4
 2250 0649 4D060000 		.4byte	0x64d
 2251 064d 16       		.uleb128 0x16
 2252 064e 8F000000 		.4byte	0x8f
 2253 0652 10       		.uleb128 0x10
 2254 0653 C6020000 		.4byte	.LASF56
 2255 0657 01       		.byte	0x1
 2256 0658 A704     		.2byte	0x4a7
 2257 065a 00000000 		.4byte	.LFB21
 2258 065e 24000000 		.4byte	.LFE21-.LFB21
 2259 0662 01       		.uleb128 0x1
ARM GAS  C:\temp\ccSYH5Oo.s 			page 70


 2260 0663 9C       		.byte	0x9c
 2261 0664 A2060000 		.4byte	0x6a2
 2262 0668 15       		.uleb128 0x15
 2263 0669 C9000000 		.4byte	.LASF54
 2264 066d 01       		.byte	0x1
 2265 066e A704     		.2byte	0x4a7
 2266 0670 A2060000 		.4byte	0x6a2
 2267 0674 96020000 		.4byte	.LLST18
 2268 0678 15       		.uleb128 0x15
 2269 0679 C3040000 		.4byte	.LASF57
 2270 067d 01       		.byte	0x1
 2271 067e A704     		.2byte	0x4a7
 2272 0680 6B000000 		.4byte	0x6b
 2273 0684 B7020000 		.4byte	.LLST19
 2274 0688 13       		.uleb128 0x13
 2275 0689 3D030000 		.4byte	.LASF55
 2276 068d 01       		.byte	0x1
 2277 068e AA04     		.2byte	0x4aa
 2278 0690 6B000000 		.4byte	0x6b
 2279 0694 D8020000 		.4byte	.LLST20
 2280 0698 0E       		.uleb128 0xe
 2281 0699 18000000 		.4byte	.LVL95
 2282 069d B1050000 		.4byte	0x5b1
 2283 06a1 00       		.byte	0
 2284 06a2 07       		.uleb128 0x7
 2285 06a3 04       		.byte	0x4
 2286 06a4 A8060000 		.4byte	0x6a8
 2287 06a8 16       		.uleb128 0x16
 2288 06a9 6B000000 		.4byte	0x6b
 2289 06ad 10       		.uleb128 0x10
 2290 06ae 87020000 		.4byte	.LASF58
 2291 06b2 01       		.byte	0x1
 2292 06b3 CE04     		.2byte	0x4ce
 2293 06b5 00000000 		.4byte	.LFB22
 2294 06b9 20000000 		.4byte	.LFE22-.LFB22
 2295 06bd 01       		.uleb128 0x1
 2296 06be 9C       		.byte	0x9c
 2297 06bf FF060000 		.4byte	0x6ff
 2298 06c3 15       		.uleb128 0x15
 2299 06c4 AB000000 		.4byte	.LASF47
 2300 06c8 01       		.byte	0x1
 2301 06c9 CE04     		.2byte	0x4ce
 2302 06cb 6B000000 		.4byte	0x6b
 2303 06cf 10030000 		.4byte	.LLST21
 2304 06d3 0E       		.uleb128 0xe
 2305 06d4 0E000000 		.4byte	.LVL98
 2306 06d8 B1050000 		.4byte	0x5b1
 2307 06dc 0A       		.uleb128 0xa
 2308 06dd 14000000 		.4byte	.LVL99
 2309 06e1 B1050000 		.4byte	0x5b1
 2310 06e5 EF060000 		.4byte	0x6ef
 2311 06e9 0B       		.uleb128 0xb
 2312 06ea 01       		.uleb128 0x1
 2313 06eb 50       		.byte	0x50
 2314 06ec 01       		.uleb128 0x1
 2315 06ed 3D       		.byte	0x3d
 2316 06ee 00       		.byte	0
ARM GAS  C:\temp\ccSYH5Oo.s 			page 71


 2317 06ef 0C       		.uleb128 0xc
 2318 06f0 1A000000 		.4byte	.LVL100
 2319 06f4 B1050000 		.4byte	0x5b1
 2320 06f8 0B       		.uleb128 0xb
 2321 06f9 01       		.uleb128 0x1
 2322 06fa 50       		.byte	0x50
 2323 06fb 01       		.uleb128 0x1
 2324 06fc 3A       		.byte	0x3a
 2325 06fd 00       		.byte	0
 2326 06fe 00       		.byte	0
 2327 06ff 12       		.uleb128 0x12
 2328 0700 4F040000 		.4byte	.LASF59
 2329 0704 01       		.byte	0x1
 2330 0705 F904     		.2byte	0x4f9
 2331 0707 6B000000 		.4byte	0x6b
 2332 070b 00000000 		.4byte	.LFB23
 2333 070f 30000000 		.4byte	.LFE23-.LFB23
 2334 0713 01       		.uleb128 0x1
 2335 0714 9C       		.byte	0x9c
 2336 0715 4C070000 		.4byte	0x74c
 2337 0719 13       		.uleb128 0x13
 2338 071a 13030000 		.4byte	.LASF38
 2339 071e 01       		.byte	0x1
 2340 071f FC04     		.2byte	0x4fc
 2341 0721 6B000000 		.4byte	0x6b
 2342 0725 31030000 		.4byte	.LLST22
 2343 0729 0A       		.uleb128 0xa
 2344 072a 08000000 		.4byte	.LVL101
 2345 072e 5F090000 		.4byte	0x95f
 2346 0732 3C070000 		.4byte	0x73c
 2347 0736 0B       		.uleb128 0xb
 2348 0737 01       		.uleb128 0x1
 2349 0738 50       		.byte	0x50
 2350 0739 01       		.uleb128 0x1
 2351 073a 32       		.byte	0x32
 2352 073b 00       		.byte	0
 2353 073c 0C       		.uleb128 0xc
 2354 073d 28000000 		.4byte	.LVL103
 2355 0741 1E090000 		.4byte	0x91e
 2356 0745 0B       		.uleb128 0xb
 2357 0746 01       		.uleb128 0x1
 2358 0747 50       		.byte	0x50
 2359 0748 01       		.uleb128 0x1
 2360 0749 32       		.byte	0x32
 2361 074a 00       		.byte	0
 2362 074b 00       		.byte	0
 2363 074c 10       		.uleb128 0x10
 2364 074d 74020000 		.4byte	.LASF60
 2365 0751 01       		.byte	0x1
 2366 0752 4A05     		.2byte	0x54a
 2367 0754 00000000 		.4byte	.LFB24
 2368 0758 38000000 		.4byte	.LFE24-.LFB24
 2369 075c 01       		.uleb128 0x1
 2370 075d 9C       		.byte	0x9c
 2371 075e A7070000 		.4byte	0x7a7
 2372 0762 13       		.uleb128 0x13
 2373 0763 3F050000 		.4byte	.LASF22
ARM GAS  C:\temp\ccSYH5Oo.s 			page 72


 2374 0767 01       		.byte	0x1
 2375 0768 4C05     		.2byte	0x54c
 2376 076a 6B000000 		.4byte	0x6b
 2377 076e 44030000 		.4byte	.LLST23
 2378 0772 0E       		.uleb128 0xe
 2379 0773 06000000 		.4byte	.LVL105
 2380 0777 13090000 		.4byte	0x913
 2381 077b 0E       		.uleb128 0xe
 2382 077c 1A000000 		.4byte	.LVL106
 2383 0780 47090000 		.4byte	0x947
 2384 0784 0A       		.uleb128 0xa
 2385 0785 20000000 		.4byte	.LVL107
 2386 0789 5F090000 		.4byte	0x95f
 2387 078d 97070000 		.4byte	0x797
 2388 0791 0B       		.uleb128 0xb
 2389 0792 01       		.uleb128 0x1
 2390 0793 50       		.byte	0x50
 2391 0794 01       		.uleb128 0x1
 2392 0795 32       		.byte	0x32
 2393 0796 00       		.byte	0
 2394 0797 0C       		.uleb128 0xc
 2395 0798 2E000000 		.4byte	.LVL108
 2396 079c 1E090000 		.4byte	0x91e
 2397 07a0 0B       		.uleb128 0xb
 2398 07a1 01       		.uleb128 0x1
 2399 07a2 50       		.byte	0x50
 2400 07a3 01       		.uleb128 0x1
 2401 07a4 32       		.byte	0x32
 2402 07a5 00       		.byte	0
 2403 07a6 00       		.byte	0
 2404 07a7 10       		.uleb128 0x10
 2405 07a8 B4040000 		.4byte	.LASF61
 2406 07ac 01       		.byte	0x1
 2407 07ad A005     		.2byte	0x5a0
 2408 07af 00000000 		.4byte	.LFB25
 2409 07b3 60000000 		.4byte	.LFE25-.LFB25
 2410 07b7 01       		.uleb128 0x1
 2411 07b8 9C       		.byte	0x9c
 2412 07b9 FA070000 		.4byte	0x7fa
 2413 07bd 15       		.uleb128 0x15
 2414 07be 52020000 		.4byte	.LASF62
 2415 07c2 01       		.byte	0x1
 2416 07c3 A005     		.2byte	0x5a0
 2417 07c5 6B000000 		.4byte	0x6b
 2418 07c9 57030000 		.4byte	.LLST24
 2419 07cd 17       		.uleb128 0x17
 2420 07ce 08000000 		.4byte	.LBB2
 2421 07d2 46000000 		.4byte	.LBE2-.LBB2
 2422 07d6 13       		.uleb128 0x13
 2423 07d7 A9030000 		.4byte	.LASF63
 2424 07db 01       		.byte	0x1
 2425 07dc A805     		.2byte	0x5a8
 2426 07de 6B000000 		.4byte	0x6b
 2427 07e2 91030000 		.4byte	.LLST25
 2428 07e6 14       		.uleb128 0x14
 2429 07e7 4C010000 		.4byte	.LASF64
 2430 07eb 01       		.byte	0x1
ARM GAS  C:\temp\ccSYH5Oo.s 			page 73


 2431 07ec D005     		.2byte	0x5d0
 2432 07ee 6B000000 		.4byte	0x6b
 2433 07f2 05       		.uleb128 0x5
 2434 07f3 03       		.byte	0x3
 2435 07f4 08000000 		.4byte	txPeriod.4878
 2436 07f8 00       		.byte	0
 2437 07f9 00       		.byte	0
 2438 07fa 10       		.uleb128 0x10
 2439 07fb 4D030000 		.4byte	.LASF65
 2440 07ff 01       		.byte	0x1
 2441 0800 2406     		.2byte	0x624
 2442 0802 00000000 		.4byte	.LFB26
 2443 0806 02000000 		.4byte	.LFE26-.LFB26
 2444 080a 01       		.uleb128 0x1
 2445 080b 9C       		.byte	0x9c
 2446 080c 1F080000 		.4byte	0x81f
 2447 0810 11       		.uleb128 0x11
 2448 0811 F4010000 		.4byte	.LASF41
 2449 0815 01       		.byte	0x1
 2450 0816 2406     		.2byte	0x624
 2451 0818 6B000000 		.4byte	0x6b
 2452 081c 01       		.uleb128 0x1
 2453 081d 50       		.byte	0x50
 2454 081e 00       		.byte	0
 2455 081f 18       		.uleb128 0x18
 2456 0820 50050000 		.4byte	.LASF66
 2457 0824 01       		.byte	0x1
 2458 0825 1B       		.byte	0x1b
 2459 0826 6B000000 		.4byte	0x6b
 2460 082a 05       		.uleb128 0x5
 2461 082b 03       		.byte	0x3
 2462 082c 00000000 		.4byte	UART_initVar
 2463 0830 19       		.uleb128 0x19
 2464 0831 6B000000 		.4byte	0x6b
 2465 0835 40080000 		.4byte	0x840
 2466 0839 1A       		.uleb128 0x1a
 2467 083a C5000000 		.4byte	0xc5
 2468 083e FE       		.byte	0xfe
 2469 083f 00       		.byte	0
 2470 0840 18       		.uleb128 0x18
 2471 0841 44020000 		.4byte	.LASF67
 2472 0845 01       		.byte	0x1
 2473 0846 1E       		.byte	0x1e
 2474 0847 51080000 		.4byte	0x851
 2475 084b 05       		.uleb128 0x5
 2476 084c 03       		.byte	0x3
 2477 084d 00000000 		.4byte	UART_txBuffer
 2478 0851 06       		.uleb128 0x6
 2479 0852 30080000 		.4byte	0x830
 2480 0856 18       		.uleb128 0x18
 2481 0857 20010000 		.4byte	.LASF68
 2482 085b 01       		.byte	0x1
 2483 085c 1F       		.byte	0x1f
 2484 085d AD000000 		.4byte	0xad
 2485 0861 05       		.uleb128 0x5
 2486 0862 03       		.byte	0x3
 2487 0863 00000000 		.4byte	UART_txBufferRead
ARM GAS  C:\temp\ccSYH5Oo.s 			page 74


 2488 0867 18       		.uleb128 0x18
 2489 0868 B6000000 		.4byte	.LASF69
 2490 086c 01       		.byte	0x1
 2491 086d 20       		.byte	0x20
 2492 086e 6B000000 		.4byte	0x6b
 2493 0872 05       		.uleb128 0x5
 2494 0873 03       		.byte	0x3
 2495 0874 00000000 		.4byte	UART_txBufferWrite
 2496 0878 18       		.uleb128 0x18
 2497 0879 38040000 		.4byte	.LASF70
 2498 087d 01       		.byte	0x1
 2499 087e 24       		.byte	0x24
 2500 087f 6B000000 		.4byte	0x6b
 2501 0883 05       		.uleb128 0x5
 2502 0884 03       		.byte	0x3
 2503 0885 00000000 		.4byte	UART_errorStatus
 2504 0889 18       		.uleb128 0x18
 2505 088a 83050000 		.4byte	.LASF71
 2506 088e 01       		.byte	0x1
 2507 088f 25       		.byte	0x25
 2508 0890 9A080000 		.4byte	0x89a
 2509 0894 05       		.uleb128 0x5
 2510 0895 03       		.byte	0x3
 2511 0896 00000000 		.4byte	UART_rxBuffer
 2512 089a 06       		.uleb128 0x6
 2513 089b 30080000 		.4byte	0x830
 2514 089f 18       		.uleb128 0x18
 2515 08a0 2B030000 		.4byte	.LASF72
 2516 08a4 01       		.byte	0x1
 2517 08a5 26       		.byte	0x26
 2518 08a6 AD000000 		.4byte	0xad
 2519 08aa 05       		.uleb128 0x5
 2520 08ab 03       		.byte	0x3
 2521 08ac 00000000 		.4byte	UART_rxBufferRead
 2522 08b0 18       		.uleb128 0x18
 2523 08b1 00020000 		.4byte	.LASF73
 2524 08b5 01       		.byte	0x1
 2525 08b6 27       		.byte	0x27
 2526 08b7 AD000000 		.4byte	0xad
 2527 08bb 05       		.uleb128 0x5
 2528 08bc 03       		.byte	0x3
 2529 08bd 00000000 		.4byte	UART_rxBufferWrite
 2530 08c1 18       		.uleb128 0x18
 2531 08c2 FB020000 		.4byte	.LASF74
 2532 08c6 01       		.byte	0x1
 2533 08c7 28       		.byte	0x28
 2534 08c8 AD000000 		.4byte	0xad
 2535 08cc 05       		.uleb128 0x5
 2536 08cd 03       		.byte	0x3
 2537 08ce 00000000 		.4byte	UART_rxBufferLoopDetect
 2538 08d2 18       		.uleb128 0x18
 2539 08d3 0A010000 		.4byte	.LASF75
 2540 08d7 01       		.byte	0x1
 2541 08d8 29       		.byte	0x29
 2542 08d9 AD000000 		.4byte	0xad
 2543 08dd 05       		.uleb128 0x5
 2544 08de 03       		.byte	0x3
ARM GAS  C:\temp\ccSYH5Oo.s 			page 75


 2545 08df 00000000 		.4byte	UART_rxBufferOverflow
 2546 08e3 1B       		.uleb128 0x1b
 2547 08e4 13020000 		.4byte	.LASF86
 2548 08e8 03       		.byte	0x3
 2549 08e9 46       		.byte	0x46
 2550 08ea B2000000 		.4byte	0xb2
 2551 08ee FD080000 		.4byte	0x8fd
 2552 08f2 1C       		.uleb128 0x1c
 2553 08f3 6B000000 		.4byte	0x6b
 2554 08f7 1C       		.uleb128 0x1c
 2555 08f8 B2000000 		.4byte	0xb2
 2556 08fc 00       		.byte	0
 2557 08fd 1D       		.uleb128 0x1d
 2558 08fe 27040000 		.4byte	.LASF76
 2559 0902 03       		.byte	0x3
 2560 0903 49       		.byte	0x49
 2561 0904 13090000 		.4byte	0x913
 2562 0908 1C       		.uleb128 0x1c
 2563 0909 6B000000 		.4byte	0x6b
 2564 090d 1C       		.uleb128 0x1c
 2565 090e 6B000000 		.4byte	0x6b
 2566 0912 00       		.byte	0
 2567 0913 1E       		.uleb128 0x1e
 2568 0914 D4020000 		.4byte	.LASF87
 2569 0918 03       		.byte	0x3
 2570 0919 5E       		.byte	0x5e
 2571 091a 6B000000 		.4byte	0x6b
 2572 091e 1D       		.uleb128 0x1d
 2573 091f A8040000 		.4byte	.LASF77
 2574 0923 03       		.byte	0x3
 2575 0924 4C       		.byte	0x4c
 2576 0925 2F090000 		.4byte	0x92f
 2577 0929 1C       		.uleb128 0x1c
 2578 092a 6B000000 		.4byte	0x6b
 2579 092e 00       		.byte	0
 2580 092f 1D       		.uleb128 0x1d
 2581 0930 BA030000 		.4byte	.LASF78
 2582 0934 03       		.byte	0x3
 2583 0935 51       		.byte	0x51
 2584 0936 40090000 		.4byte	0x940
 2585 093a 1C       		.uleb128 0x1c
 2586 093b 6B000000 		.4byte	0x6b
 2587 093f 00       		.byte	0
 2588 0940 1F       		.uleb128 0x1f
 2589 0941 95030000 		.4byte	.LASF80
 2590 0945 04       		.byte	0x4
 2591 0946 23       		.byte	0x23
 2592 0947 1D       		.uleb128 0x1d
 2593 0948 95000000 		.4byte	.LASF79
 2594 094c 03       		.byte	0x3
 2595 094d 5F       		.byte	0x5f
 2596 094e 58090000 		.4byte	0x958
 2597 0952 1C       		.uleb128 0x1c
 2598 0953 6B000000 		.4byte	0x6b
 2599 0957 00       		.byte	0
 2600 0958 1F       		.uleb128 0x1f
 2601 0959 14040000 		.4byte	.LASF81
ARM GAS  C:\temp\ccSYH5Oo.s 			page 76


 2602 095d 04       		.byte	0x4
 2603 095e 27       		.byte	0x27
 2604 095f 1D       		.uleb128 0x1d
 2605 0960 5E010000 		.4byte	.LASF82
 2606 0964 03       		.byte	0x3
 2607 0965 4E       		.byte	0x4e
 2608 0966 70090000 		.4byte	0x970
 2609 096a 1C       		.uleb128 0x1c
 2610 096b 6B000000 		.4byte	0x6b
 2611 096f 00       		.byte	0
 2612 0970 20       		.uleb128 0x20
 2613 0971 EB020000 		.4byte	.LASF88
 2614 0975 03       		.byte	0x3
 2615 0976 50       		.byte	0x50
 2616 0977 1C       		.uleb128 0x1c
 2617 0978 6B000000 		.4byte	0x6b
 2618 097c 00       		.byte	0
 2619 097d 00       		.byte	0
 2620              		.section	.debug_abbrev,"",%progbits
 2621              	.Ldebug_abbrev0:
 2622 0000 01       		.uleb128 0x1
 2623 0001 11       		.uleb128 0x11
 2624 0002 01       		.byte	0x1
 2625 0003 25       		.uleb128 0x25
 2626 0004 0E       		.uleb128 0xe
 2627 0005 13       		.uleb128 0x13
 2628 0006 0B       		.uleb128 0xb
 2629 0007 03       		.uleb128 0x3
 2630 0008 0E       		.uleb128 0xe
 2631 0009 1B       		.uleb128 0x1b
 2632 000a 0E       		.uleb128 0xe
 2633 000b 55       		.uleb128 0x55
 2634 000c 17       		.uleb128 0x17
 2635 000d 11       		.uleb128 0x11
 2636 000e 01       		.uleb128 0x1
 2637 000f 10       		.uleb128 0x10
 2638 0010 17       		.uleb128 0x17
 2639 0011 00       		.byte	0
 2640 0012 00       		.byte	0
 2641 0013 02       		.uleb128 0x2
 2642 0014 24       		.uleb128 0x24
 2643 0015 00       		.byte	0
 2644 0016 0B       		.uleb128 0xb
 2645 0017 0B       		.uleb128 0xb
 2646 0018 3E       		.uleb128 0x3e
 2647 0019 0B       		.uleb128 0xb
 2648 001a 03       		.uleb128 0x3
 2649 001b 0E       		.uleb128 0xe
 2650 001c 00       		.byte	0
 2651 001d 00       		.byte	0
 2652 001e 03       		.uleb128 0x3
 2653 001f 24       		.uleb128 0x24
 2654 0020 00       		.byte	0
 2655 0021 0B       		.uleb128 0xb
 2656 0022 0B       		.uleb128 0xb
 2657 0023 3E       		.uleb128 0x3e
 2658 0024 0B       		.uleb128 0xb
ARM GAS  C:\temp\ccSYH5Oo.s 			page 77


 2659 0025 03       		.uleb128 0x3
 2660 0026 08       		.uleb128 0x8
 2661 0027 00       		.byte	0
 2662 0028 00       		.byte	0
 2663 0029 04       		.uleb128 0x4
 2664 002a 16       		.uleb128 0x16
 2665 002b 00       		.byte	0
 2666 002c 03       		.uleb128 0x3
 2667 002d 0E       		.uleb128 0xe
 2668 002e 3A       		.uleb128 0x3a
 2669 002f 0B       		.uleb128 0xb
 2670 0030 3B       		.uleb128 0x3b
 2671 0031 0B       		.uleb128 0xb
 2672 0032 49       		.uleb128 0x49
 2673 0033 13       		.uleb128 0x13
 2674 0034 00       		.byte	0
 2675 0035 00       		.byte	0
 2676 0036 05       		.uleb128 0x5
 2677 0037 16       		.uleb128 0x16
 2678 0038 00       		.byte	0
 2679 0039 03       		.uleb128 0x3
 2680 003a 0E       		.uleb128 0xe
 2681 003b 3A       		.uleb128 0x3a
 2682 003c 0B       		.uleb128 0xb
 2683 003d 3B       		.uleb128 0x3b
 2684 003e 05       		.uleb128 0x5
 2685 003f 49       		.uleb128 0x49
 2686 0040 13       		.uleb128 0x13
 2687 0041 00       		.byte	0
 2688 0042 00       		.byte	0
 2689 0043 06       		.uleb128 0x6
 2690 0044 35       		.uleb128 0x35
 2691 0045 00       		.byte	0
 2692 0046 49       		.uleb128 0x49
 2693 0047 13       		.uleb128 0x13
 2694 0048 00       		.byte	0
 2695 0049 00       		.byte	0
 2696 004a 07       		.uleb128 0x7
 2697 004b 0F       		.uleb128 0xf
 2698 004c 00       		.byte	0
 2699 004d 0B       		.uleb128 0xb
 2700 004e 0B       		.uleb128 0xb
 2701 004f 49       		.uleb128 0x49
 2702 0050 13       		.uleb128 0x13
 2703 0051 00       		.byte	0
 2704 0052 00       		.byte	0
 2705 0053 08       		.uleb128 0x8
 2706 0054 15       		.uleb128 0x15
 2707 0055 00       		.byte	0
 2708 0056 27       		.uleb128 0x27
 2709 0057 19       		.uleb128 0x19
 2710 0058 00       		.byte	0
 2711 0059 00       		.byte	0
 2712 005a 09       		.uleb128 0x9
 2713 005b 2E       		.uleb128 0x2e
 2714 005c 01       		.byte	0x1
 2715 005d 3F       		.uleb128 0x3f
ARM GAS  C:\temp\ccSYH5Oo.s 			page 78


 2716 005e 19       		.uleb128 0x19
 2717 005f 03       		.uleb128 0x3
 2718 0060 0E       		.uleb128 0xe
 2719 0061 3A       		.uleb128 0x3a
 2720 0062 0B       		.uleb128 0xb
 2721 0063 3B       		.uleb128 0x3b
 2722 0064 0B       		.uleb128 0xb
 2723 0065 27       		.uleb128 0x27
 2724 0066 19       		.uleb128 0x19
 2725 0067 11       		.uleb128 0x11
 2726 0068 01       		.uleb128 0x1
 2727 0069 12       		.uleb128 0x12
 2728 006a 06       		.uleb128 0x6
 2729 006b 40       		.uleb128 0x40
 2730 006c 18       		.uleb128 0x18
 2731 006d 9742     		.uleb128 0x2117
 2732 006f 19       		.uleb128 0x19
 2733 0070 01       		.uleb128 0x1
 2734 0071 13       		.uleb128 0x13
 2735 0072 00       		.byte	0
 2736 0073 00       		.byte	0
 2737 0074 0A       		.uleb128 0xa
 2738 0075 898201   		.uleb128 0x4109
 2739 0078 01       		.byte	0x1
 2740 0079 11       		.uleb128 0x11
 2741 007a 01       		.uleb128 0x1
 2742 007b 31       		.uleb128 0x31
 2743 007c 13       		.uleb128 0x13
 2744 007d 01       		.uleb128 0x1
 2745 007e 13       		.uleb128 0x13
 2746 007f 00       		.byte	0
 2747 0080 00       		.byte	0
 2748 0081 0B       		.uleb128 0xb
 2749 0082 8A8201   		.uleb128 0x410a
 2750 0085 00       		.byte	0
 2751 0086 02       		.uleb128 0x2
 2752 0087 18       		.uleb128 0x18
 2753 0088 9142     		.uleb128 0x2111
 2754 008a 18       		.uleb128 0x18
 2755 008b 00       		.byte	0
 2756 008c 00       		.byte	0
 2757 008d 0C       		.uleb128 0xc
 2758 008e 898201   		.uleb128 0x4109
 2759 0091 01       		.byte	0x1
 2760 0092 11       		.uleb128 0x11
 2761 0093 01       		.uleb128 0x1
 2762 0094 31       		.uleb128 0x31
 2763 0095 13       		.uleb128 0x13
 2764 0096 00       		.byte	0
 2765 0097 00       		.byte	0
 2766 0098 0D       		.uleb128 0xd
 2767 0099 34       		.uleb128 0x34
 2768 009a 00       		.byte	0
 2769 009b 03       		.uleb128 0x3
 2770 009c 0E       		.uleb128 0xe
 2771 009d 3A       		.uleb128 0x3a
 2772 009e 0B       		.uleb128 0xb
ARM GAS  C:\temp\ccSYH5Oo.s 			page 79


 2773 009f 3B       		.uleb128 0x3b
 2774 00a0 0B       		.uleb128 0xb
 2775 00a1 49       		.uleb128 0x49
 2776 00a2 13       		.uleb128 0x13
 2777 00a3 02       		.uleb128 0x2
 2778 00a4 17       		.uleb128 0x17
 2779 00a5 00       		.byte	0
 2780 00a6 00       		.byte	0
 2781 00a7 0E       		.uleb128 0xe
 2782 00a8 898201   		.uleb128 0x4109
 2783 00ab 00       		.byte	0
 2784 00ac 11       		.uleb128 0x11
 2785 00ad 01       		.uleb128 0x1
 2786 00ae 31       		.uleb128 0x31
 2787 00af 13       		.uleb128 0x13
 2788 00b0 00       		.byte	0
 2789 00b1 00       		.byte	0
 2790 00b2 0F       		.uleb128 0xf
 2791 00b3 2E       		.uleb128 0x2e
 2792 00b4 00       		.byte	0
 2793 00b5 3F       		.uleb128 0x3f
 2794 00b6 19       		.uleb128 0x19
 2795 00b7 03       		.uleb128 0x3
 2796 00b8 0E       		.uleb128 0xe
 2797 00b9 3A       		.uleb128 0x3a
 2798 00ba 0B       		.uleb128 0xb
 2799 00bb 3B       		.uleb128 0x3b
 2800 00bc 05       		.uleb128 0x5
 2801 00bd 27       		.uleb128 0x27
 2802 00be 19       		.uleb128 0x19
 2803 00bf 49       		.uleb128 0x49
 2804 00c0 13       		.uleb128 0x13
 2805 00c1 11       		.uleb128 0x11
 2806 00c2 01       		.uleb128 0x1
 2807 00c3 12       		.uleb128 0x12
 2808 00c4 06       		.uleb128 0x6
 2809 00c5 40       		.uleb128 0x40
 2810 00c6 18       		.uleb128 0x18
 2811 00c7 9742     		.uleb128 0x2117
 2812 00c9 19       		.uleb128 0x19
 2813 00ca 00       		.byte	0
 2814 00cb 00       		.byte	0
 2815 00cc 10       		.uleb128 0x10
 2816 00cd 2E       		.uleb128 0x2e
 2817 00ce 01       		.byte	0x1
 2818 00cf 3F       		.uleb128 0x3f
 2819 00d0 19       		.uleb128 0x19
 2820 00d1 03       		.uleb128 0x3
 2821 00d2 0E       		.uleb128 0xe
 2822 00d3 3A       		.uleb128 0x3a
 2823 00d4 0B       		.uleb128 0xb
 2824 00d5 3B       		.uleb128 0x3b
 2825 00d6 05       		.uleb128 0x5
 2826 00d7 27       		.uleb128 0x27
 2827 00d8 19       		.uleb128 0x19
 2828 00d9 11       		.uleb128 0x11
 2829 00da 01       		.uleb128 0x1
ARM GAS  C:\temp\ccSYH5Oo.s 			page 80


 2830 00db 12       		.uleb128 0x12
 2831 00dc 06       		.uleb128 0x6
 2832 00dd 40       		.uleb128 0x40
 2833 00de 18       		.uleb128 0x18
 2834 00df 9742     		.uleb128 0x2117
 2835 00e1 19       		.uleb128 0x19
 2836 00e2 01       		.uleb128 0x1
 2837 00e3 13       		.uleb128 0x13
 2838 00e4 00       		.byte	0
 2839 00e5 00       		.byte	0
 2840 00e6 11       		.uleb128 0x11
 2841 00e7 05       		.uleb128 0x5
 2842 00e8 00       		.byte	0
 2843 00e9 03       		.uleb128 0x3
 2844 00ea 0E       		.uleb128 0xe
 2845 00eb 3A       		.uleb128 0x3a
 2846 00ec 0B       		.uleb128 0xb
 2847 00ed 3B       		.uleb128 0x3b
 2848 00ee 05       		.uleb128 0x5
 2849 00ef 49       		.uleb128 0x49
 2850 00f0 13       		.uleb128 0x13
 2851 00f1 02       		.uleb128 0x2
 2852 00f2 18       		.uleb128 0x18
 2853 00f3 00       		.byte	0
 2854 00f4 00       		.byte	0
 2855 00f5 12       		.uleb128 0x12
 2856 00f6 2E       		.uleb128 0x2e
 2857 00f7 01       		.byte	0x1
 2858 00f8 3F       		.uleb128 0x3f
 2859 00f9 19       		.uleb128 0x19
 2860 00fa 03       		.uleb128 0x3
 2861 00fb 0E       		.uleb128 0xe
 2862 00fc 3A       		.uleb128 0x3a
 2863 00fd 0B       		.uleb128 0xb
 2864 00fe 3B       		.uleb128 0x3b
 2865 00ff 05       		.uleb128 0x5
 2866 0100 27       		.uleb128 0x27
 2867 0101 19       		.uleb128 0x19
 2868 0102 49       		.uleb128 0x49
 2869 0103 13       		.uleb128 0x13
 2870 0104 11       		.uleb128 0x11
 2871 0105 01       		.uleb128 0x1
 2872 0106 12       		.uleb128 0x12
 2873 0107 06       		.uleb128 0x6
 2874 0108 40       		.uleb128 0x40
 2875 0109 18       		.uleb128 0x18
 2876 010a 9742     		.uleb128 0x2117
 2877 010c 19       		.uleb128 0x19
 2878 010d 01       		.uleb128 0x1
 2879 010e 13       		.uleb128 0x13
 2880 010f 00       		.byte	0
 2881 0110 00       		.byte	0
 2882 0111 13       		.uleb128 0x13
 2883 0112 34       		.uleb128 0x34
 2884 0113 00       		.byte	0
 2885 0114 03       		.uleb128 0x3
 2886 0115 0E       		.uleb128 0xe
ARM GAS  C:\temp\ccSYH5Oo.s 			page 81


 2887 0116 3A       		.uleb128 0x3a
 2888 0117 0B       		.uleb128 0xb
 2889 0118 3B       		.uleb128 0x3b
 2890 0119 05       		.uleb128 0x5
 2891 011a 49       		.uleb128 0x49
 2892 011b 13       		.uleb128 0x13
 2893 011c 02       		.uleb128 0x2
 2894 011d 17       		.uleb128 0x17
 2895 011e 00       		.byte	0
 2896 011f 00       		.byte	0
 2897 0120 14       		.uleb128 0x14
 2898 0121 34       		.uleb128 0x34
 2899 0122 00       		.byte	0
 2900 0123 03       		.uleb128 0x3
 2901 0124 0E       		.uleb128 0xe
 2902 0125 3A       		.uleb128 0x3a
 2903 0126 0B       		.uleb128 0xb
 2904 0127 3B       		.uleb128 0x3b
 2905 0128 05       		.uleb128 0x5
 2906 0129 49       		.uleb128 0x49
 2907 012a 13       		.uleb128 0x13
 2908 012b 02       		.uleb128 0x2
 2909 012c 18       		.uleb128 0x18
 2910 012d 00       		.byte	0
 2911 012e 00       		.byte	0
 2912 012f 15       		.uleb128 0x15
 2913 0130 05       		.uleb128 0x5
 2914 0131 00       		.byte	0
 2915 0132 03       		.uleb128 0x3
 2916 0133 0E       		.uleb128 0xe
 2917 0134 3A       		.uleb128 0x3a
 2918 0135 0B       		.uleb128 0xb
 2919 0136 3B       		.uleb128 0x3b
 2920 0137 05       		.uleb128 0x5
 2921 0138 49       		.uleb128 0x49
 2922 0139 13       		.uleb128 0x13
 2923 013a 02       		.uleb128 0x2
 2924 013b 17       		.uleb128 0x17
 2925 013c 00       		.byte	0
 2926 013d 00       		.byte	0
 2927 013e 16       		.uleb128 0x16
 2928 013f 26       		.uleb128 0x26
 2929 0140 00       		.byte	0
 2930 0141 49       		.uleb128 0x49
 2931 0142 13       		.uleb128 0x13
 2932 0143 00       		.byte	0
 2933 0144 00       		.byte	0
 2934 0145 17       		.uleb128 0x17
 2935 0146 0B       		.uleb128 0xb
 2936 0147 01       		.byte	0x1
 2937 0148 11       		.uleb128 0x11
 2938 0149 01       		.uleb128 0x1
 2939 014a 12       		.uleb128 0x12
 2940 014b 06       		.uleb128 0x6
 2941 014c 00       		.byte	0
 2942 014d 00       		.byte	0
 2943 014e 18       		.uleb128 0x18
ARM GAS  C:\temp\ccSYH5Oo.s 			page 82


 2944 014f 34       		.uleb128 0x34
 2945 0150 00       		.byte	0
 2946 0151 03       		.uleb128 0x3
 2947 0152 0E       		.uleb128 0xe
 2948 0153 3A       		.uleb128 0x3a
 2949 0154 0B       		.uleb128 0xb
 2950 0155 3B       		.uleb128 0x3b
 2951 0156 0B       		.uleb128 0xb
 2952 0157 49       		.uleb128 0x49
 2953 0158 13       		.uleb128 0x13
 2954 0159 3F       		.uleb128 0x3f
 2955 015a 19       		.uleb128 0x19
 2956 015b 02       		.uleb128 0x2
 2957 015c 18       		.uleb128 0x18
 2958 015d 00       		.byte	0
 2959 015e 00       		.byte	0
 2960 015f 19       		.uleb128 0x19
 2961 0160 01       		.uleb128 0x1
 2962 0161 01       		.byte	0x1
 2963 0162 49       		.uleb128 0x49
 2964 0163 13       		.uleb128 0x13
 2965 0164 01       		.uleb128 0x1
 2966 0165 13       		.uleb128 0x13
 2967 0166 00       		.byte	0
 2968 0167 00       		.byte	0
 2969 0168 1A       		.uleb128 0x1a
 2970 0169 21       		.uleb128 0x21
 2971 016a 00       		.byte	0
 2972 016b 49       		.uleb128 0x49
 2973 016c 13       		.uleb128 0x13
 2974 016d 2F       		.uleb128 0x2f
 2975 016e 0B       		.uleb128 0xb
 2976 016f 00       		.byte	0
 2977 0170 00       		.byte	0
 2978 0171 1B       		.uleb128 0x1b
 2979 0172 2E       		.uleb128 0x2e
 2980 0173 01       		.byte	0x1
 2981 0174 3F       		.uleb128 0x3f
 2982 0175 19       		.uleb128 0x19
 2983 0176 03       		.uleb128 0x3
 2984 0177 0E       		.uleb128 0xe
 2985 0178 3A       		.uleb128 0x3a
 2986 0179 0B       		.uleb128 0xb
 2987 017a 3B       		.uleb128 0x3b
 2988 017b 0B       		.uleb128 0xb
 2989 017c 27       		.uleb128 0x27
 2990 017d 19       		.uleb128 0x19
 2991 017e 49       		.uleb128 0x49
 2992 017f 13       		.uleb128 0x13
 2993 0180 3C       		.uleb128 0x3c
 2994 0181 19       		.uleb128 0x19
 2995 0182 01       		.uleb128 0x1
 2996 0183 13       		.uleb128 0x13
 2997 0184 00       		.byte	0
 2998 0185 00       		.byte	0
 2999 0186 1C       		.uleb128 0x1c
 3000 0187 05       		.uleb128 0x5
ARM GAS  C:\temp\ccSYH5Oo.s 			page 83


 3001 0188 00       		.byte	0
 3002 0189 49       		.uleb128 0x49
 3003 018a 13       		.uleb128 0x13
 3004 018b 00       		.byte	0
 3005 018c 00       		.byte	0
 3006 018d 1D       		.uleb128 0x1d
 3007 018e 2E       		.uleb128 0x2e
 3008 018f 01       		.byte	0x1
 3009 0190 3F       		.uleb128 0x3f
 3010 0191 19       		.uleb128 0x19
 3011 0192 03       		.uleb128 0x3
 3012 0193 0E       		.uleb128 0xe
 3013 0194 3A       		.uleb128 0x3a
 3014 0195 0B       		.uleb128 0xb
 3015 0196 3B       		.uleb128 0x3b
 3016 0197 0B       		.uleb128 0xb
 3017 0198 27       		.uleb128 0x27
 3018 0199 19       		.uleb128 0x19
 3019 019a 3C       		.uleb128 0x3c
 3020 019b 19       		.uleb128 0x19
 3021 019c 01       		.uleb128 0x1
 3022 019d 13       		.uleb128 0x13
 3023 019e 00       		.byte	0
 3024 019f 00       		.byte	0
 3025 01a0 1E       		.uleb128 0x1e
 3026 01a1 2E       		.uleb128 0x2e
 3027 01a2 00       		.byte	0
 3028 01a3 3F       		.uleb128 0x3f
 3029 01a4 19       		.uleb128 0x19
 3030 01a5 03       		.uleb128 0x3
 3031 01a6 0E       		.uleb128 0xe
 3032 01a7 3A       		.uleb128 0x3a
 3033 01a8 0B       		.uleb128 0xb
 3034 01a9 3B       		.uleb128 0x3b
 3035 01aa 0B       		.uleb128 0xb
 3036 01ab 27       		.uleb128 0x27
 3037 01ac 19       		.uleb128 0x19
 3038 01ad 49       		.uleb128 0x49
 3039 01ae 13       		.uleb128 0x13
 3040 01af 3C       		.uleb128 0x3c
 3041 01b0 19       		.uleb128 0x19
 3042 01b1 00       		.byte	0
 3043 01b2 00       		.byte	0
 3044 01b3 1F       		.uleb128 0x1f
 3045 01b4 2E       		.uleb128 0x2e
 3046 01b5 00       		.byte	0
 3047 01b6 3F       		.uleb128 0x3f
 3048 01b7 19       		.uleb128 0x19
 3049 01b8 03       		.uleb128 0x3
 3050 01b9 0E       		.uleb128 0xe
 3051 01ba 3A       		.uleb128 0x3a
 3052 01bb 0B       		.uleb128 0xb
 3053 01bc 3B       		.uleb128 0x3b
 3054 01bd 0B       		.uleb128 0xb
 3055 01be 27       		.uleb128 0x27
 3056 01bf 19       		.uleb128 0x19
 3057 01c0 3C       		.uleb128 0x3c
ARM GAS  C:\temp\ccSYH5Oo.s 			page 84


 3058 01c1 19       		.uleb128 0x19
 3059 01c2 00       		.byte	0
 3060 01c3 00       		.byte	0
 3061 01c4 20       		.uleb128 0x20
 3062 01c5 2E       		.uleb128 0x2e
 3063 01c6 01       		.byte	0x1
 3064 01c7 3F       		.uleb128 0x3f
 3065 01c8 19       		.uleb128 0x19
 3066 01c9 03       		.uleb128 0x3
 3067 01ca 0E       		.uleb128 0xe
 3068 01cb 3A       		.uleb128 0x3a
 3069 01cc 0B       		.uleb128 0xb
 3070 01cd 3B       		.uleb128 0x3b
 3071 01ce 0B       		.uleb128 0xb
 3072 01cf 27       		.uleb128 0x27
 3073 01d0 19       		.uleb128 0x19
 3074 01d1 3C       		.uleb128 0x3c
 3075 01d2 19       		.uleb128 0x19
 3076 01d3 00       		.byte	0
 3077 01d4 00       		.byte	0
 3078 01d5 00       		.byte	0
 3079              		.section	.debug_loc,"",%progbits
 3080              	.Ldebug_loc0:
 3081              	.LLST0:
 3082 0000 0C000000 		.4byte	.LVL5
 3083 0004 40000000 		.4byte	.LVL11
 3084 0008 0100     		.2byte	0x1
 3085 000a 54       		.byte	0x54
 3086 000b 00000000 		.4byte	0
 3087 000f 00000000 		.4byte	0
 3088              	.LLST1:
 3089 0013 0C000000 		.4byte	.LVL15
 3090 0017 3A000000 		.4byte	.LVL20
 3091 001b 0100     		.2byte	0x1
 3092 001d 54       		.byte	0x54
 3093 001e 00000000 		.4byte	0
 3094 0022 00000000 		.4byte	0
 3095              	.LLST2:
 3096 0026 38000000 		.4byte	.LVL29
 3097 002a 42000000 		.4byte	.LVL30
 3098 002e 0100     		.2byte	0x1
 3099 0030 54       		.byte	0x54
 3100 0031 48000000 		.4byte	.LVL32
 3101 0035 50000000 		.4byte	.LVL34
 3102 0039 0100     		.2byte	0x1
 3103 003b 54       		.byte	0x54
 3104 003c 00000000 		.4byte	0
 3105 0040 00000000 		.4byte	0
 3106              	.LLST3:
 3107 0044 12000000 		.4byte	.LVL24
 3108 0048 24000000 		.4byte	.LVL26
 3109 004c 0100     		.2byte	0x1
 3110 004e 53       		.byte	0x53
 3111 004f 24000000 		.4byte	.LVL26
 3112 0053 26000000 		.4byte	.LVL27
 3113 0057 0300     		.2byte	0x3
 3114 0059 73       		.byte	0x73
ARM GAS  C:\temp\ccSYH5Oo.s 			page 85


 3115 005a 7F       		.sleb128 -1
 3116 005b 9F       		.byte	0x9f
 3117 005c 42000000 		.4byte	.LVL30
 3118 0060 44000000 		.4byte	.LVL31
 3119 0064 0100     		.2byte	0x1
 3120 0066 53       		.byte	0x53
 3121 0067 00000000 		.4byte	0
 3122 006b 00000000 		.4byte	0
 3123              	.LLST4:
 3124 006f 14000000 		.4byte	.LVL25
 3125 0073 2E000000 		.4byte	.LVL28
 3126 0077 0100     		.2byte	0x1
 3127 0079 50       		.byte	0x50
 3128 007a 42000000 		.4byte	.LVL30
 3129 007e 48000000 		.4byte	.LVL32
 3130 0082 0100     		.2byte	0x1
 3131 0084 50       		.byte	0x50
 3132 0085 00000000 		.4byte	0
 3133 0089 00000000 		.4byte	0
 3134              	.LLST5:
 3135 008d 00000000 		.4byte	.LVL37
 3136 0091 3A000000 		.4byte	.LVL44
 3137 0095 0200     		.2byte	0x2
 3138 0097 30       		.byte	0x30
 3139 0098 9F       		.byte	0x9f
 3140 0099 3A000000 		.4byte	.LVL44
 3141 009d 44000000 		.4byte	.LVL45
 3142 00a1 0100     		.2byte	0x1
 3143 00a3 54       		.byte	0x54
 3144 00a4 44000000 		.4byte	.LVL45
 3145 00a8 52000000 		.4byte	.LVL48
 3146 00ac 0200     		.2byte	0x2
 3147 00ae 30       		.byte	0x30
 3148 00af 9F       		.byte	0x9f
 3149 00b0 52000000 		.4byte	.LVL48
 3150 00b4 5E000000 		.4byte	.LVL50
 3151 00b8 0100     		.2byte	0x1
 3152 00ba 51       		.byte	0x51
 3153 00bb 5E000000 		.4byte	.LVL50
 3154 00bf 66000000 		.4byte	.LVL52
 3155 00c3 0100     		.2byte	0x1
 3156 00c5 54       		.byte	0x54
 3157 00c6 00000000 		.4byte	0
 3158 00ca 00000000 		.4byte	0
 3159              	.LLST6:
 3160 00ce 4A000000 		.4byte	.LVL47
 3161 00d2 56000000 		.4byte	.LVL49
 3162 00d6 0100     		.2byte	0x1
 3163 00d8 53       		.byte	0x53
 3164 00d9 00000000 		.4byte	0
 3165 00dd 00000000 		.4byte	0
 3166              	.LLST7:
 3167 00e1 12000000 		.4byte	.LVL39
 3168 00e5 26000000 		.4byte	.LVL41
 3169 00e9 0100     		.2byte	0x1
 3170 00eb 53       		.byte	0x53
 3171 00ec 26000000 		.4byte	.LVL41
ARM GAS  C:\temp\ccSYH5Oo.s 			page 86


 3172 00f0 28000000 		.4byte	.LVL42
 3173 00f4 0300     		.2byte	0x3
 3174 00f6 73       		.byte	0x73
 3175 00f7 7F       		.sleb128 -1
 3176 00f8 9F       		.byte	0x9f
 3177 00f9 44000000 		.4byte	.LVL45
 3178 00fd 46000000 		.4byte	.LVL46
 3179 0101 0100     		.2byte	0x1
 3180 0103 53       		.byte	0x53
 3181 0104 00000000 		.4byte	0
 3182 0108 00000000 		.4byte	0
 3183              	.LLST8:
 3184 010c 16000000 		.4byte	.LVL40
 3185 0110 30000000 		.4byte	.LVL43
 3186 0114 0100     		.2byte	0x1
 3187 0116 50       		.byte	0x50
 3188 0117 44000000 		.4byte	.LVL45
 3189 011b 5E000000 		.4byte	.LVL50
 3190 011f 0100     		.2byte	0x1
 3191 0121 50       		.byte	0x50
 3192 0122 00000000 		.4byte	0
 3193 0126 00000000 		.4byte	0
 3194              	.LLST9:
 3195 012a 0E000000 		.4byte	.LVL54
 3196 012e 1A000000 		.4byte	.LVL57
 3197 0132 0100     		.2byte	0x1
 3198 0134 54       		.byte	0x54
 3199 0135 00000000 		.4byte	0
 3200 0139 00000000 		.4byte	0
 3201              	.LLST10:
 3202 013d 36000000 		.4byte	.LVL59
 3203 0141 3E000000 		.4byte	.LVL61
 3204 0145 0100     		.2byte	0x1
 3205 0147 54       		.byte	0x54
 3206 0148 3E000000 		.4byte	.LVL61
 3207 014c 44000000 		.4byte	.LFE11
 3208 0150 0100     		.2byte	0x1
 3209 0152 50       		.byte	0x50
 3210 0153 00000000 		.4byte	0
 3211 0157 00000000 		.4byte	0
 3212              	.LLST11:
 3213 015b 06000000 		.4byte	.LVL62
 3214 015f 19000000 		.4byte	.LVL63-1
 3215 0163 0100     		.2byte	0x1
 3216 0165 50       		.byte	0x50
 3217 0166 00000000 		.4byte	0
 3218 016a 00000000 		.4byte	0
 3219              	.LLST12:
 3220 016e 00000000 		.4byte	.LVL70
 3221 0172 10000000 		.4byte	.LVL71
 3222 0176 0100     		.2byte	0x1
 3223 0178 50       		.byte	0x50
 3224 0179 10000000 		.4byte	.LVL71
 3225 017d 54000000 		.4byte	.LFE17
 3226 0181 0400     		.2byte	0x4
 3227 0183 F3       		.byte	0xf3
 3228 0184 01       		.uleb128 0x1
ARM GAS  C:\temp\ccSYH5Oo.s 			page 87


 3229 0185 50       		.byte	0x50
 3230 0186 9F       		.byte	0x9f
 3231 0187 00000000 		.4byte	0
 3232 018b 00000000 		.4byte	0
 3233              	.LLST13:
 3234 018f 00000000 		.4byte	.LVL74
 3235 0193 46000000 		.4byte	.LVL82
 3236 0197 0100     		.2byte	0x1
 3237 0199 50       		.byte	0x50
 3238 019a 46000000 		.4byte	.LVL82
 3239 019e 48000000 		.4byte	.LVL83
 3240 01a2 0500     		.2byte	0x5
 3241 01a4 73       		.byte	0x73
 3242 01a5 00       		.sleb128 0
 3243 01a6 72       		.byte	0x72
 3244 01a7 00       		.sleb128 0
 3245 01a8 22       		.byte	0x22
 3246 01a9 48000000 		.4byte	.LVL83
 3247 01ad 4C000000 		.4byte	.LVL84
 3248 01b1 0700     		.2byte	0x7
 3249 01b3 73       		.byte	0x73
 3250 01b4 00       		.sleb128 0
 3251 01b5 72       		.byte	0x72
 3252 01b6 00       		.sleb128 0
 3253 01b7 22       		.byte	0x22
 3254 01b8 31       		.byte	0x31
 3255 01b9 1C       		.byte	0x1c
 3256 01ba 4C000000 		.4byte	.LVL84
 3257 01be 53000000 		.4byte	.LVL85-1
 3258 01c2 0800     		.2byte	0x8
 3259 01c4 72       		.byte	0x72
 3260 01c5 00       		.sleb128 0
 3261 01c6 03       		.byte	0x3
 3262 01c7 FFFFFFFF 		.4byte	UART_txBuffer-1
 3263 01cb 22       		.byte	0x22
 3264 01cc 53000000 		.4byte	.LVL85-1
 3265 01d0 68000000 		.4byte	.LFE19
 3266 01d4 0400     		.2byte	0x4
 3267 01d6 F3       		.byte	0xf3
 3268 01d7 01       		.uleb128 0x1
 3269 01d8 50       		.byte	0x50
 3270 01d9 9F       		.byte	0x9f
 3271 01da 00000000 		.4byte	0
 3272 01de 00000000 		.4byte	0
 3273              	.LLST14:
 3274 01e2 06000000 		.4byte	.LVL75
 3275 01e6 32000000 		.4byte	.LVL77
 3276 01ea 0500     		.2byte	0x5
 3277 01ec 03       		.byte	0x3
 3278 01ed 00000000 		.4byte	UART_txBufferWrite
 3279 01f1 34000000 		.4byte	.LVL78
 3280 01f5 40000000 		.4byte	.LVL80
 3281 01f9 0500     		.2byte	0x5
 3282 01fb 03       		.byte	0x3
 3283 01fc 00000000 		.4byte	UART_txBufferWrite
 3284 0200 40000000 		.4byte	.LVL80
 3285 0204 44000000 		.4byte	.LVL81
ARM GAS  C:\temp\ccSYH5Oo.s 			page 88


 3286 0208 0100     		.2byte	0x1
 3287 020a 52       		.byte	0x52
 3288 020b 44000000 		.4byte	.LVL81
 3289 020f 48000000 		.4byte	.LVL83
 3290 0213 0300     		.2byte	0x3
 3291 0215 72       		.byte	0x72
 3292 0216 01       		.sleb128 1
 3293 0217 9F       		.byte	0x9f
 3294 0218 48000000 		.4byte	.LVL83
 3295 021c 53000000 		.4byte	.LVL85-1
 3296 0220 0300     		.2byte	0x3
 3297 0222 72       		.byte	0x72
 3298 0223 00       		.sleb128 0
 3299 0224 9F       		.byte	0x9f
 3300 0225 00000000 		.4byte	0
 3301 0229 00000000 		.4byte	0
 3302              	.LLST15:
 3303 022d 0A000000 		.4byte	.LVL76
 3304 0231 3C000000 		.4byte	.LVL79
 3305 0235 0100     		.2byte	0x1
 3306 0237 51       		.byte	0x51
 3307 0238 00000000 		.4byte	0
 3308 023c 00000000 		.4byte	0
 3309              	.LLST16:
 3310 0240 00000000 		.4byte	.LVL86
 3311 0244 0E000000 		.4byte	.LVL87
 3312 0248 0100     		.2byte	0x1
 3313 024a 50       		.byte	0x50
 3314 024b 0E000000 		.4byte	.LVL87
 3315 024f 1E000000 		.4byte	.LVL92
 3316 0253 0100     		.2byte	0x1
 3317 0255 55       		.byte	0x55
 3318 0256 1E000000 		.4byte	.LVL92
 3319 025a 24000000 		.4byte	.LFE20
 3320 025e 0400     		.2byte	0x4
 3321 0260 F3       		.byte	0xf3
 3322 0261 01       		.uleb128 0x1
 3323 0262 50       		.byte	0x50
 3324 0263 9F       		.byte	0x9f
 3325 0264 00000000 		.4byte	0
 3326 0268 00000000 		.4byte	0
 3327              	.LLST17:
 3328 026c 00000000 		.4byte	.LVL86
 3329 0270 0E000000 		.4byte	.LVL87
 3330 0274 0200     		.2byte	0x2
 3331 0276 30       		.byte	0x30
 3332 0277 9F       		.byte	0x9f
 3333 0278 0E000000 		.4byte	.LVL87
 3334 027c 16000000 		.4byte	.LVL88
 3335 0280 0100     		.2byte	0x1
 3336 0282 54       		.byte	0x54
 3337 0283 1C000000 		.4byte	.LVL90
 3338 0287 1E000000 		.4byte	.LVL91
 3339 028b 0100     		.2byte	0x1
 3340 028d 54       		.byte	0x54
 3341 028e 00000000 		.4byte	0
 3342 0292 00000000 		.4byte	0
ARM GAS  C:\temp\ccSYH5Oo.s 			page 89


 3343              	.LLST18:
 3344 0296 00000000 		.4byte	.LVL93
 3345 029a 0E000000 		.4byte	.LVL94
 3346 029e 0100     		.2byte	0x1
 3347 02a0 50       		.byte	0x50
 3348 02a1 0E000000 		.4byte	.LVL94
 3349 02a5 24000000 		.4byte	.LFE21
 3350 02a9 0400     		.2byte	0x4
 3351 02ab F3       		.byte	0xf3
 3352 02ac 01       		.uleb128 0x1
 3353 02ad 50       		.byte	0x50
 3354 02ae 9F       		.byte	0x9f
 3355 02af 00000000 		.4byte	0
 3356 02b3 00000000 		.4byte	0
 3357              	.LLST19:
 3358 02b7 00000000 		.4byte	.LVL93
 3359 02bb 0E000000 		.4byte	.LVL94
 3360 02bf 0100     		.2byte	0x1
 3361 02c1 51       		.byte	0x51
 3362 02c2 0E000000 		.4byte	.LVL94
 3363 02c6 24000000 		.4byte	.LFE21
 3364 02ca 0400     		.2byte	0x4
 3365 02cc F3       		.byte	0xf3
 3366 02cd 01       		.uleb128 0x1
 3367 02ce 51       		.byte	0x51
 3368 02cf 9F       		.byte	0x9f
 3369 02d0 00000000 		.4byte	0
 3370 02d4 00000000 		.4byte	0
 3371              	.LLST20:
 3372 02d8 00000000 		.4byte	.LVL93
 3373 02dc 0E000000 		.4byte	.LVL94
 3374 02e0 0200     		.2byte	0x2
 3375 02e2 30       		.byte	0x30
 3376 02e3 9F       		.byte	0x9f
 3377 02e4 0E000000 		.4byte	.LVL94
 3378 02e8 18000000 		.4byte	.LVL95
 3379 02ec 0700     		.2byte	0x7
 3380 02ee 74       		.byte	0x74
 3381 02ef 00       		.sleb128 0
 3382 02f0 F3       		.byte	0xf3
 3383 02f1 01       		.uleb128 0x1
 3384 02f2 50       		.byte	0x50
 3385 02f3 1C       		.byte	0x1c
 3386 02f4 9F       		.byte	0x9f
 3387 02f5 18000000 		.4byte	.LVL95
 3388 02f9 1A000000 		.4byte	.LVL96
 3389 02fd 0900     		.2byte	0x9
 3390 02ff 74       		.byte	0x74
 3391 0300 00       		.sleb128 0
 3392 0301 F3       		.byte	0xf3
 3393 0302 01       		.uleb128 0x1
 3394 0303 50       		.byte	0x50
 3395 0304 1C       		.byte	0x1c
 3396 0305 23       		.byte	0x23
 3397 0306 01       		.uleb128 0x1
 3398 0307 9F       		.byte	0x9f
 3399 0308 00000000 		.4byte	0
ARM GAS  C:\temp\ccSYH5Oo.s 			page 90


 3400 030c 00000000 		.4byte	0
 3401              	.LLST21:
 3402 0310 00000000 		.4byte	.LVL97
 3403 0314 0D000000 		.4byte	.LVL98-1
 3404 0318 0100     		.2byte	0x1
 3405 031a 50       		.byte	0x50
 3406 031b 0D000000 		.4byte	.LVL98-1
 3407 031f 20000000 		.4byte	.LFE22
 3408 0323 0400     		.2byte	0x4
 3409 0325 F3       		.byte	0xf3
 3410 0326 01       		.uleb128 0x1
 3411 0327 50       		.byte	0x50
 3412 0328 9F       		.byte	0x9f
 3413 0329 00000000 		.4byte	0
 3414 032d 00000000 		.4byte	0
 3415              	.LLST22:
 3416 0331 22000000 		.4byte	.LVL102
 3417 0335 2A000000 		.4byte	.LVL104
 3418 0339 0100     		.2byte	0x1
 3419 033b 54       		.byte	0x54
 3420 033c 00000000 		.4byte	0
 3421 0340 00000000 		.4byte	0
 3422              	.LLST23:
 3423 0344 06000000 		.4byte	.LVL105
 3424 0348 19000000 		.4byte	.LVL106-1
 3425 034c 0100     		.2byte	0x1
 3426 034e 50       		.byte	0x50
 3427 034f 00000000 		.4byte	0
 3428 0353 00000000 		.4byte	0
 3429              	.LLST24:
 3430 0357 00000000 		.4byte	.LVL109
 3431 035b 34000000 		.4byte	.LVL112
 3432 035f 0100     		.2byte	0x1
 3433 0361 50       		.byte	0x50
 3434 0362 34000000 		.4byte	.LVL112
 3435 0366 40000000 		.4byte	.LVL113
 3436 036a 0400     		.2byte	0x4
 3437 036c F3       		.byte	0xf3
 3438 036d 01       		.uleb128 0x1
 3439 036e 50       		.byte	0x50
 3440 036f 9F       		.byte	0x9f
 3441 0370 40000000 		.4byte	.LVL113
 3442 0374 4E000000 		.4byte	.LVL116
 3443 0378 0100     		.2byte	0x1
 3444 037a 50       		.byte	0x50
 3445 037b 4E000000 		.4byte	.LVL116
 3446 037f 60000000 		.4byte	.LFE25
 3447 0383 0400     		.2byte	0x4
 3448 0385 F3       		.byte	0xf3
 3449 0386 01       		.uleb128 0x1
 3450 0387 50       		.byte	0x50
 3451 0388 9F       		.byte	0x9f
 3452 0389 00000000 		.4byte	0
 3453 038d 00000000 		.4byte	0
 3454              	.LLST25:
 3455 0391 24000000 		.4byte	.LVL110
 3456 0395 2C000000 		.4byte	.LVL111
ARM GAS  C:\temp\ccSYH5Oo.s 			page 91


 3457 0399 0100     		.2byte	0x1
 3458 039b 51       		.byte	0x51
 3459 039c 48000000 		.4byte	.LVL114
 3460 03a0 4C000000 		.4byte	.LVL115
 3461 03a4 0100     		.2byte	0x1
 3462 03a6 52       		.byte	0x52
 3463 03a7 00000000 		.4byte	0
 3464 03ab 00000000 		.4byte	0
 3465              		.section	.debug_aranges,"",%progbits
 3466 0000 EC000000 		.4byte	0xec
 3467 0004 0200     		.2byte	0x2
 3468 0006 00000000 		.4byte	.Ldebug_info0
 3469 000a 04       		.byte	0x4
 3470 000b 00       		.byte	0
 3471 000c 0000     		.2byte	0
 3472 000e 0000     		.2byte	0
 3473 0010 00000000 		.4byte	.LFB1
 3474 0014 68000000 		.4byte	.LFE1-.LFB1
 3475 0018 00000000 		.4byte	.LFB2
 3476 001c 50000000 		.4byte	.LFE2-.LFB2
 3477 0020 00000000 		.4byte	.LFB0
 3478 0024 1C000000 		.4byte	.LFE0-.LFB0
 3479 0028 00000000 		.4byte	.LFB3
 3480 002c 48000000 		.4byte	.LFE3-.LFB3
 3481 0030 00000000 		.4byte	.LFB4
 3482 0034 04000000 		.4byte	.LFE4-.LFB4
 3483 0038 00000000 		.4byte	.LFB5
 3484 003c 02000000 		.4byte	.LFE5-.LFB5
 3485 0040 00000000 		.4byte	.LFB6
 3486 0044 0C000000 		.4byte	.LFE6-.LFB6
 3487 0048 00000000 		.4byte	.LFB7
 3488 004c 60000000 		.4byte	.LFE7-.LFB7
 3489 0050 00000000 		.4byte	.LFB8
 3490 0054 24000000 		.4byte	.LFE8-.LFB8
 3491 0058 00000000 		.4byte	.LFB9
 3492 005c 78000000 		.4byte	.LFE9-.LFB9
 3493 0060 00000000 		.4byte	.LFB10
 3494 0064 24000000 		.4byte	.LFE10-.LFB10
 3495 0068 00000000 		.4byte	.LFB11
 3496 006c 44000000 		.4byte	.LFE11-.LFB11
 3497 0070 00000000 		.4byte	.LFB12
 3498 0074 3C000000 		.4byte	.LFE12-.LFB12
 3499 0078 00000000 		.4byte	.LFB13
 3500 007c 02000000 		.4byte	.LFE13-.LFB13
 3501 0080 00000000 		.4byte	.LFB14
 3502 0084 0C000000 		.4byte	.LFE14-.LFB14
 3503 0088 00000000 		.4byte	.LFB15
 3504 008c 0C000000 		.4byte	.LFE15-.LFB15
 3505 0090 00000000 		.4byte	.LFB16
 3506 0094 0C000000 		.4byte	.LFE16-.LFB16
 3507 0098 00000000 		.4byte	.LFB17
 3508 009c 54000000 		.4byte	.LFE17-.LFB17
 3509 00a0 00000000 		.4byte	.LFB18
 3510 00a4 0C000000 		.4byte	.LFE18-.LFB18
 3511 00a8 00000000 		.4byte	.LFB19
 3512 00ac 68000000 		.4byte	.LFE19-.LFB19
 3513 00b0 00000000 		.4byte	.LFB20
ARM GAS  C:\temp\ccSYH5Oo.s 			page 92


 3514 00b4 24000000 		.4byte	.LFE20-.LFB20
 3515 00b8 00000000 		.4byte	.LFB21
 3516 00bc 24000000 		.4byte	.LFE21-.LFB21
 3517 00c0 00000000 		.4byte	.LFB22
 3518 00c4 20000000 		.4byte	.LFE22-.LFB22
 3519 00c8 00000000 		.4byte	.LFB23
 3520 00cc 30000000 		.4byte	.LFE23-.LFB23
 3521 00d0 00000000 		.4byte	.LFB24
 3522 00d4 38000000 		.4byte	.LFE24-.LFB24
 3523 00d8 00000000 		.4byte	.LFB25
 3524 00dc 60000000 		.4byte	.LFE25-.LFB25
 3525 00e0 00000000 		.4byte	.LFB26
 3526 00e4 02000000 		.4byte	.LFE26-.LFB26
 3527 00e8 00000000 		.4byte	0
 3528 00ec 00000000 		.4byte	0
 3529              		.section	.debug_ranges,"",%progbits
 3530              	.Ldebug_ranges0:
 3531 0000 00000000 		.4byte	.LFB1
 3532 0004 68000000 		.4byte	.LFE1
 3533 0008 00000000 		.4byte	.LFB2
 3534 000c 50000000 		.4byte	.LFE2
 3535 0010 00000000 		.4byte	.LFB0
 3536 0014 1C000000 		.4byte	.LFE0
 3537 0018 00000000 		.4byte	.LFB3
 3538 001c 48000000 		.4byte	.LFE3
 3539 0020 00000000 		.4byte	.LFB4
 3540 0024 04000000 		.4byte	.LFE4
 3541 0028 00000000 		.4byte	.LFB5
 3542 002c 02000000 		.4byte	.LFE5
 3543 0030 00000000 		.4byte	.LFB6
 3544 0034 0C000000 		.4byte	.LFE6
 3545 0038 00000000 		.4byte	.LFB7
 3546 003c 60000000 		.4byte	.LFE7
 3547 0040 00000000 		.4byte	.LFB8
 3548 0044 24000000 		.4byte	.LFE8
 3549 0048 00000000 		.4byte	.LFB9
 3550 004c 78000000 		.4byte	.LFE9
 3551 0050 00000000 		.4byte	.LFB10
 3552 0054 24000000 		.4byte	.LFE10
 3553 0058 00000000 		.4byte	.LFB11
 3554 005c 44000000 		.4byte	.LFE11
 3555 0060 00000000 		.4byte	.LFB12
 3556 0064 3C000000 		.4byte	.LFE12
 3557 0068 00000000 		.4byte	.LFB13
 3558 006c 02000000 		.4byte	.LFE13
 3559 0070 00000000 		.4byte	.LFB14
 3560 0074 0C000000 		.4byte	.LFE14
 3561 0078 00000000 		.4byte	.LFB15
 3562 007c 0C000000 		.4byte	.LFE15
 3563 0080 00000000 		.4byte	.LFB16
 3564 0084 0C000000 		.4byte	.LFE16
 3565 0088 00000000 		.4byte	.LFB17
 3566 008c 54000000 		.4byte	.LFE17
 3567 0090 00000000 		.4byte	.LFB18
 3568 0094 0C000000 		.4byte	.LFE18
 3569 0098 00000000 		.4byte	.LFB19
 3570 009c 68000000 		.4byte	.LFE19
ARM GAS  C:\temp\ccSYH5Oo.s 			page 93


 3571 00a0 00000000 		.4byte	.LFB20
 3572 00a4 24000000 		.4byte	.LFE20
 3573 00a8 00000000 		.4byte	.LFB21
 3574 00ac 24000000 		.4byte	.LFE21
 3575 00b0 00000000 		.4byte	.LFB22
 3576 00b4 20000000 		.4byte	.LFE22
 3577 00b8 00000000 		.4byte	.LFB23
 3578 00bc 30000000 		.4byte	.LFE23
 3579 00c0 00000000 		.4byte	.LFB24
 3580 00c4 38000000 		.4byte	.LFE24
 3581 00c8 00000000 		.4byte	.LFB25
 3582 00cc 60000000 		.4byte	.LFE25
 3583 00d0 00000000 		.4byte	.LFB26
 3584 00d4 02000000 		.4byte	.LFE26
 3585 00d8 00000000 		.4byte	0
 3586 00dc 00000000 		.4byte	0
 3587              		.section	.debug_line,"",%progbits
 3588              	.Ldebug_line0:
 3589 0000 B1030000 		.section	.debug_str,"MS",%progbits,1
 3589      02006100 
 3589      00000201 
 3589      FB0E0D00 
 3589      01010101 
 3590              	.LASF10:
 3591 0000 75696E74 		.ascii	"uint16\000"
 3591      313600
 3592              	.LASF83:
 3593 0007 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3593      4320342E 
 3593      392E3320 
 3593      32303135 
 3593      30333033 
 3594 003a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3594      20726576 
 3594      6973696F 
 3594      6E203232 
 3594      31323230 
 3595 006d 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3595      66756E63 
 3595      74696F6E 
 3595      2D736563 
 3595      74696F6E 
 3596              	.LASF79:
 3597 0095 43794578 		.ascii	"CyExitCriticalSection\000"
 3597      69744372 
 3597      69746963 
 3597      616C5365 
 3597      6374696F 
 3598              	.LASF47:
 3599 00ab 74784461 		.ascii	"txDataByte\000"
 3599      74614279 
 3599      746500
 3600              	.LASF69:
 3601 00b6 55415254 		.ascii	"UART_txBufferWrite\000"
 3601      5F747842 
 3601      75666665 
 3601      72577269 
ARM GAS  C:\temp\ccSYH5Oo.s 			page 94


 3601      746500
 3602              	.LASF54:
 3603 00c9 73747269 		.ascii	"string\000"
 3603      6E6700
 3604              	.LASF7:
 3605 00d0 6C6F6E67 		.ascii	"long long unsigned int\000"
 3605      206C6F6E 
 3605      6720756E 
 3605      7369676E 
 3605      65642069 
 3606              	.LASF20:
 3607 00e7 55415254 		.ascii	"UART_Start\000"
 3607      5F537461 
 3607      727400
 3608              	.LASF45:
 3609 00f2 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3609      5F536574 
 3609      5478496E 
 3609      74657272 
 3609      7570744D 
 3610              	.LASF75:
 3611 010a 55415254 		.ascii	"UART_rxBufferOverflow\000"
 3611      5F727842 
 3611      75666665 
 3611      724F7665 
 3611      72666C6F 
 3612              	.LASF68:
 3613 0120 55415254 		.ascii	"UART_txBufferRead\000"
 3613      5F747842 
 3613      75666665 
 3613      72526561 
 3613      6400
 3614              	.LASF6:
 3615 0132 6C6F6E67 		.ascii	"long long int\000"
 3615      206C6F6E 
 3615      6720696E 
 3615      7400
 3616              	.LASF0:
 3617 0140 7369676E 		.ascii	"signed char\000"
 3617      65642063 
 3617      68617200 
 3618              	.LASF64:
 3619 014c 74785065 		.ascii	"txPeriod\000"
 3619      72696F64 
 3619      00
 3620              	.LASF4:
 3621 0155 6C6F6E67 		.ascii	"long int\000"
 3621      20696E74 
 3621      00
 3622              	.LASF82:
 3623 015e 4379496E 		.ascii	"CyIntDisable\000"
 3623      74446973 
 3623      61626C65 
 3623      00
 3624              	.LASF50:
 3625 016b 55415254 		.ascii	"UART_PutChar\000"
 3625      5F507574 
ARM GAS  C:\temp\ccSYH5Oo.s 			page 95


 3625      43686172 
 3625      00
 3626              	.LASF85:
 3627 0178 433A5C55 		.ascii	"C:\\Users\\BEAST\\Desktop\\GITHUB PSOC PLANTE\\PSoC"
 3627      73657273 
 3627      5C424541 
 3627      53545C44 
 3627      65736B74 
 3628 01a6 5C506C61 		.ascii	"\\Plant_control2_0.cydsn\000"
 3628      6E745F63 
 3628      6F6E7472 
 3628      6F6C325F 
 3628      302E6379 
 3629              	.LASF30:
 3630 01be 55415254 		.ascii	"UART_ReadRxData\000"
 3630      5F526561 
 3630      64527844 
 3630      61746100 
 3631              	.LASF9:
 3632 01ce 75696E74 		.ascii	"uint8\000"
 3632      3800
 3633              	.LASF48:
 3634 01d4 55415254 		.ascii	"UART_ReadControlRegister\000"
 3634      5F526561 
 3634      64436F6E 
 3634      74726F6C 
 3634      52656769 
 3635              	.LASF12:
 3636 01ed 646F7562 		.ascii	"double\000"
 3636      6C6500
 3637              	.LASF41:
 3638 01f4 61646472 		.ascii	"addressMode\000"
 3638      6573734D 
 3638      6F646500 
 3639              	.LASF73:
 3640 0200 55415254 		.ascii	"UART_rxBufferWrite\000"
 3640      5F727842 
 3640      75666665 
 3640      72577269 
 3640      746500
 3641              	.LASF86:
 3642 0213 4379496E 		.ascii	"CyIntSetVector\000"
 3642      74536574 
 3642      56656374 
 3642      6F7200
 3643              	.LASF25:
 3644 0222 636F6E74 		.ascii	"control\000"
 3644      726F6C00 
 3645              	.LASF52:
 3646 022a 6C6F6354 		.ascii	"locTxBufferRead\000"
 3646      78427566 
 3646      66657252 
 3646      65616400 
 3647              	.LASF18:
 3648 023a 55415254 		.ascii	"UART_Init\000"
 3648      5F496E69 
 3648      7400
ARM GAS  C:\temp\ccSYH5Oo.s 			page 96


 3649              	.LASF67:
 3650 0244 55415254 		.ascii	"UART_txBuffer\000"
 3650      5F747842 
 3650      75666665 
 3650      7200
 3651              	.LASF62:
 3652 0252 7265744D 		.ascii	"retMode\000"
 3652      6F646500 
 3653              	.LASF35:
 3654 025a 55415254 		.ascii	"UART_GetByte\000"
 3654      5F476574 
 3654      42797465 
 3654      00
 3655              	.LASF8:
 3656 0267 756E7369 		.ascii	"unsigned int\000"
 3656      676E6564 
 3656      20696E74 
 3656      00
 3657              	.LASF60:
 3658 0274 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3658      5F436C65 
 3658      61725478 
 3658      42756666 
 3658      657200
 3659              	.LASF58:
 3660 0287 55415254 		.ascii	"UART_PutCRLF\000"
 3660      5F507574 
 3660      43524C46 
 3660      00
 3661              	.LASF36:
 3662 0294 6C6F6345 		.ascii	"locErrorStatus\000"
 3662      72726F72 
 3662      53746174 
 3662      757300
 3663              	.LASF5:
 3664 02a3 6C6F6E67 		.ascii	"long unsigned int\000"
 3664      20756E73 
 3664      69676E65 
 3664      6420696E 
 3664      7400
 3665              	.LASF51:
 3666 02b5 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3666      78427566 
 3666      66657257 
 3666      72697465 
 3666      00
 3667              	.LASF56:
 3668 02c6 55415254 		.ascii	"UART_PutArray\000"
 3668      5F507574 
 3668      41727261 
 3668      7900
 3669              	.LASF87:
 3670 02d4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3670      74657243 
 3670      72697469 
 3670      63616C53 
 3670      65637469 
ARM GAS  C:\temp\ccSYH5Oo.s 			page 97


 3671              	.LASF88:
 3672 02eb 4379496E 		.ascii	"CyIntSetPending\000"
 3672      74536574 
 3672      50656E64 
 3672      696E6700 
 3673              	.LASF74:
 3674 02fb 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 3674      5F727842 
 3674      75666665 
 3674      724C6F6F 
 3674      70446574 
 3675              	.LASF38:
 3676 0313 73697A65 		.ascii	"size\000"
 3676      00
 3677              	.LASF3:
 3678 0318 73686F72 		.ascii	"short unsigned int\000"
 3678      7420756E 
 3678      7369676E 
 3678      65642069 
 3678      6E7400
 3679              	.LASF72:
 3680 032b 55415254 		.ascii	"UART_rxBufferRead\000"
 3680      5F727842 
 3680      75666665 
 3680      72526561 
 3680      6400
 3681              	.LASF55:
 3682 033d 62756649 		.ascii	"bufIndex\000"
 3682      6E646578 
 3682      00
 3683              	.LASF26:
 3684 0346 696E7453 		.ascii	"intSrc\000"
 3684      726300
 3685              	.LASF65:
 3686 034d 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3686      5F536574 
 3686      54784164 
 3686      64726573 
 3686      734D6F64 
 3687              	.LASF84:
 3688 0363 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART.c\000"
 3688      6E657261 
 3688      7465645F 
 3688      536F7572 
 3688      63655C50 
 3689              	.LASF49:
 3690 0383 55415254 		.ascii	"UART_ReadTxStatus\000"
 3690      5F526561 
 3690      64547853 
 3690      74617475 
 3690      7300
 3691              	.LASF80:
 3692 0395 55415254 		.ascii	"UART_IntClock_Start\000"
 3692      5F496E74 
 3692      436C6F63 
 3692      6B5F5374 
 3692      61727400 
ARM GAS  C:\temp\ccSYH5Oo.s 			page 98


 3693              	.LASF63:
 3694 03a9 746D7053 		.ascii	"tmpStat\000"
 3694      74617400 
 3695              	.LASF17:
 3696 03b1 73697A65 		.ascii	"sizetype\000"
 3696      74797065 
 3696      00
 3697              	.LASF78:
 3698 03ba 4379496E 		.ascii	"CyIntClearPending\000"
 3698      74436C65 
 3698      61725065 
 3698      6E64696E 
 3698      6700
 3699              	.LASF43:
 3700 03cc 61646472 		.ascii	"address\000"
 3700      65737300 
 3701              	.LASF42:
 3702 03d4 55415254 		.ascii	"UART_SetRxAddress1\000"
 3702      5F536574 
 3702      52784164 
 3702      64726573 
 3702      733100
 3703              	.LASF44:
 3704 03e7 55415254 		.ascii	"UART_SetRxAddress2\000"
 3704      5F536574 
 3704      52784164 
 3704      64726573 
 3704      733200
 3705              	.LASF29:
 3706 03fa 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3706      78427566 
 3706      66657257 
 3706      72697465 
 3706      00
 3707              	.LASF34:
 3708 040b 72785374 		.ascii	"rxStatus\000"
 3708      61747573 
 3708      00
 3709              	.LASF81:
 3710 0414 55415254 		.ascii	"UART_IntClock_Stop\000"
 3710      5F496E74 
 3710      436C6F63 
 3710      6B5F5374 
 3710      6F7000
 3711              	.LASF76:
 3712 0427 4379496E 		.ascii	"CyIntSetPriority\000"
 3712      74536574 
 3712      5072696F 
 3712      72697479 
 3712      00
 3713              	.LASF70:
 3714 0438 55415254 		.ascii	"UART_errorStatus\000"
 3714      5F657272 
 3714      6F725374 
 3714      61747573 
 3714      00
 3715              	.LASF11:
ARM GAS  C:\temp\ccSYH5Oo.s 			page 99


 3716 0449 666C6F61 		.ascii	"float\000"
 3716      7400
 3717              	.LASF59:
 3718 044f 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3718      5F476574 
 3718      54784275 
 3718      66666572 
 3718      53697A65 
 3719              	.LASF15:
 3720 0464 72656738 		.ascii	"reg8\000"
 3720      00
 3721              	.LASF40:
 3722 0469 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3722      5F536574 
 3722      52784164 
 3722      64726573 
 3722      734D6F64 
 3723              	.LASF1:
 3724 047f 756E7369 		.ascii	"unsigned char\000"
 3724      676E6564 
 3724      20636861 
 3724      7200
 3725              	.LASF46:
 3726 048d 55415254 		.ascii	"UART_WriteTxData\000"
 3726      5F577269 
 3726      74655478 
 3726      44617461 
 3726      00
 3727              	.LASF2:
 3728 049e 73686F72 		.ascii	"short int\000"
 3728      7420696E 
 3728      7400
 3729              	.LASF77:
 3730 04a8 4379496E 		.ascii	"CyIntEnable\000"
 3730      74456E61 
 3730      626C6500 
 3731              	.LASF61:
 3732 04b4 55415254 		.ascii	"UART_SendBreak\000"
 3732      5F53656E 
 3732      64427265 
 3732      616B00
 3733              	.LASF57:
 3734 04c3 62797465 		.ascii	"byteCount\000"
 3734      436F756E 
 3734      7400
 3735              	.LASF27:
 3736 04cd 72784461 		.ascii	"rxData\000"
 3736      746100
 3737              	.LASF19:
 3738 04d4 55415254 		.ascii	"UART_Enable\000"
 3738      5F456E61 
 3738      626C6500 
 3739              	.LASF31:
 3740 04e0 55415254 		.ascii	"UART_ReadRxStatus\000"
 3740      5F526561 
 3740      64527853 
 3740      74617475 
ARM GAS  C:\temp\ccSYH5Oo.s 			page 100


 3740      7300
 3741              	.LASF14:
 3742 04f2 63686172 		.ascii	"char\000"
 3742      00
 3743              	.LASF16:
 3744 04f7 63796973 		.ascii	"cyisraddress\000"
 3744      72616464 
 3744      72657373 
 3744      00
 3745              	.LASF13:
 3746 0504 63686172 		.ascii	"char8\000"
 3746      3800
 3747              	.LASF24:
 3748 050a 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3748      5F536574 
 3748      5278496E 
 3748      74657272 
 3748      7570744D 
 3749              	.LASF33:
 3750 0522 55415254 		.ascii	"UART_GetChar\000"
 3750      5F476574 
 3750      43686172 
 3750      00
 3751              	.LASF28:
 3752 052f 6C6F6352 		.ascii	"locRxBufferRead\000"
 3752      78427566 
 3752      66657252 
 3752      65616400 
 3753              	.LASF22:
 3754 053f 656E6162 		.ascii	"enableInterrupts\000"
 3754      6C65496E 
 3754      74657272 
 3754      75707473 
 3754      00
 3755              	.LASF66:
 3756 0550 55415254 		.ascii	"UART_initVar\000"
 3756      5F696E69 
 3756      74566172 
 3756      00
 3757              	.LASF37:
 3758 055d 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3758      5F476574 
 3758      52784275 
 3758      66666572 
 3758      53697A65 
 3759              	.LASF32:
 3760 0572 73746174 		.ascii	"status\000"
 3760      757300
 3761              	.LASF21:
 3762 0579 55415254 		.ascii	"UART_Stop\000"
 3762      5F53746F 
 3762      7000
 3763              	.LASF71:
 3764 0583 55415254 		.ascii	"UART_rxBuffer\000"
 3764      5F727842 
 3764      75666665 
 3764      7200
ARM GAS  C:\temp\ccSYH5Oo.s 			page 101


 3765              	.LASF53:
 3766 0591 55415254 		.ascii	"UART_PutString\000"
 3766      5F507574 
 3766      53747269 
 3766      6E6700
 3767              	.LASF23:
 3768 05a0 55415254 		.ascii	"UART_WriteControlRegister\000"
 3768      5F577269 
 3768      7465436F 
 3768      6E74726F 
 3768      6C526567 
 3769              	.LASF39:
 3770 05ba 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3770      5F436C65 
 3770      61725278 
 3770      42756666 
 3770      657200
 3771              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
