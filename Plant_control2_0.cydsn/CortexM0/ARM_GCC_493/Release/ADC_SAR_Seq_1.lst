ARM GAS  C:\temp\ccUyuQab.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_idiv
  18              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  19              		.align	1
  20              		.global	ADC_SAR_Seq_1_Init
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_SAR_Seq_1_Init, %function
  24              	ADC_SAR_Seq_1_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
ARM GAS  C:\temp\ccUyuQab.s 			page 2


  32:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u, 0x00000000u, 0x00000000u
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****  0x00000000u };
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\temp\ccUyuQab.s 			page 3


  89:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  90:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  27              		.loc 1 96 0
  28              		.cfi_startproc
  29 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  30              		.cfi_def_cfa_offset 24
  31              		.cfi_offset 3, -24
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
ARM GAS  C:\temp\ccUyuQab.s 			page 4


 136:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 141:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  37              		.loc 1 173 0
  38 0002 0E20     		mov	r0, #14
  39 0004 0321     		mov	r1, #3
  40 0006 FFF7FEFF 		bl	CyIntSetPriority
  41              	.LVL0:
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  42              		.loc 1 174 0
  43 000a 0E20     		mov	r0, #14
  44 000c 3549     		ldr	r1, .L19
  45 000e FFF7FEFF 		bl	CyIntSetVector
  46              	.LVL1:
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  47              		.loc 1 178 0
  48 0012 1F22     		mov	r2, #31
  49 0014 344B     		ldr	r3, .L19+4
  50 0016 1A60     		str	r2, [r3]
ARM GAS  C:\temp\ccUyuQab.s 			page 5


 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  51              		.loc 1 181 0
  52 0018 344B     		ldr	r3, .L19+8
  53 001a 1B68     		ldr	r3, [r3]
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  54              		.loc 1 179 0
  55 001c 002B     		cmp	r3, #0
  56 001e 01DB     		blt	.L9
  57 0020 3349     		ldr	r1, .L19+12
  58 0022 00E0     		b	.L2
  59              	.L9:
  60 0024 3349     		ldr	r1, .L19+16
  61              	.L2:
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  62              		.loc 1 185 0 discriminator 4
  63 0026 0024     		mov	r4, #0
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  64              		.loc 1 179 0 discriminator 4
  65 0028 334A     		ldr	r2, .L19+20
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  66              		.loc 1 198 0 discriminator 4
  67 002a 344E     		ldr	r6, .L19+24
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
  68              		.loc 1 179 0 discriminator 4
  69 002c 1368     		ldr	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  70              		.loc 1 199 0 discriminator 4
  71 002e 344F     		ldr	r7, .L19+28
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
  72              		.loc 1 179 0 discriminator 4
  73 0030 0B43     		orr	r3, r1
  74 0032 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  75              		.loc 1 183 0 discriminator 4
  76 0034 334A     		ldr	r2, .L19+32
  77 0036 344B     		ldr	r3, .L19+36
  78 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  79              		.loc 1 184 0 discriminator 4
  80 003a 344A     		ldr	r2, .L19+40
ARM GAS  C:\temp\ccUyuQab.s 			page 6


  81 003c 344B     		ldr	r3, .L19+44
  82 003e 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  83              		.loc 1 185 0 discriminator 4
  84 0040 344B     		ldr	r3, .L19+48
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  85              		.loc 1 186 0 discriminator 4
  86 0042 354A     		ldr	r2, .L19+52
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  87              		.loc 1 185 0 discriminator 4
  88 0044 1C60     		str	r4, [r3]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  89              		.loc 1 186 0 discriminator 4
  90 0046 354B     		ldr	r3, .L19+56
  91 0048 1360     		str	r3, [r2]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
  92              		.loc 1 187 0 discriminator 4
  93 004a 354A     		ldr	r2, .L19+60
  94 004c 1360     		str	r3, [r2]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  95              		.loc 1 200 0 discriminator 4
  96 004e 0122     		mov	r2, #1
  97 0050 344B     		ldr	r3, .L19+64
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  98              		.loc 1 198 0 discriminator 4
  99 0052 3460     		str	r4, [r6]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 100              		.loc 1 199 0 discriminator 4
 101 0054 3C60     		str	r4, [r7]
 102              		.loc 1 200 0 discriminator 4
 103 0056 1A60     		str	r2, [r3]
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 104              		.loc 1 203 0 discriminator 4
 105 0058 334B     		ldr	r3, .L19+68
 106 005a 9218     		add	r2, r2, r2
 107 005c 1A60     		str	r2, [r3]
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 108              		.loc 1 207 0 discriminator 4
 109 005e 334A     		ldr	r2, .L19+72
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 110              		.loc 1 208 0 discriminator 4
 111 0060 334B     		ldr	r3, .L19+76
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 112              		.loc 1 207 0 discriminator 4
 113 0062 1168     		ldr	r1, [r2]
 114              	.LVL2:
 115              		.loc 1 208 0 discriminator 4
 116 0064 0B40     		and	r3, r1
 117              	.LVL3:
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
ARM GAS  C:\temp\ccUyuQab.s 			page 7


 212:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 118              		.loc 1 212 0 discriminator 4
 119 0066 C021     		mov	r1, #192
 120 0068 8904     		lsl	r1, r1, #18
 121 006a 0B43     		orr	r3, r1
 122              	.LVL4:
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 123              		.loc 1 227 0 discriminator 4
 124 006c 1360     		str	r3, [r2]
 125              	.LVL5:
 126              	.L8:
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 127              		.loc 1 235 0
 128 006e 314B     		ldr	r3, .L19+80
 129 0070 DC22     		mov	r2, #220
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 130              		.loc 1 237 0
 131 0072 181C     		mov	r0, r3
 132 0074 A500     		lsl	r5, r4, #2
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 133              		.loc 1 235 0
 134 0076 E958     		ldr	r1, [r5, r3]
 135              		.loc 1 237 0
 136 0078 1430     		add	r0, r0, #20
 137 007a 205C     		ldrb	r0, [r4, r0]
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 138              		.loc 1 235 0
 139 007c 9201     		lsl	r2, r2, #6
 140 007e 0A40     		and	r2, r1
 141              	.LVL6:
 142              		.loc 1 237 0
 143 0080 0243     		orr	r2, r0
 144              	.LVL7:
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
ARM GAS  C:\temp\ccUyuQab.s 			page 8


 240:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 145              		.loc 1 254 0
 146 0082 2D48     		ldr	r0, .L19+84
 147 0084 2818     		add	r0, r5, r0
 148 0086 0260     		str	r2, [r0]
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 149              		.loc 1 256 0
 150 0088 0122     		mov	r2, #1
 151              	.LVL8:
 152 008a 1142     		tst	r1, r2
 153 008c 03D0     		beq	.L3
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 154              		.loc 1 258 0
 155 008e A240     		lsl	r2, r2, r4
 156 0090 3168     		ldr	r1, [r6]
 157 0092 0A43     		orr	r2, r1
 158 0094 3260     		str	r2, [r6]
 159              	.LVL9:
 160              	.L3:
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 161              		.loc 1 261 0
 162 0096 5A59     		ldr	r2, [r3, r5]
 163 0098 9207     		lsl	r2, r2, #30
 164 009a 04D5     		bpl	.L4
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 165              		.loc 1 263 0
 166 009c 0122     		mov	r2, #1
 167 009e A240     		lsl	r2, r2, r4
 168 00a0 3968     		ldr	r1, [r7]
 169 00a2 0A43     		orr	r2, r1
 170 00a4 3A60     		str	r2, [r7]
 171              	.L4:
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
ARM GAS  C:\temp\ccUyuQab.s 			page 9


 270:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 172              		.loc 1 283 0
 173 00a6 5B59     		ldr	r3, [r3, r5]
 174              	.LVL10:
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 175              		.loc 1 285 0
 176 00a8 8020     		mov	r0, #128
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 177              		.loc 1 283 0
 178 00aa 9A05     		lsl	r2, r3, #22
 179 00ac 01D4     		bmi	.L10
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 180              		.loc 1 289 0
 181 00ae 4001     		lsl	r0, r0, #5
 182 00b0 00E0     		b	.L5
 183              	.L10:
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 184              		.loc 1 285 0
 185 00b2 C000     		lsl	r0, r0, #3
 186              	.L5:
 187              	.LVL11:
 188 00b4 2149     		ldr	r1, .L19+88
 189 00b6 6200     		lsl	r2, r4, #1
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 190              		.loc 1 292 0
 191 00b8 DB05     		lsl	r3, r3, #23
 192 00ba 03D4     		bmi	.L6
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 193              		.loc 1 297 0
 194 00bc 4308     		lsr	r3, r0, #1
 195 00be 5B42     		neg	r3, r3
 196 00c0 9BB2     		uxth	r3, r3
 197 00c2 00E0     		b	.L17
 198              	.L6:
ARM GAS  C:\temp\ccUyuQab.s 			page 10


 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 199              		.loc 1 308 0
 200 00c4 0023     		mov	r3, #0
 201              	.L17:
 202 00c6 8B52     		strh	r3, [r1, r2]
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 203              		.loc 1 312 0
 204 00c8 1D4B     		ldr	r3, .L19+92
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 205              		.loc 1 313 0
 206 00ca 1E49     		ldr	r1, .L19+96
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 207              		.loc 1 312 0
 208 00cc 5843     		mul	r0, r3
 209              	.LVL12:
 210 00ce 1E4B     		ldr	r3, .L19+100
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 211              		.loc 1 233 0
 212 00d0 0134     		add	r4, r4, #1
 213              	.LVL13:
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 214              		.loc 1 312 0
 215 00d2 C018     		add	r0, r0, r3
 216              		.loc 1 313 0
 217 00d4 FFF7FEFF 		bl	__aeabi_idiv
 218              	.LVL14:
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 219              		.loc 1 312 0
 220 00d8 1C4B     		ldr	r3, .L19+104
 221 00da 5851     		str	r0, [r3, r5]
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 222              		.loc 1 233 0
 223 00dc 052C     		cmp	r4, #5
 224 00de C6D1     		bne	.L8
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 225              		.loc 1 315 0
 226              		@ sp needed
 227              	.LVL15:
 228 00e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 229              	.L20:
 230 00e2 C046     		.align	2
 231              	.L19:
 232 00e4 00000000 		.word	ADC_SAR_Seq_1_ISR
ARM GAS  C:\temp\ccUyuQab.s 			page 11


 233 00e8 20001A40 		.word	1075445792
 234 00ec 80031A40 		.word	1075446656
 235 00f0 E02E0010 		.word	268447456
 236 00f4 E02E1010 		.word	269496032
 237 00f8 00001A40 		.word	1075445760
 238 00fc 28021A40 		.word	1075446312
 239 0100 38021A40 		.word	1075446328
 240 0104 8D000080 		.word	-2147483507
 241 0108 04001A40 		.word	1075445764
 242 010c 0000FF07 		.word	134152192
 243 0110 18001A40 		.word	1075445784
 244 0114 1C001A40 		.word	1075445788
 245 0118 10001A40 		.word	1075445776
 246 011c 02000200 		.word	131074
 247 0120 14001A40 		.word	1075445780
 248 0124 18021A40 		.word	1075446296
 249 0128 000F1A40 		.word	1075449600
 250 012c 30001A40 		.word	1075445808
 251 0130 FFFFFFDF 		.word	-536870913
 252 0134 00000000 		.word	.LANCHOR0
 253 0138 80001A40 		.word	1075445888
 254 013c 00000000 		.word	ADC_SAR_Seq_1_offset
 255 0140 10270000 		.word	10000
 256 0144 E40C0000 		.word	3300
 257 0148 72060000 		.word	1650
 258 014c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 259              		.cfi_endproc
 260              	.LFE1:
 261              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 262              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 263              		.align	1
 264              		.global	ADC_SAR_Seq_1_Enable
 265              		.code	16
 266              		.thumb_func
 267              		.type	ADC_SAR_Seq_1_Enable, %function
 268              	ADC_SAR_Seq_1_Enable:
 269              	.LFB2:
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 270              		.loc 1 332 0
 271              		.cfi_startproc
 272 0000 08B5     		push	{r3, lr}
ARM GAS  C:\temp\ccUyuQab.s 			page 12


 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 276              		.loc 1 333 0
 277 0002 064B     		ldr	r3, .L23
 278 0004 1A68     		ldr	r2, [r3]
 279 0006 002A     		cmp	r2, #0
 280 0008 07DB     		blt	.L21
 281              	.LBB4:
 282              	.LBB5:
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 283              		.loc 1 343 0
 284 000a 8021     		mov	r1, #128
 285 000c 1A68     		ldr	r2, [r3]
 286 000e 0906     		lsl	r1, r1, #24
 287 0010 0A43     		orr	r2, r1
 288 0012 1A60     		str	r2, [r3]
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 289              		.loc 1 346 0
 290 0014 0A20     		mov	r0, #10
 291 0016 FFF7FEFF 		bl	CyDelayUs
 292              	.LVL16:
 293              	.L21:
 294              	.LBE5:
 295              	.LBE4:
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 296              		.loc 1 348 0
 297              		@ sp needed
 298 001a 08BD     		pop	{r3, pc}
 299              	.L24:
 300              		.align	2
 301              	.L23:
 302 001c 00001A40 		.word	1075445760
 303              		.cfi_endproc
 304              	.LFE2:
 305              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 306              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 307              		.align	1
 308              		.global	ADC_SAR_Seq_1_Start
 309              		.code	16
 310              		.thumb_func
 311              		.type	ADC_SAR_Seq_1_Start, %function
 312              	ADC_SAR_Seq_1_Start:
 313              	.LFB0:
ARM GAS  C:\temp\ccUyuQab.s 			page 13


  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 314              		.loc 1 65 0
 315              		.cfi_startproc
 316 0000 10B5     		push	{r4, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 320              		.loc 1 67 0
 321 0002 054C     		ldr	r4, .L27
 322 0004 2378     		ldrb	r3, [r4]
 323 0006 002B     		cmp	r3, #0
 324 0008 03D1     		bne	.L26
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 325              		.loc 1 69 0
 326 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 327              	.LVL17:
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 328              		.loc 1 70 0
 329 000e 0123     		mov	r3, #1
 330 0010 2370     		strb	r3, [r4]
 331              	.L26:
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 332              		.loc 1 72 0
 333 0012 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 334              	.LVL18:
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 335              		.loc 1 73 0
 336              		@ sp needed
 337 0016 10BD     		pop	{r4, pc}
 338              	.L28:
 339              		.align	2
 340              	.L27:
 341 0018 00000000 		.word	.LANCHOR1
 342              		.cfi_endproc
 343              	.LFE0:
 344              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 345              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 346              		.align	1
 347              		.global	ADC_SAR_Seq_1_Stop
 348              		.code	16
 349              		.thumb_func
 350              		.type	ADC_SAR_Seq_1_Stop, %function
 351              	ADC_SAR_Seq_1_Stop:
 352              	.LFB3:
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\temp\ccUyuQab.s 			page 14


 361:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 353              		.loc 1 367 0
 354              		.cfi_startproc
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 355              		.loc 1 368 0
 356 0000 024A     		ldr	r2, .L30
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 357              		.loc 1 369 0
 358              		@ sp needed
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 359              		.loc 1 368 0
 360 0002 1368     		ldr	r3, [r2]
 361 0004 5B00     		lsl	r3, r3, #1
 362 0006 5B08     		lsr	r3, r3, #1
 363 0008 1360     		str	r3, [r2]
 364              		.loc 1 369 0
 365 000a 7047     		bx	lr
 366              	.L31:
 367              		.align	2
 368              	.L30:
 369 000c 00001A40 		.word	1075445760
 370              		.cfi_endproc
 371              	.LFE3:
 372              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 373              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 374              		.align	1
 375              		.global	ADC_SAR_Seq_1_StartConvert
 376              		.code	16
 377              		.thumb_func
 378              		.type	ADC_SAR_Seq_1_StartConvert, %function
 379              	ADC_SAR_Seq_1_StartConvert:
 380              	.LFB4:
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\temp\ccUyuQab.s 			page 15


 389:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 381              		.loc 1 393 0
 382              		.cfi_startproc
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 383              		.loc 1 395 0
 384 0000 8021     		mov	r1, #128
 385 0002 034A     		ldr	r2, .L33
 386 0004 4902     		lsl	r1, r1, #9
 387 0006 1368     		ldr	r3, [r2]
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 388              		.loc 1 400 0
 389              		@ sp needed
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 390              		.loc 1 395 0
 391 0008 0B43     		orr	r3, r1
 392 000a 1360     		str	r3, [r2]
 393              		.loc 1 400 0
 394 000c 7047     		bx	lr
 395              	.L34:
 396 000e C046     		.align	2
 397              	.L33:
 398 0010 04001A40 		.word	1075445764
 399              		.cfi_endproc
 400              	.LFE4:
 401              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 402              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 403              		.align	1
 404              		.global	ADC_SAR_Seq_1_StopConvert
 405              		.code	16
 406              		.thumb_func
 407              		.type	ADC_SAR_Seq_1_StopConvert, %function
 408              	ADC_SAR_Seq_1_StopConvert:
 409              	.LFB5:
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\temp\ccUyuQab.s 			page 16


 416:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 410              		.loc 1 418 0
 411              		.cfi_startproc
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 412              		.loc 1 420 0
 413 0000 024A     		ldr	r2, .L36
 414 0002 034B     		ldr	r3, .L36+4
 415 0004 1168     		ldr	r1, [r2]
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 416              		.loc 1 422 0
 417              		@ sp needed
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 418              		.loc 1 420 0
 419 0006 0B40     		and	r3, r1
 420 0008 1360     		str	r3, [r2]
 421              		.loc 1 422 0
 422 000a 7047     		bx	lr
 423              	.L37:
 424              		.align	2
 425              	.L36:
 426 000c 04001A40 		.word	1075445764
 427 0010 FFFFFEFF 		.word	-65537
 428              		.cfi_endproc
 429              	.LFE5:
 430              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 431              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 432              		.align	1
 433              		.global	ADC_SAR_Seq_1_IsEndConversion
 434              		.code	16
 435              		.thumb_func
 436              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 437              	ADC_SAR_Seq_1_IsEndConversion:
 438              	.LFB6:
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
ARM GAS  C:\temp\ccUyuQab.s 			page 17


 443:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 439              		.loc 1 452 0
 440              		.cfi_startproc
 441              	.LVL19:
 442 0000 10B5     		push	{r4, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 4, -8
 445              		.cfi_offset 14, -4
 446              		.loc 1 452 0
 447 0002 041C     		mov	r4, r0
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 448              		.loc 1 453 0
 449 0004 0020     		mov	r0, #0
 450              	.LVL20:
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 451              		.loc 1 455 0
 452 0006 A307     		lsl	r3, r4, #30
 453 0008 0AD0     		beq	.L43
 454              	.LVL21:
 455              	.L41:
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 456              		.loc 1 459 0 discriminator 2
 457 000a 0122     		mov	r2, #1
 458 000c 0549     		ldr	r1, .L45
 459 000e 0B68     		ldr	r3, [r1]
 460 0010 1340     		and	r3, r2
 461 0012 181E     		sub	r0, r3, #0
 462              	.LVL22:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 463              		.loc 1 460 0 discriminator 2
 464 0014 02D1     		bne	.L40
 465              		.loc 1 460 0 is_stmt 0 discriminator 1
 466 0016 A307     		lsl	r3, r4, #30
 467 0018 F7D4     		bmi	.L41
 468 001a 01E0     		b	.L43
 469              	.L40:
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 470              		.loc 1 465 0 is_stmt 1
 471 001c 101C     		mov	r0, r2
 472              	.LVL23:
ARM GAS  C:\temp\ccUyuQab.s 			page 18


 473 001e 0A60     		str	r2, [r1]
 474              	.LVL24:
 475              	.L43:
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 476              		.loc 1 487 0
 477              		@ sp needed
 478              	.LVL25:
 479 0020 10BD     		pop	{r4, pc}
 480              	.L46:
 481 0022 C046     		.align	2
 482              	.L45:
 483 0024 10021A40 		.word	1075446288
 484              		.cfi_endproc
 485              	.LFE6:
 486              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 487              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 488              		.align	1
 489              		.global	ADC_SAR_Seq_1_GetResult16
 490              		.code	16
 491              		.thumb_func
 492              		.type	ADC_SAR_Seq_1_GetResult16, %function
 493              	ADC_SAR_Seq_1_GetResult16:
 494              	.LFB7:
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\temp\ccUyuQab.s 			page 19


 501:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 495              		.loc 1 506 0
 496              		.cfi_startproc
 497              	.LVL26:
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 498              		.loc 1 522 0
 499 0000 0023     		mov	r3, #0
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 500              		.loc 1 512 0
 501 0002 0428     		cmp	r0, #4
 502 0004 04D8     		bhi	.L48
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 503              		.loc 1 514 0
 504 0006 034B     		ldr	r3, .L50
 505 0008 8000     		lsl	r0, r0, #2
 506              	.LVL27:
 507 000a C018     		add	r0, r0, r3
 508 000c 0368     		ldr	r3, [r0]
 509 000e 9BB2     		uxth	r3, r3
 510              	.LVL28:
 511              	.L48:
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 512              		.loc 1 526 0
 513 0010 18B2     		sxth	r0, r3
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 514              		.loc 1 527 0
 515              		@ sp needed
 516 0012 7047     		bx	lr
 517              	.L51:
 518              		.align	2
 519              	.L50:
 520 0014 80011A40 		.word	1075446144
 521              		.cfi_endproc
 522              	.LFE7:
ARM GAS  C:\temp\ccUyuQab.s 			page 20


 523              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 524              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 525              		.align	1
 526              		.global	ADC_SAR_Seq_1_SetChanMask
 527              		.code	16
 528              		.thumb_func
 529              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 530              	ADC_SAR_Seq_1_SetChanMask:
 531              	.LFB8:
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 532              		.loc 1 551 0
 533              		.cfi_startproc
 534              	.LVL29:
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 535              		.loc 1 552 0
 536 0000 1F23     		mov	r3, #31
 537 0002 1840     		and	r0, r3
 538              	.LVL30:
 539 0004 014B     		ldr	r3, .L53
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 540              		.loc 1 553 0
 541              		@ sp needed
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 542              		.loc 1 552 0
 543 0006 1860     		str	r0, [r3]
 544              		.loc 1 553 0
 545 0008 7047     		bx	lr
 546              	.L54:
 547 000a C046     		.align	2
 548              	.L53:
 549 000c 20001A40 		.word	1075445792
 550              		.cfi_endproc
 551              	.LFE8:
 552              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
ARM GAS  C:\temp\ccUyuQab.s 			page 21


 553              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 554              		.align	1
 555              		.global	ADC_SAR_Seq_1_SetLowLimit
 556              		.code	16
 557              		.thumb_func
 558              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 559              	ADC_SAR_Seq_1_SetLowLimit:
 560              	.LFB9:
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 561              		.loc 1 595 0
 562              		.cfi_startproc
 563              	.LVL31:
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 564              		.loc 1 596 0
 565 0000 044A     		ldr	r2, .L56
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
ARM GAS  C:\temp\ccUyuQab.s 			page 22


 566              		.loc 1 597 0
 567 0002 80B2     		uxth	r0, r0
 568              	.LVL32:
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 569              		.loc 1 596 0
 570 0004 1368     		ldr	r3, [r2]
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 571              		.loc 1 598 0
 572              		@ sp needed
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 573              		.loc 1 596 0
 574 0006 1B0C     		lsr	r3, r3, #16
 575 0008 1B04     		lsl	r3, r3, #16
 576 000a 1360     		str	r3, [r2]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 577              		.loc 1 597 0
 578 000c 1368     		ldr	r3, [r2]
 579 000e 1843     		orr	r0, r3
 580 0010 1060     		str	r0, [r2]
 581              		.loc 1 598 0
 582 0012 7047     		bx	lr
 583              	.L57:
 584              		.align	2
 585              	.L56:
 586 0014 18001A40 		.word	1075445784
 587              		.cfi_endproc
 588              	.LFE9:
 589              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 590              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 591              		.align	1
 592              		.global	ADC_SAR_Seq_1_SetHighLimit
 593              		.code	16
 594              		.thumb_func
 595              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 596              	ADC_SAR_Seq_1_SetHighLimit:
 597              	.LFB10:
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 607:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 598              		.loc 1 616 0
 599              		.cfi_startproc
 600              	.LVL33:
ARM GAS  C:\temp\ccUyuQab.s 			page 23


 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 601              		.loc 1 617 0
 602 0000 044B     		ldr	r3, .L59
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 603              		.loc 1 618 0
 604 0002 0004     		lsl	r0, r0, #16
 605              	.LVL34:
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 606              		.loc 1 617 0
 607 0004 1A68     		ldr	r2, [r3]
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 608              		.loc 1 619 0
 609              		@ sp needed
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 610              		.loc 1 617 0
 611 0006 92B2     		uxth	r2, r2
 612 0008 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 613              		.loc 1 618 0
 614 000a 1A68     		ldr	r2, [r3]
 615 000c 1043     		orr	r0, r2
 616 000e 1860     		str	r0, [r3]
 617              		.loc 1 619 0
 618 0010 7047     		bx	lr
 619              	.L60:
 620 0012 C046     		.align	2
 621              	.L59:
 622 0014 18001A40 		.word	1075445784
 623              		.cfi_endproc
 624              	.LFE10:
 625              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 626              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 627              		.align	1
 628              		.global	ADC_SAR_Seq_1_SetLimitMask
 629              		.code	16
 630              		.thumb_func
 631              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 632              	ADC_SAR_Seq_1_SetLimitMask:
 633              	.LFB11:
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\temp\ccUyuQab.s 			page 24


 638:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 634              		.loc 1 640 0
 635              		.cfi_startproc
 636              	.LVL35:
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 637              		.loc 1 641 0
 638 0000 1F23     		mov	r3, #31
 639 0002 1840     		and	r0, r3
 640              	.LVL36:
 641 0004 014B     		ldr	r3, .L62
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 642              		.loc 1 642 0
 643              		@ sp needed
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 644              		.loc 1 641 0
 645 0006 1860     		str	r0, [r3]
 646              		.loc 1 642 0
 647 0008 7047     		bx	lr
 648              	.L63:
 649 000a C046     		.align	2
 650              	.L62:
 651 000c 38021A40 		.word	1075446328
 652              		.cfi_endproc
 653              	.LFE11:
 654              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 655              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 656              		.align	1
 657              		.global	ADC_SAR_Seq_1_SetSatMask
 658              		.code	16
 659              		.thumb_func
 660              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 661              	ADC_SAR_Seq_1_SetSatMask:
 662              	.LFB12:
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 663              		.loc 1 663 0
ARM GAS  C:\temp\ccUyuQab.s 			page 25


 664              		.cfi_startproc
 665              	.LVL37:
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 666              		.loc 1 664 0
 667 0000 1F23     		mov	r3, #31
 668 0002 1840     		and	r0, r3
 669              	.LVL38:
 670 0004 014B     		ldr	r3, .L65
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 671              		.loc 1 665 0
 672              		@ sp needed
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 673              		.loc 1 664 0
 674 0006 1860     		str	r0, [r3]
 675              		.loc 1 665 0
 676 0008 7047     		bx	lr
 677              	.L66:
 678 000a C046     		.align	2
 679              	.L65:
 680 000c 28021A40 		.word	1075446312
 681              		.cfi_endproc
 682              	.LFE12:
 683              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 684              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 685              		.align	1
 686              		.global	ADC_SAR_Seq_1_SetOffset
 687              		.code	16
 688              		.thumb_func
 689              		.type	ADC_SAR_Seq_1_SetOffset, %function
 690              	ADC_SAR_Seq_1_SetOffset:
 691              	.LFB13:
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
ARM GAS  C:\temp\ccUyuQab.s 			page 26


 692              		.loc 1 691 0
 693              		.cfi_startproc
 694              	.LVL39:
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 695              		.loc 1 695 0
 696 0000 014B     		ldr	r3, .L68
 697 0002 4000     		lsl	r0, r0, #1
 698              	.LVL40:
 699 0004 C152     		strh	r1, [r0, r3]
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 700              		.loc 1 696 0
 701              		@ sp needed
 702 0006 7047     		bx	lr
 703              	.L69:
 704              		.align	2
 705              	.L68:
 706 0008 00000000 		.word	ADC_SAR_Seq_1_offset
 707              		.cfi_endproc
 708              	.LFE13:
 709              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 710              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 711              		.align	1
 712              		.global	ADC_SAR_Seq_1_SetGain
 713              		.code	16
 714              		.thumb_func
 715              		.type	ADC_SAR_Seq_1_SetGain, %function
 716              	ADC_SAR_Seq_1_SetGain:
 717              	.LFB14:
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\temp\ccUyuQab.s 			page 27


 723:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 718              		.loc 1 725 0
 719              		.cfi_startproc
 720              	.LVL41:
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 721              		.loc 1 729 0
 722 0000 014B     		ldr	r3, .L71
 723 0002 8000     		lsl	r0, r0, #2
 724              	.LVL42:
 725 0004 C150     		str	r1, [r0, r3]
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 726              		.loc 1 730 0
 727              		@ sp needed
 728 0006 7047     		bx	lr
 729              	.L72:
 730              		.align	2
 731              	.L71:
 732 0008 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 733              		.cfi_endproc
 734              	.LFE14:
 735              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 736              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 737              		.align	1
 738              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 739              		.code	16
 740              		.thumb_func
 741              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 742              	ADC_SAR_Seq_1_CountsTo_mVolts:
 743              	.LFB15:
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
ARM GAS  C:\temp\ccUyuQab.s 			page 28


 754:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 744              		.loc 1 758 0
 745              		.cfi_startproc
 746              	.LVL43:
 747 0000 38B5     		push	{r3, r4, r5, lr}
 748              		.cfi_def_cfa_offset 16
 749              		.cfi_offset 3, -16
 750              		.cfi_offset 4, -12
 751              		.cfi_offset 5, -8
 752              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 753              		.loc 1 773 0
 754 0002 0C4B     		ldr	r3, .L76
 755 0004 4200     		lsl	r2, r0, #1
 756 0006 D35A     		ldrh	r3, [r2, r3]
 757 0008 0B4D     		ldr	r5, .L76+4
 758 000a 8000     		lsl	r0, r0, #2
 759              	.LVL44:
 760 000c C91A     		sub	r1, r1, r3
 761              	.LVL45:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 762              		.loc 1 775 0
 763 000e 0B4C     		ldr	r4, .L76+8
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 764              		.loc 1 776 0
 765 0010 2A58     		ldr	r2, [r5, r0]
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 766              		.loc 1 773 0
 767 0012 09B2     		sxth	r1, r1
 768              	.LVL46:
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 769              		.loc 1 775 0
 770 0014 4C43     		mul	r4, r1
 771              		.loc 1 776 0
 772 0016 D30F     		lsr	r3, r2, #31
 773 0018 0029     		cmp	r1, #0
 774 001a 02DD     		ble	.L74
 775              		.loc 1 776 0 is_stmt 0 discriminator 1
ARM GAS  C:\temp\ccUyuQab.s 			page 29


 776 001c 9B18     		add	r3, r3, r2
 777 001e 5B10     		asr	r3, r3, #1
 778 0020 02E0     		b	.L75
 779              	.L74:
 780              		.loc 1 776 0 discriminator 2
 781 0022 9A18     		add	r2, r3, r2
 782 0024 5210     		asr	r2, r2, #1
 783 0026 5342     		neg	r3, r2
 784              	.L75:
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 785              		.loc 1 777 0 is_stmt 1
 786 0028 2958     		ldr	r1, [r5, r0]
 787              	.LVL47:
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 788              		.loc 1 775 0
 789 002a E018     		add	r0, r4, r3
 790              		.loc 1 777 0
 791 002c FFF7FEFF 		bl	__aeabi_idiv
 792              	.LVL48:
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 793              		.loc 1 780 0
 794              		@ sp needed
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 795              		.loc 1 779 0
 796 0030 00B2     		sxth	r0, r0
 797              		.loc 1 780 0
 798 0032 38BD     		pop	{r3, r4, r5, pc}
 799              	.L77:
 800              		.align	2
 801              	.L76:
 802 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 803 0038 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 804 003c 10270000 		.word	10000
 805              		.cfi_endproc
 806              	.LFE15:
 807              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 808              		.global	__aeabi_lmul
 809              		.global	__aeabi_ldivmod
 810              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 811              		.align	1
 812              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 813              		.code	16
 814              		.thumb_func
 815              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 816              	ADC_SAR_Seq_1_CountsTo_uVolts:
 817              	.LFB16:
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
ARM GAS  C:\temp\ccUyuQab.s 			page 30


 790:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 818              		.loc 1 812 0
 819              		.cfi_startproc
 820              	.LVL49:
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 821              		.loc 1 827 0
 822 0000 094B     		ldr	r3, .L79
 823 0002 4200     		lsl	r2, r0, #1
 824 0004 D35A     		ldrh	r3, [r2, r3]
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 825              		.loc 1 812 0
 826 0006 10B5     		push	{r4, lr}
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 4, -8
 829              		.cfi_offset 14, -4
 830              		.loc 1 827 0
 831 0008 C91A     		sub	r1, r1, r3
 832              	.LVL50:
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 833              		.loc 1 829 0
ARM GAS  C:\temp\ccUyuQab.s 			page 31


 834 000a 084B     		ldr	r3, .L79+4
 835 000c 8000     		lsl	r0, r0, #2
 836              	.LVL51:
 837 000e C458     		ldr	r4, [r0, r3]
 838              	.LVL52:
 839 0010 08B2     		sxth	r0, r1
 840 0012 074A     		ldr	r2, .L79+8
 841 0014 0023     		mov	r3, #0
 842 0016 C117     		asr	r1, r0, #31
 843              	.LVL53:
 844 0018 FFF7FEFF 		bl	__aeabi_lmul
 845              	.LVL54:
 846 001c E317     		asr	r3, r4, #31
 847 001e 221C     		mov	r2, r4
 848 0020 FFF7FEFF 		bl	__aeabi_ldivmod
 849              	.LVL55:
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 850              		.loc 1 832 0
 851              		@ sp needed
 852 0024 10BD     		pop	{r4, pc}
 853              	.L80:
 854 0026 C046     		.align	2
 855              	.L79:
 856 0028 00000000 		.word	ADC_SAR_Seq_1_offset
 857 002c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 858 0030 80969800 		.word	10000000
 859              		.cfi_endproc
 860              	.LFE16:
 861              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 862              		.global	__aeabi_i2f
 863              		.global	__aeabi_fmul
 864              		.global	__aeabi_fdiv
 865              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 866              		.align	1
 867              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 868              		.code	16
 869              		.thumb_func
 870              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 871              	ADC_SAR_Seq_1_CountsTo_Volts:
 872              	.LFB17:
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 846:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
ARM GAS  C:\temp\ccUyuQab.s 			page 32


 848:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 849:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 850:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 873              		.loc 1 857 0
 874              		.cfi_startproc
 875              	.LVL56:
 876 0000 38B5     		push	{r3, r4, r5, lr}
 877              		.cfi_def_cfa_offset 16
 878              		.cfi_offset 3, -16
 879              		.cfi_offset 4, -12
 880              		.cfi_offset 5, -8
 881              		.cfi_offset 14, -4
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 882              		.loc 1 872 0
 883 0002 0B4B     		ldr	r3, .L82
 884 0004 4200     		lsl	r2, r0, #1
 885 0006 D35A     		ldrh	r3, [r2, r3]
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 886              		.loc 1 874 0
 887 0008 8000     		lsl	r0, r0, #2
 888              	.LVL57:
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 889              		.loc 1 872 0
 890 000a C91A     		sub	r1, r1, r3
 891              	.LVL58:
 892              		.loc 1 874 0
 893 000c 094B     		ldr	r3, .L82+4
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 877:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 894              		.loc 1 877 0
 895              		@ sp needed
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 896              		.loc 1 874 0
 897 000e C558     		ldr	r5, [r0, r3]
ARM GAS  C:\temp\ccUyuQab.s 			page 33


 898              	.LVL59:
 899 0010 08B2     		sxth	r0, r1
 900 0012 FFF7FEFF 		bl	__aeabi_i2f
 901              	.LVL60:
 902 0016 0849     		ldr	r1, .L82+8
 903 0018 FFF7FEFF 		bl	__aeabi_fmul
 904              	.LVL61:
 905 001c 041C     		add	r4, r0, #0
 906 001e 281C     		mov	r0, r5
 907 0020 FFF7FEFF 		bl	__aeabi_i2f
 908              	.LVL62:
 909 0024 011C     		add	r1, r0, #0
 910 0026 201C     		add	r0, r4, #0
 911 0028 FFF7FEFF 		bl	__aeabi_fdiv
 912              	.LVL63:
 913              		.loc 1 877 0
 914 002c 38BD     		pop	{r3, r4, r5, pc}
 915              	.L83:
 916 002e C046     		.align	2
 917              	.L82:
 918 0030 00000000 		.word	ADC_SAR_Seq_1_offset
 919 0034 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 920 0038 00002041 		.word	1092616192
 921              		.cfi_endproc
 922              	.LFE17:
 923              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 924              		.comm	ADC_SAR_Seq_1_countsPer10Volt,20,4
 925              		.comm	ADC_SAR_Seq_1_offset,10,2
 926              		.global	ADC_SAR_Seq_1_initVar
 927              		.section	.rodata
 928              		.align	2
 929              		.set	.LANCHOR0,. + 0
 930              		.type	ADC_SAR_Seq_1_channelsConfig, %object
 931              		.size	ADC_SAR_Seq_1_channelsConfig, 20
 932              	ADC_SAR_Seq_1_channelsConfig:
 933 0000 00000000 		.space	20
 933      00000000 
 933      00000000 
 933      00000000 
 933      00000000 
 934              		.type	ADC_SAR_Seq_1_InputsPlacement.4740, %object
 935              		.size	ADC_SAR_Seq_1_InputsPlacement.4740, 5
 936              	ADC_SAR_Seq_1_InputsPlacement.4740:
 937 0014 00       		.byte	0
 938 0015 07       		.byte	7
 939 0016 04       		.byte	4
 940 0017 06       		.byte	6
 941 0018 05       		.byte	5
 942 0019 000000   		.bss
 943              		.set	.LANCHOR1,. + 0
 944              		.type	ADC_SAR_Seq_1_initVar, %object
 945              		.size	ADC_SAR_Seq_1_initVar, 1
 946              	ADC_SAR_Seq_1_initVar:
 947 0000 00       		.space	1
 948              		.text
 949              	.Letext0:
 950              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\temp\ccUyuQab.s 			page 34


 951              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 952              		.section	.debug_info,"",%progbits
 953              	.Ldebug_info0:
 954 0000 51050000 		.4byte	0x551
 955 0004 0400     		.2byte	0x4
 956 0006 00000000 		.4byte	.Ldebug_abbrev0
 957 000a 04       		.byte	0x4
 958 000b 01       		.uleb128 0x1
 959 000c 1C000000 		.4byte	.LASF60
 960 0010 01       		.byte	0x1
 961 0011 01030000 		.4byte	.LASF61
 962 0015 DA010000 		.4byte	.LASF62
 963 0019 00000000 		.4byte	.Ldebug_ranges0+0
 964 001d 00000000 		.4byte	0
 965 0021 00000000 		.4byte	.Ldebug_line0
 966 0025 02       		.uleb128 0x2
 967 0026 08       		.byte	0x8
 968 0027 07       		.byte	0x7
 969 0028 14010000 		.4byte	.LASF0
 970 002c 02       		.uleb128 0x2
 971 002d 08       		.byte	0x8
 972 002e 05       		.byte	0x5
 973 002f 78010000 		.4byte	.LASF1
 974 0033 03       		.uleb128 0x3
 975 0034 04       		.byte	0x4
 976 0035 05       		.byte	0x5
 977 0036 696E7400 		.ascii	"int\000"
 978 003a 02       		.uleb128 0x2
 979 003b 04       		.byte	0x4
 980 003c 04       		.byte	0x4
 981 003d 93030000 		.4byte	.LASF2
 982 0041 02       		.uleb128 0x2
 983 0042 02       		.byte	0x2
 984 0043 05       		.byte	0x5
 985 0044 DA030000 		.4byte	.LASF3
 986 0048 02       		.uleb128 0x2
 987 0049 01       		.byte	0x1
 988 004a 06       		.byte	0x6
 989 004b 86010000 		.4byte	.LASF4
 990 004f 02       		.uleb128 0x2
 991 0050 01       		.byte	0x1
 992 0051 08       		.byte	0x8
 993 0052 CC030000 		.4byte	.LASF5
 994 0056 02       		.uleb128 0x2
 995 0057 02       		.byte	0x2
 996 0058 07       		.byte	0x7
 997 0059 B5020000 		.4byte	.LASF6
 998 005d 02       		.uleb128 0x2
 999 005e 04       		.byte	0x4
 1000 005f 05       		.byte	0x5
 1001 0060 D1010000 		.4byte	.LASF7
 1002 0064 02       		.uleb128 0x2
 1003 0065 04       		.byte	0x4
 1004 0066 07       		.byte	0x7
 1005 0067 93020000 		.4byte	.LASF8
 1006 006b 02       		.uleb128 0x2
 1007 006c 04       		.byte	0x4
ARM GAS  C:\temp\ccUyuQab.s 			page 35


 1008 006d 07       		.byte	0x7
 1009 006e 7F020000 		.4byte	.LASF9
 1010 0072 04       		.uleb128 0x4
 1011 0073 20020000 		.4byte	.LASF10
 1012 0077 02       		.byte	0x2
 1013 0078 C2       		.byte	0xc2
 1014 0079 4F000000 		.4byte	0x4f
 1015 007d 04       		.uleb128 0x4
 1016 007e 15000000 		.4byte	.LASF11
 1017 0082 02       		.byte	0x2
 1018 0083 C3       		.byte	0xc3
 1019 0084 56000000 		.4byte	0x56
 1020 0088 04       		.uleb128 0x4
 1021 0089 37020000 		.4byte	.LASF12
 1022 008d 02       		.byte	0x2
 1023 008e C4       		.byte	0xc4
 1024 008f 64000000 		.4byte	0x64
 1025 0093 04       		.uleb128 0x4
 1026 0094 A0040000 		.4byte	.LASF13
 1027 0098 02       		.byte	0x2
 1028 0099 C6       		.byte	0xc6
 1029 009a 41000000 		.4byte	0x41
 1030 009e 04       		.uleb128 0x4
 1031 009f AD010000 		.4byte	.LASF14
 1032 00a3 02       		.byte	0x2
 1033 00a4 C7       		.byte	0xc7
 1034 00a5 5D000000 		.4byte	0x5d
 1035 00a9 04       		.uleb128 0x4
 1036 00aa 2A030000 		.4byte	.LASF15
 1037 00ae 02       		.byte	0x2
 1038 00af C8       		.byte	0xc8
 1039 00b0 3A000000 		.4byte	0x3a
 1040 00b4 02       		.uleb128 0x2
 1041 00b5 08       		.byte	0x8
 1042 00b6 04       		.byte	0x4
 1043 00b7 30020000 		.4byte	.LASF16
 1044 00bb 04       		.uleb128 0x4
 1045 00bc 7C030000 		.4byte	.LASF17
 1046 00c0 02       		.byte	0x2
 1047 00c1 CD       		.byte	0xcd
 1048 00c2 2C000000 		.4byte	0x2c
 1049 00c6 02       		.uleb128 0x2
 1050 00c7 01       		.byte	0x1
 1051 00c8 08       		.byte	0x8
 1052 00c9 26040000 		.4byte	.LASF18
 1053 00cd 05       		.uleb128 0x5
 1054 00ce FB020000 		.4byte	.LASF19
 1055 00d2 02       		.byte	0x2
 1056 00d3 6E01     		.2byte	0x16e
 1057 00d5 D9000000 		.4byte	0xd9
 1058 00d9 06       		.uleb128 0x6
 1059 00da 88000000 		.4byte	0x88
 1060 00de 05       		.uleb128 0x5
 1061 00df 2B040000 		.4byte	.LASF20
 1062 00e3 02       		.byte	0x2
 1063 00e4 7E01     		.2byte	0x17e
 1064 00e6 EA000000 		.4byte	0xea
ARM GAS  C:\temp\ccUyuQab.s 			page 36


 1065 00ea 07       		.uleb128 0x7
 1066 00eb 04       		.byte	0x4
 1067 00ec F0000000 		.4byte	0xf0
 1068 00f0 08       		.uleb128 0x8
 1069 00f1 02       		.uleb128 0x2
 1070 00f2 04       		.byte	0x4
 1071 00f3 07       		.byte	0x7
 1072 00f4 32030000 		.4byte	.LASF21
 1073 00f8 09       		.uleb128 0x9
 1074 00f9 2B010000 		.4byte	.LASF63
 1075 00fd 01       		.byte	0x1
 1076 00fe 4B01     		.2byte	0x14b
 1077 0100 01       		.byte	0x1
 1078 0101 0A       		.uleb128 0xa
 1079 0102 AA000000 		.4byte	.LASF26
 1080 0106 01       		.byte	0x1
 1081 0107 5F       		.byte	0x5f
 1082 0108 00000000 		.4byte	.LFB1
 1083 010c 50010000 		.4byte	.LFE1-.LFB1
 1084 0110 01       		.uleb128 0x1
 1085 0111 9C       		.byte	0x9c
 1086 0112 7C010000 		.4byte	0x17c
 1087 0116 0B       		.uleb128 0xb
 1088 0117 1B040000 		.4byte	.LASF22
 1089 011b 01       		.byte	0x1
 1090 011c 61       		.byte	0x61
 1091 011d 88000000 		.4byte	0x88
 1092 0121 00000000 		.4byte	.LLST0
 1093 0125 0B       		.uleb128 0xb
 1094 0126 AB020000 		.4byte	.LASF23
 1095 012a 01       		.byte	0x1
 1096 012b 62       		.byte	0x62
 1097 012c 88000000 		.4byte	0x88
 1098 0130 2B000000 		.4byte	.LLST1
 1099 0134 0B       		.uleb128 0xb
 1100 0135 C5000000 		.4byte	.LASF24
 1101 0139 01       		.byte	0x1
 1102 013a 63       		.byte	0x63
 1103 013b 9E000000 		.4byte	0x9e
 1104 013f CE000000 		.4byte	.LLST2
 1105 0143 0C       		.uleb128 0xc
 1106 0144 40010000 		.4byte	.LASF25
 1107 0148 01       		.byte	0x1
 1108 0149 66       		.byte	0x66
 1109 014a 8C010000 		.4byte	0x18c
 1110 014e 05       		.uleb128 0x5
 1111 014f 03       		.byte	0x3
 1112 0150 14000000 		.4byte	ADC_SAR_Seq_1_InputsPlacement.4740
 1113 0154 0D       		.uleb128 0xd
 1114 0155 0A000000 		.4byte	.LVL0
 1115 0159 17050000 		.4byte	0x517
 1116 015d 6C010000 		.4byte	0x16c
 1117 0161 0E       		.uleb128 0xe
 1118 0162 01       		.uleb128 0x1
 1119 0163 51       		.byte	0x51
 1120 0164 01       		.uleb128 0x1
 1121 0165 33       		.byte	0x33
ARM GAS  C:\temp\ccUyuQab.s 			page 37


 1122 0166 0E       		.uleb128 0xe
 1123 0167 01       		.uleb128 0x1
 1124 0168 50       		.byte	0x50
 1125 0169 01       		.uleb128 0x1
 1126 016a 3E       		.byte	0x3e
 1127 016b 00       		.byte	0
 1128 016c 0F       		.uleb128 0xf
 1129 016d 12000000 		.4byte	.LVL1
 1130 0171 2D050000 		.4byte	0x52d
 1131 0175 0E       		.uleb128 0xe
 1132 0176 01       		.uleb128 0x1
 1133 0177 50       		.byte	0x50
 1134 0178 01       		.uleb128 0x1
 1135 0179 3E       		.byte	0x3e
 1136 017a 00       		.byte	0
 1137 017b 00       		.byte	0
 1138 017c 10       		.uleb128 0x10
 1139 017d 72000000 		.4byte	0x72
 1140 0181 8C010000 		.4byte	0x18c
 1141 0185 11       		.uleb128 0x11
 1142 0186 F1000000 		.4byte	0xf1
 1143 018a 04       		.byte	0x4
 1144 018b 00       		.byte	0
 1145 018c 12       		.uleb128 0x12
 1146 018d 7C010000 		.4byte	0x17c
 1147 0191 13       		.uleb128 0x13
 1148 0192 F8000000 		.4byte	0xf8
 1149 0196 00000000 		.4byte	.LFB2
 1150 019a 20000000 		.4byte	.LFE2-.LFB2
 1151 019e 01       		.uleb128 0x1
 1152 019f 9C       		.byte	0x9c
 1153 01a0 B4010000 		.4byte	0x1b4
 1154 01a4 0F       		.uleb128 0xf
 1155 01a5 1A000000 		.4byte	.LVL16
 1156 01a9 47050000 		.4byte	0x547
 1157 01ad 0E       		.uleb128 0xe
 1158 01ae 01       		.uleb128 0x1
 1159 01af 50       		.byte	0x50
 1160 01b0 01       		.uleb128 0x1
 1161 01b1 3A       		.byte	0x3a
 1162 01b2 00       		.byte	0
 1163 01b3 00       		.byte	0
 1164 01b4 14       		.uleb128 0x14
 1165 01b5 00010000 		.4byte	.LASF27
 1166 01b9 01       		.byte	0x1
 1167 01ba 40       		.byte	0x40
 1168 01bb 00000000 		.4byte	.LFB0
 1169 01bf 1C000000 		.4byte	.LFE0-.LFB0
 1170 01c3 01       		.uleb128 0x1
 1171 01c4 9C       		.byte	0x9c
 1172 01c5 DC010000 		.4byte	0x1dc
 1173 01c9 15       		.uleb128 0x15
 1174 01ca 0E000000 		.4byte	.LVL17
 1175 01ce 01010000 		.4byte	0x101
 1176 01d2 15       		.uleb128 0x15
 1177 01d3 16000000 		.4byte	.LVL18
 1178 01d7 F8000000 		.4byte	0xf8
ARM GAS  C:\temp\ccUyuQab.s 			page 38


 1179 01db 00       		.byte	0
 1180 01dc 16       		.uleb128 0x16
 1181 01dd AF030000 		.4byte	.LASF28
 1182 01e1 01       		.byte	0x1
 1183 01e2 6E01     		.2byte	0x16e
 1184 01e4 00000000 		.4byte	.LFB3
 1185 01e8 10000000 		.4byte	.LFE3-.LFB3
 1186 01ec 01       		.uleb128 0x1
 1187 01ed 9C       		.byte	0x9c
 1188 01ee 16       		.uleb128 0x16
 1189 01ef CC000000 		.4byte	.LASF29
 1190 01f3 01       		.byte	0x1
 1191 01f4 8801     		.2byte	0x188
 1192 01f6 00000000 		.4byte	.LFB4
 1193 01fa 14000000 		.4byte	.LFE4-.LFB4
 1194 01fe 01       		.uleb128 0x1
 1195 01ff 9C       		.byte	0x9c
 1196 0200 16       		.uleb128 0x16
 1197 0201 62030000 		.4byte	.LASF30
 1198 0205 01       		.byte	0x1
 1199 0206 A101     		.2byte	0x1a1
 1200 0208 00000000 		.4byte	.LFB5
 1201 020c 14000000 		.4byte	.LFE5-.LFB5
 1202 0210 01       		.uleb128 0x1
 1203 0211 9C       		.byte	0x9c
 1204 0212 17       		.uleb128 0x17
 1205 0213 44030000 		.4byte	.LASF32
 1206 0217 01       		.byte	0x1
 1207 0218 C301     		.2byte	0x1c3
 1208 021a 88000000 		.4byte	0x88
 1209 021e 00000000 		.4byte	.LFB6
 1210 0222 28000000 		.4byte	.LFE6-.LFB6
 1211 0226 01       		.uleb128 0x1
 1212 0227 9C       		.byte	0x9c
 1213 0228 4D020000 		.4byte	0x24d
 1214 022c 18       		.uleb128 0x18
 1215 022d 61020000 		.4byte	.LASF34
 1216 0231 01       		.byte	0x1
 1217 0232 C301     		.2byte	0x1c3
 1218 0234 88000000 		.4byte	0x88
 1219 0238 E1000000 		.4byte	.LLST3
 1220 023c 19       		.uleb128 0x19
 1221 023d 81040000 		.4byte	.LASF31
 1222 0241 01       		.byte	0x1
 1223 0242 C501     		.2byte	0x1c5
 1224 0244 88000000 		.4byte	0x88
 1225 0248 0D010000 		.4byte	.LLST4
 1226 024c 00       		.byte	0
 1227 024d 17       		.uleb128 0x17
 1228 024e 5E010000 		.4byte	.LASF33
 1229 0252 01       		.byte	0x1
 1230 0253 F901     		.2byte	0x1f9
 1231 0255 93000000 		.4byte	0x93
 1232 0259 00000000 		.4byte	.LFB7
 1233 025d 18000000 		.4byte	.LFE7-.LFB7
 1234 0261 01       		.uleb128 0x1
 1235 0262 9C       		.byte	0x9c
ARM GAS  C:\temp\ccUyuQab.s 			page 39


 1236 0263 86020000 		.4byte	0x286
 1237 0267 18       		.uleb128 0x18
 1238 0268 21040000 		.4byte	.LASF35
 1239 026c 01       		.byte	0x1
 1240 026d F901     		.2byte	0x1f9
 1241 026f 88000000 		.4byte	0x88
 1242 0273 38010000 		.4byte	.LLST5
 1243 0277 1A       		.uleb128 0x1a
 1244 0278 C1040000 		.4byte	.LASF36
 1245 027c 01       		.byte	0x1
 1246 027d FB01     		.2byte	0x1fb
 1247 027f 88000000 		.4byte	0x88
 1248 0283 01       		.uleb128 0x1
 1249 0284 53       		.byte	0x53
 1250 0285 00       		.byte	0
 1251 0286 1B       		.uleb128 0x1b
 1252 0287 01040000 		.4byte	.LASF37
 1253 028b 01       		.byte	0x1
 1254 028c 2602     		.2byte	0x226
 1255 028e 00000000 		.4byte	.LFB8
 1256 0292 10000000 		.4byte	.LFE8-.LFB8
 1257 0296 01       		.uleb128 0x1
 1258 0297 9C       		.byte	0x9c
 1259 0298 AD020000 		.4byte	0x2ad
 1260 029c 18       		.uleb128 0x18
 1261 029d 3E020000 		.4byte	.LASF38
 1262 02a1 01       		.byte	0x1
 1263 02a2 2602     		.2byte	0x226
 1264 02a4 88000000 		.4byte	0x88
 1265 02a8 59010000 		.4byte	.LLST6
 1266 02ac 00       		.byte	0
 1267 02ad 1B       		.uleb128 0x1b
 1268 02ae 38040000 		.4byte	.LASF39
 1269 02b2 01       		.byte	0x1
 1270 02b3 5202     		.2byte	0x252
 1271 02b5 00000000 		.4byte	.LFB9
 1272 02b9 18000000 		.4byte	.LFE9-.LFB9
 1273 02bd 01       		.uleb128 0x1
 1274 02be 9C       		.byte	0x9c
 1275 02bf D4020000 		.4byte	0x2d4
 1276 02c3 18       		.uleb128 0x18
 1277 02c4 3B030000 		.4byte	.LASF40
 1278 02c8 01       		.byte	0x1
 1279 02c9 5202     		.2byte	0x252
 1280 02cb 88000000 		.4byte	0x88
 1281 02cf 7A010000 		.4byte	.LLST7
 1282 02d3 00       		.byte	0
 1283 02d4 1B       		.uleb128 0x1b
 1284 02d5 92010000 		.4byte	.LASF41
 1285 02d9 01       		.byte	0x1
 1286 02da 6702     		.2byte	0x267
 1287 02dc 00000000 		.4byte	.LFB10
 1288 02e0 18000000 		.4byte	.LFE10-.LFB10
 1289 02e4 01       		.uleb128 0x1
 1290 02e5 9C       		.byte	0x9c
 1291 02e6 FB020000 		.4byte	0x2fb
 1292 02ea 18       		.uleb128 0x18
ARM GAS  C:\temp\ccUyuQab.s 			page 40


 1293 02eb C2030000 		.4byte	.LASF42
 1294 02ef 01       		.byte	0x1
 1295 02f0 6702     		.2byte	0x267
 1296 02f2 88000000 		.4byte	0x88
 1297 02f6 9B010000 		.4byte	.LLST8
 1298 02fa 00       		.byte	0
 1299 02fb 1B       		.uleb128 0x1b
 1300 02fc A6040000 		.4byte	.LASF43
 1301 0300 01       		.byte	0x1
 1302 0301 7F02     		.2byte	0x27f
 1303 0303 00000000 		.4byte	.LFB11
 1304 0307 10000000 		.4byte	.LFE11-.LFB11
 1305 030b 01       		.uleb128 0x1
 1306 030c 9C       		.byte	0x9c
 1307 030d 22030000 		.4byte	0x322
 1308 0311 18       		.uleb128 0x18
 1309 0312 3E020000 		.4byte	.LASF38
 1310 0316 01       		.byte	0x1
 1311 0317 7F02     		.2byte	0x27f
 1312 0319 88000000 		.4byte	0x88
 1313 031d BC010000 		.4byte	.LLST9
 1314 0321 00       		.byte	0
 1315 0322 1B       		.uleb128 0x1b
 1316 0323 E7000000 		.4byte	.LASF44
 1317 0327 01       		.byte	0x1
 1318 0328 9602     		.2byte	0x296
 1319 032a 00000000 		.4byte	.LFB12
 1320 032e 10000000 		.4byte	.LFE12-.LFB12
 1321 0332 01       		.uleb128 0x1
 1322 0333 9C       		.byte	0x9c
 1323 0334 49030000 		.4byte	0x349
 1324 0338 18       		.uleb128 0x18
 1325 0339 3E020000 		.4byte	.LASF38
 1326 033d 01       		.byte	0x1
 1327 033e 9602     		.2byte	0x296
 1328 0340 88000000 		.4byte	0x88
 1329 0344 DD010000 		.4byte	.LLST10
 1330 0348 00       		.byte	0
 1331 0349 1B       		.uleb128 0x1b
 1332 034a 88040000 		.4byte	.LASF45
 1333 034e 01       		.byte	0x1
 1334 034f B202     		.2byte	0x2b2
 1335 0351 00000000 		.4byte	.LFB13
 1336 0355 0C000000 		.4byte	.LFE13-.LFB13
 1337 0359 01       		.uleb128 0x1
 1338 035a 9C       		.byte	0x9c
 1339 035b 7E030000 		.4byte	0x37e
 1340 035f 18       		.uleb128 0x18
 1341 0360 21040000 		.4byte	.LASF35
 1342 0364 01       		.byte	0x1
 1343 0365 B202     		.2byte	0x2b2
 1344 0367 88000000 		.4byte	0x88
 1345 036b FE010000 		.4byte	.LLST11
 1346 036f 1C       		.uleb128 0x1c
 1347 0370 52040000 		.4byte	.LASF46
 1348 0374 01       		.byte	0x1
 1349 0375 B202     		.2byte	0x2b2
ARM GAS  C:\temp\ccUyuQab.s 			page 41


 1350 0377 93000000 		.4byte	0x93
 1351 037b 01       		.uleb128 0x1
 1352 037c 51       		.byte	0x51
 1353 037d 00       		.byte	0
 1354 037e 1B       		.uleb128 0x1b
 1355 037f 99030000 		.4byte	.LASF47
 1356 0383 01       		.byte	0x1
 1357 0384 D402     		.2byte	0x2d4
 1358 0386 00000000 		.4byte	.LFB14
 1359 038a 0C000000 		.4byte	.LFE14-.LFB14
 1360 038e 01       		.uleb128 0x1
 1361 038f 9C       		.byte	0x9c
 1362 0390 B3030000 		.4byte	0x3b3
 1363 0394 18       		.uleb128 0x18
 1364 0395 21040000 		.4byte	.LASF35
 1365 0399 01       		.byte	0x1
 1366 039a D402     		.2byte	0x2d4
 1367 039c 88000000 		.4byte	0x88
 1368 03a0 1F020000 		.4byte	.LLST12
 1369 03a4 1C       		.uleb128 0x1c
 1370 03a5 BD000000 		.4byte	.LASF48
 1371 03a9 01       		.byte	0x1
 1372 03aa D402     		.2byte	0x2d4
 1373 03ac 9E000000 		.4byte	0x9e
 1374 03b0 01       		.uleb128 0x1
 1375 03b1 51       		.byte	0x51
 1376 03b2 00       		.byte	0
 1377 03b3 1D       		.uleb128 0x1d
 1378 03b4 43020000 		.4byte	.LASF49
 1379 03b8 01       		.byte	0x1
 1380 03b9 F502     		.2byte	0x2f5
 1381 03bb 93000000 		.4byte	0x93
 1382 03bf 00000000 		.4byte	.LFB15
 1383 03c3 40000000 		.4byte	.LFE15-.LFB15
 1384 03c7 01       		.uleb128 0x1
 1385 03c8 9C       		.byte	0x9c
 1386 03c9 FE030000 		.4byte	0x3fe
 1387 03cd 18       		.uleb128 0x18
 1388 03ce 21040000 		.4byte	.LASF35
 1389 03d2 01       		.byte	0x1
 1390 03d3 F502     		.2byte	0x2f5
 1391 03d5 88000000 		.4byte	0x88
 1392 03d9 40020000 		.4byte	.LLST13
 1393 03dd 18       		.uleb128 0x18
 1394 03de 59040000 		.4byte	.LASF50
 1395 03e2 01       		.byte	0x1
 1396 03e3 F502     		.2byte	0x2f5
 1397 03e5 93000000 		.4byte	0x93
 1398 03e9 61020000 		.4byte	.LLST14
 1399 03ed 19       		.uleb128 0x19
 1400 03ee F4020000 		.4byte	.LASF51
 1401 03f2 01       		.byte	0x1
 1402 03f3 F702     		.2byte	0x2f7
 1403 03f5 93000000 		.4byte	0x93
 1404 03f9 8D020000 		.4byte	.LLST15
 1405 03fd 00       		.byte	0
 1406 03fe 1D       		.uleb128 0x1d
ARM GAS  C:\temp\ccUyuQab.s 			page 42


 1407 03ff B3010000 		.4byte	.LASF52
 1408 0403 01       		.byte	0x1
 1409 0404 2B03     		.2byte	0x32b
 1410 0406 9E000000 		.4byte	0x9e
 1411 040a 00000000 		.4byte	.LFB16
 1412 040e 34000000 		.4byte	.LFE16-.LFB16
 1413 0412 01       		.uleb128 0x1
 1414 0413 9C       		.byte	0x9c
 1415 0414 49040000 		.4byte	0x449
 1416 0418 18       		.uleb128 0x18
 1417 0419 21040000 		.4byte	.LASF35
 1418 041d 01       		.byte	0x1
 1419 041e 2B03     		.2byte	0x32b
 1420 0420 88000000 		.4byte	0x88
 1421 0424 A8020000 		.4byte	.LLST16
 1422 0428 18       		.uleb128 0x18
 1423 0429 59040000 		.4byte	.LASF50
 1424 042d 01       		.byte	0x1
 1425 042e 2B03     		.2byte	0x32b
 1426 0430 93000000 		.4byte	0x93
 1427 0434 C9020000 		.4byte	.LLST17
 1428 0438 19       		.uleb128 0x19
 1429 0439 8C020000 		.4byte	.LASF53
 1430 043d 01       		.byte	0x1
 1431 043e 2D03     		.2byte	0x32d
 1432 0440 BB000000 		.4byte	0xbb
 1433 0444 F2020000 		.4byte	.LLST18
 1434 0448 00       		.byte	0
 1435 0449 1D       		.uleb128 0x1d
 1436 044a E4030000 		.4byte	.LASF54
 1437 044e 01       		.byte	0x1
 1438 044f 5803     		.2byte	0x358
 1439 0451 A9000000 		.4byte	0xa9
 1440 0455 00000000 		.4byte	.LFB17
 1441 0459 3C000000 		.4byte	.LFE17-.LFB17
 1442 045d 01       		.uleb128 0x1
 1443 045e 9C       		.byte	0x9c
 1444 045f 94040000 		.4byte	0x494
 1445 0463 18       		.uleb128 0x18
 1446 0464 21040000 		.4byte	.LASF35
 1447 0468 01       		.byte	0x1
 1448 0469 5803     		.2byte	0x358
 1449 046b 88000000 		.4byte	0x88
 1450 046f 42030000 		.4byte	.LLST19
 1451 0473 18       		.uleb128 0x18
 1452 0474 59040000 		.4byte	.LASF50
 1453 0478 01       		.byte	0x1
 1454 0479 5803     		.2byte	0x358
 1455 047b 93000000 		.4byte	0x93
 1456 047f 63030000 		.4byte	.LLST20
 1457 0483 19       		.uleb128 0x19
 1458 0484 A5020000 		.4byte	.LASF55
 1459 0488 01       		.byte	0x1
 1460 0489 5A03     		.2byte	0x35a
 1461 048b A9000000 		.4byte	0xa9
 1462 048f 81030000 		.4byte	.LLST21
 1463 0493 00       		.byte	0
ARM GAS  C:\temp\ccUyuQab.s 			page 43


 1464 0494 10       		.uleb128 0x10
 1465 0495 88000000 		.4byte	0x88
 1466 0499 A4040000 		.4byte	0x4a4
 1467 049d 11       		.uleb128 0x11
 1468 049e F1000000 		.4byte	0xf1
 1469 04a2 04       		.byte	0x4
 1470 04a3 00       		.byte	0
 1471 04a4 0C       		.uleb128 0xc
 1472 04a5 D7020000 		.4byte	.LASF56
 1473 04a9 01       		.byte	0x1
 1474 04aa 21       		.byte	0x21
 1475 04ab B5040000 		.4byte	0x4b5
 1476 04af 05       		.uleb128 0x5
 1477 04b0 03       		.byte	0x3
 1478 04b1 00000000 		.4byte	ADC_SAR_Seq_1_channelsConfig
 1479 04b5 12       		.uleb128 0x12
 1480 04b6 94040000 		.4byte	0x494
 1481 04ba 1E       		.uleb128 0x1e
 1482 04bb 69020000 		.4byte	.LASF57
 1483 04bf 01       		.byte	0x1
 1484 04c0 18       		.byte	0x18
 1485 04c1 72000000 		.4byte	0x72
 1486 04c5 05       		.uleb128 0x5
 1487 04c6 03       		.byte	0x3
 1488 04c7 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1489 04cb 10       		.uleb128 0x10
 1490 04cc 93000000 		.4byte	0x93
 1491 04d0 DB040000 		.4byte	0x4db
 1492 04d4 11       		.uleb128 0x11
 1493 04d5 F1000000 		.4byte	0xf1
 1494 04d9 04       		.byte	0x4
 1495 04da 00       		.byte	0
 1496 04db 1E       		.uleb128 0x1e
 1497 04dc 00000000 		.4byte	.LASF58
 1498 04e0 01       		.byte	0x1
 1499 04e1 19       		.byte	0x19
 1500 04e2 EC040000 		.4byte	0x4ec
 1501 04e6 05       		.uleb128 0x5
 1502 04e7 03       		.byte	0x3
 1503 04e8 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1504 04ec 06       		.uleb128 0x6
 1505 04ed CB040000 		.4byte	0x4cb
 1506 04f1 10       		.uleb128 0x10
 1507 04f2 9E000000 		.4byte	0x9e
 1508 04f6 01050000 		.4byte	0x501
 1509 04fa 11       		.uleb128 0x11
 1510 04fb F1000000 		.4byte	0xf1
 1511 04ff 04       		.byte	0x4
 1512 0500 00       		.byte	0
 1513 0501 1E       		.uleb128 0x1e
 1514 0502 63040000 		.4byte	.LASF59
 1515 0506 01       		.byte	0x1
 1516 0507 1A       		.byte	0x1a
 1517 0508 12050000 		.4byte	0x512
 1518 050c 05       		.uleb128 0x5
 1519 050d 03       		.byte	0x3
 1520 050e 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
ARM GAS  C:\temp\ccUyuQab.s 			page 44


 1521 0512 06       		.uleb128 0x6
 1522 0513 F1040000 		.4byte	0x4f1
 1523 0517 1F       		.uleb128 0x1f
 1524 0518 82030000 		.4byte	.LASF64
 1525 051c 03       		.byte	0x3
 1526 051d 49       		.byte	0x49
 1527 051e 2D050000 		.4byte	0x52d
 1528 0522 20       		.uleb128 0x20
 1529 0523 72000000 		.4byte	0x72
 1530 0527 20       		.uleb128 0x20
 1531 0528 72000000 		.4byte	0x72
 1532 052c 00       		.byte	0
 1533 052d 21       		.uleb128 0x21
 1534 052e C8020000 		.4byte	.LASF65
 1535 0532 03       		.byte	0x3
 1536 0533 46       		.byte	0x46
 1537 0534 DE000000 		.4byte	0xde
 1538 0538 47050000 		.4byte	0x547
 1539 053c 20       		.uleb128 0x20
 1540 053d 72000000 		.4byte	0x72
 1541 0541 20       		.uleb128 0x20
 1542 0542 DE000000 		.4byte	0xde
 1543 0546 00       		.byte	0
 1544 0547 22       		.uleb128 0x22
 1545 0548 26020000 		.4byte	.LASF66
 1546 054c 03       		.byte	0x3
 1547 054d 58       		.byte	0x58
 1548 054e 20       		.uleb128 0x20
 1549 054f 7D000000 		.4byte	0x7d
 1550 0553 00       		.byte	0
 1551 0554 00       		.byte	0
 1552              		.section	.debug_abbrev,"",%progbits
 1553              	.Ldebug_abbrev0:
 1554 0000 01       		.uleb128 0x1
 1555 0001 11       		.uleb128 0x11
 1556 0002 01       		.byte	0x1
 1557 0003 25       		.uleb128 0x25
 1558 0004 0E       		.uleb128 0xe
 1559 0005 13       		.uleb128 0x13
 1560 0006 0B       		.uleb128 0xb
 1561 0007 03       		.uleb128 0x3
 1562 0008 0E       		.uleb128 0xe
 1563 0009 1B       		.uleb128 0x1b
 1564 000a 0E       		.uleb128 0xe
 1565 000b 55       		.uleb128 0x55
 1566 000c 17       		.uleb128 0x17
 1567 000d 11       		.uleb128 0x11
 1568 000e 01       		.uleb128 0x1
 1569 000f 10       		.uleb128 0x10
 1570 0010 17       		.uleb128 0x17
 1571 0011 00       		.byte	0
 1572 0012 00       		.byte	0
 1573 0013 02       		.uleb128 0x2
 1574 0014 24       		.uleb128 0x24
 1575 0015 00       		.byte	0
 1576 0016 0B       		.uleb128 0xb
 1577 0017 0B       		.uleb128 0xb
ARM GAS  C:\temp\ccUyuQab.s 			page 45


 1578 0018 3E       		.uleb128 0x3e
 1579 0019 0B       		.uleb128 0xb
 1580 001a 03       		.uleb128 0x3
 1581 001b 0E       		.uleb128 0xe
 1582 001c 00       		.byte	0
 1583 001d 00       		.byte	0
 1584 001e 03       		.uleb128 0x3
 1585 001f 24       		.uleb128 0x24
 1586 0020 00       		.byte	0
 1587 0021 0B       		.uleb128 0xb
 1588 0022 0B       		.uleb128 0xb
 1589 0023 3E       		.uleb128 0x3e
 1590 0024 0B       		.uleb128 0xb
 1591 0025 03       		.uleb128 0x3
 1592 0026 08       		.uleb128 0x8
 1593 0027 00       		.byte	0
 1594 0028 00       		.byte	0
 1595 0029 04       		.uleb128 0x4
 1596 002a 16       		.uleb128 0x16
 1597 002b 00       		.byte	0
 1598 002c 03       		.uleb128 0x3
 1599 002d 0E       		.uleb128 0xe
 1600 002e 3A       		.uleb128 0x3a
 1601 002f 0B       		.uleb128 0xb
 1602 0030 3B       		.uleb128 0x3b
 1603 0031 0B       		.uleb128 0xb
 1604 0032 49       		.uleb128 0x49
 1605 0033 13       		.uleb128 0x13
 1606 0034 00       		.byte	0
 1607 0035 00       		.byte	0
 1608 0036 05       		.uleb128 0x5
 1609 0037 16       		.uleb128 0x16
 1610 0038 00       		.byte	0
 1611 0039 03       		.uleb128 0x3
 1612 003a 0E       		.uleb128 0xe
 1613 003b 3A       		.uleb128 0x3a
 1614 003c 0B       		.uleb128 0xb
 1615 003d 3B       		.uleb128 0x3b
 1616 003e 05       		.uleb128 0x5
 1617 003f 49       		.uleb128 0x49
 1618 0040 13       		.uleb128 0x13
 1619 0041 00       		.byte	0
 1620 0042 00       		.byte	0
 1621 0043 06       		.uleb128 0x6
 1622 0044 35       		.uleb128 0x35
 1623 0045 00       		.byte	0
 1624 0046 49       		.uleb128 0x49
 1625 0047 13       		.uleb128 0x13
 1626 0048 00       		.byte	0
 1627 0049 00       		.byte	0
 1628 004a 07       		.uleb128 0x7
 1629 004b 0F       		.uleb128 0xf
 1630 004c 00       		.byte	0
 1631 004d 0B       		.uleb128 0xb
 1632 004e 0B       		.uleb128 0xb
 1633 004f 49       		.uleb128 0x49
 1634 0050 13       		.uleb128 0x13
ARM GAS  C:\temp\ccUyuQab.s 			page 46


 1635 0051 00       		.byte	0
 1636 0052 00       		.byte	0
 1637 0053 08       		.uleb128 0x8
 1638 0054 15       		.uleb128 0x15
 1639 0055 00       		.byte	0
 1640 0056 27       		.uleb128 0x27
 1641 0057 19       		.uleb128 0x19
 1642 0058 00       		.byte	0
 1643 0059 00       		.byte	0
 1644 005a 09       		.uleb128 0x9
 1645 005b 2E       		.uleb128 0x2e
 1646 005c 00       		.byte	0
 1647 005d 3F       		.uleb128 0x3f
 1648 005e 19       		.uleb128 0x19
 1649 005f 03       		.uleb128 0x3
 1650 0060 0E       		.uleb128 0xe
 1651 0061 3A       		.uleb128 0x3a
 1652 0062 0B       		.uleb128 0xb
 1653 0063 3B       		.uleb128 0x3b
 1654 0064 05       		.uleb128 0x5
 1655 0065 27       		.uleb128 0x27
 1656 0066 19       		.uleb128 0x19
 1657 0067 20       		.uleb128 0x20
 1658 0068 0B       		.uleb128 0xb
 1659 0069 00       		.byte	0
 1660 006a 00       		.byte	0
 1661 006b 0A       		.uleb128 0xa
 1662 006c 2E       		.uleb128 0x2e
 1663 006d 01       		.byte	0x1
 1664 006e 3F       		.uleb128 0x3f
 1665 006f 19       		.uleb128 0x19
 1666 0070 03       		.uleb128 0x3
 1667 0071 0E       		.uleb128 0xe
 1668 0072 3A       		.uleb128 0x3a
 1669 0073 0B       		.uleb128 0xb
 1670 0074 3B       		.uleb128 0x3b
 1671 0075 0B       		.uleb128 0xb
 1672 0076 27       		.uleb128 0x27
 1673 0077 19       		.uleb128 0x19
 1674 0078 11       		.uleb128 0x11
 1675 0079 01       		.uleb128 0x1
 1676 007a 12       		.uleb128 0x12
 1677 007b 06       		.uleb128 0x6
 1678 007c 40       		.uleb128 0x40
 1679 007d 18       		.uleb128 0x18
 1680 007e 9642     		.uleb128 0x2116
 1681 0080 19       		.uleb128 0x19
 1682 0081 01       		.uleb128 0x1
 1683 0082 13       		.uleb128 0x13
 1684 0083 00       		.byte	0
 1685 0084 00       		.byte	0
 1686 0085 0B       		.uleb128 0xb
 1687 0086 34       		.uleb128 0x34
 1688 0087 00       		.byte	0
 1689 0088 03       		.uleb128 0x3
 1690 0089 0E       		.uleb128 0xe
 1691 008a 3A       		.uleb128 0x3a
ARM GAS  C:\temp\ccUyuQab.s 			page 47


 1692 008b 0B       		.uleb128 0xb
 1693 008c 3B       		.uleb128 0x3b
 1694 008d 0B       		.uleb128 0xb
 1695 008e 49       		.uleb128 0x49
 1696 008f 13       		.uleb128 0x13
 1697 0090 02       		.uleb128 0x2
 1698 0091 17       		.uleb128 0x17
 1699 0092 00       		.byte	0
 1700 0093 00       		.byte	0
 1701 0094 0C       		.uleb128 0xc
 1702 0095 34       		.uleb128 0x34
 1703 0096 00       		.byte	0
 1704 0097 03       		.uleb128 0x3
 1705 0098 0E       		.uleb128 0xe
 1706 0099 3A       		.uleb128 0x3a
 1707 009a 0B       		.uleb128 0xb
 1708 009b 3B       		.uleb128 0x3b
 1709 009c 0B       		.uleb128 0xb
 1710 009d 49       		.uleb128 0x49
 1711 009e 13       		.uleb128 0x13
 1712 009f 02       		.uleb128 0x2
 1713 00a0 18       		.uleb128 0x18
 1714 00a1 00       		.byte	0
 1715 00a2 00       		.byte	0
 1716 00a3 0D       		.uleb128 0xd
 1717 00a4 898201   		.uleb128 0x4109
 1718 00a7 01       		.byte	0x1
 1719 00a8 11       		.uleb128 0x11
 1720 00a9 01       		.uleb128 0x1
 1721 00aa 31       		.uleb128 0x31
 1722 00ab 13       		.uleb128 0x13
 1723 00ac 01       		.uleb128 0x1
 1724 00ad 13       		.uleb128 0x13
 1725 00ae 00       		.byte	0
 1726 00af 00       		.byte	0
 1727 00b0 0E       		.uleb128 0xe
 1728 00b1 8A8201   		.uleb128 0x410a
 1729 00b4 00       		.byte	0
 1730 00b5 02       		.uleb128 0x2
 1731 00b6 18       		.uleb128 0x18
 1732 00b7 9142     		.uleb128 0x2111
 1733 00b9 18       		.uleb128 0x18
 1734 00ba 00       		.byte	0
 1735 00bb 00       		.byte	0
 1736 00bc 0F       		.uleb128 0xf
 1737 00bd 898201   		.uleb128 0x4109
 1738 00c0 01       		.byte	0x1
 1739 00c1 11       		.uleb128 0x11
 1740 00c2 01       		.uleb128 0x1
 1741 00c3 31       		.uleb128 0x31
 1742 00c4 13       		.uleb128 0x13
 1743 00c5 00       		.byte	0
 1744 00c6 00       		.byte	0
 1745 00c7 10       		.uleb128 0x10
 1746 00c8 01       		.uleb128 0x1
 1747 00c9 01       		.byte	0x1
 1748 00ca 49       		.uleb128 0x49
ARM GAS  C:\temp\ccUyuQab.s 			page 48


 1749 00cb 13       		.uleb128 0x13
 1750 00cc 01       		.uleb128 0x1
 1751 00cd 13       		.uleb128 0x13
 1752 00ce 00       		.byte	0
 1753 00cf 00       		.byte	0
 1754 00d0 11       		.uleb128 0x11
 1755 00d1 21       		.uleb128 0x21
 1756 00d2 00       		.byte	0
 1757 00d3 49       		.uleb128 0x49
 1758 00d4 13       		.uleb128 0x13
 1759 00d5 2F       		.uleb128 0x2f
 1760 00d6 0B       		.uleb128 0xb
 1761 00d7 00       		.byte	0
 1762 00d8 00       		.byte	0
 1763 00d9 12       		.uleb128 0x12
 1764 00da 26       		.uleb128 0x26
 1765 00db 00       		.byte	0
 1766 00dc 49       		.uleb128 0x49
 1767 00dd 13       		.uleb128 0x13
 1768 00de 00       		.byte	0
 1769 00df 00       		.byte	0
 1770 00e0 13       		.uleb128 0x13
 1771 00e1 2E       		.uleb128 0x2e
 1772 00e2 01       		.byte	0x1
 1773 00e3 31       		.uleb128 0x31
 1774 00e4 13       		.uleb128 0x13
 1775 00e5 11       		.uleb128 0x11
 1776 00e6 01       		.uleb128 0x1
 1777 00e7 12       		.uleb128 0x12
 1778 00e8 06       		.uleb128 0x6
 1779 00e9 40       		.uleb128 0x40
 1780 00ea 18       		.uleb128 0x18
 1781 00eb 9742     		.uleb128 0x2117
 1782 00ed 19       		.uleb128 0x19
 1783 00ee 01       		.uleb128 0x1
 1784 00ef 13       		.uleb128 0x13
 1785 00f0 00       		.byte	0
 1786 00f1 00       		.byte	0
 1787 00f2 14       		.uleb128 0x14
 1788 00f3 2E       		.uleb128 0x2e
 1789 00f4 01       		.byte	0x1
 1790 00f5 3F       		.uleb128 0x3f
 1791 00f6 19       		.uleb128 0x19
 1792 00f7 03       		.uleb128 0x3
 1793 00f8 0E       		.uleb128 0xe
 1794 00f9 3A       		.uleb128 0x3a
 1795 00fa 0B       		.uleb128 0xb
 1796 00fb 3B       		.uleb128 0x3b
 1797 00fc 0B       		.uleb128 0xb
 1798 00fd 27       		.uleb128 0x27
 1799 00fe 19       		.uleb128 0x19
 1800 00ff 11       		.uleb128 0x11
 1801 0100 01       		.uleb128 0x1
 1802 0101 12       		.uleb128 0x12
 1803 0102 06       		.uleb128 0x6
 1804 0103 40       		.uleb128 0x40
 1805 0104 18       		.uleb128 0x18
ARM GAS  C:\temp\ccUyuQab.s 			page 49


 1806 0105 9742     		.uleb128 0x2117
 1807 0107 19       		.uleb128 0x19
 1808 0108 01       		.uleb128 0x1
 1809 0109 13       		.uleb128 0x13
 1810 010a 00       		.byte	0
 1811 010b 00       		.byte	0
 1812 010c 15       		.uleb128 0x15
 1813 010d 898201   		.uleb128 0x4109
 1814 0110 00       		.byte	0
 1815 0111 11       		.uleb128 0x11
 1816 0112 01       		.uleb128 0x1
 1817 0113 31       		.uleb128 0x31
 1818 0114 13       		.uleb128 0x13
 1819 0115 00       		.byte	0
 1820 0116 00       		.byte	0
 1821 0117 16       		.uleb128 0x16
 1822 0118 2E       		.uleb128 0x2e
 1823 0119 00       		.byte	0
 1824 011a 3F       		.uleb128 0x3f
 1825 011b 19       		.uleb128 0x19
 1826 011c 03       		.uleb128 0x3
 1827 011d 0E       		.uleb128 0xe
 1828 011e 3A       		.uleb128 0x3a
 1829 011f 0B       		.uleb128 0xb
 1830 0120 3B       		.uleb128 0x3b
 1831 0121 05       		.uleb128 0x5
 1832 0122 27       		.uleb128 0x27
 1833 0123 19       		.uleb128 0x19
 1834 0124 11       		.uleb128 0x11
 1835 0125 01       		.uleb128 0x1
 1836 0126 12       		.uleb128 0x12
 1837 0127 06       		.uleb128 0x6
 1838 0128 40       		.uleb128 0x40
 1839 0129 18       		.uleb128 0x18
 1840 012a 9742     		.uleb128 0x2117
 1841 012c 19       		.uleb128 0x19
 1842 012d 00       		.byte	0
 1843 012e 00       		.byte	0
 1844 012f 17       		.uleb128 0x17
 1845 0130 2E       		.uleb128 0x2e
 1846 0131 01       		.byte	0x1
 1847 0132 3F       		.uleb128 0x3f
 1848 0133 19       		.uleb128 0x19
 1849 0134 03       		.uleb128 0x3
 1850 0135 0E       		.uleb128 0xe
 1851 0136 3A       		.uleb128 0x3a
 1852 0137 0B       		.uleb128 0xb
 1853 0138 3B       		.uleb128 0x3b
 1854 0139 05       		.uleb128 0x5
 1855 013a 27       		.uleb128 0x27
 1856 013b 19       		.uleb128 0x19
 1857 013c 49       		.uleb128 0x49
 1858 013d 13       		.uleb128 0x13
 1859 013e 11       		.uleb128 0x11
 1860 013f 01       		.uleb128 0x1
 1861 0140 12       		.uleb128 0x12
 1862 0141 06       		.uleb128 0x6
ARM GAS  C:\temp\ccUyuQab.s 			page 50


 1863 0142 40       		.uleb128 0x40
 1864 0143 18       		.uleb128 0x18
 1865 0144 9742     		.uleb128 0x2117
 1866 0146 19       		.uleb128 0x19
 1867 0147 01       		.uleb128 0x1
 1868 0148 13       		.uleb128 0x13
 1869 0149 00       		.byte	0
 1870 014a 00       		.byte	0
 1871 014b 18       		.uleb128 0x18
 1872 014c 05       		.uleb128 0x5
 1873 014d 00       		.byte	0
 1874 014e 03       		.uleb128 0x3
 1875 014f 0E       		.uleb128 0xe
 1876 0150 3A       		.uleb128 0x3a
 1877 0151 0B       		.uleb128 0xb
 1878 0152 3B       		.uleb128 0x3b
 1879 0153 05       		.uleb128 0x5
 1880 0154 49       		.uleb128 0x49
 1881 0155 13       		.uleb128 0x13
 1882 0156 02       		.uleb128 0x2
 1883 0157 17       		.uleb128 0x17
 1884 0158 00       		.byte	0
 1885 0159 00       		.byte	0
 1886 015a 19       		.uleb128 0x19
 1887 015b 34       		.uleb128 0x34
 1888 015c 00       		.byte	0
 1889 015d 03       		.uleb128 0x3
 1890 015e 0E       		.uleb128 0xe
 1891 015f 3A       		.uleb128 0x3a
 1892 0160 0B       		.uleb128 0xb
 1893 0161 3B       		.uleb128 0x3b
 1894 0162 05       		.uleb128 0x5
 1895 0163 49       		.uleb128 0x49
 1896 0164 13       		.uleb128 0x13
 1897 0165 02       		.uleb128 0x2
 1898 0166 17       		.uleb128 0x17
 1899 0167 00       		.byte	0
 1900 0168 00       		.byte	0
 1901 0169 1A       		.uleb128 0x1a
 1902 016a 34       		.uleb128 0x34
 1903 016b 00       		.byte	0
 1904 016c 03       		.uleb128 0x3
 1905 016d 0E       		.uleb128 0xe
 1906 016e 3A       		.uleb128 0x3a
 1907 016f 0B       		.uleb128 0xb
 1908 0170 3B       		.uleb128 0x3b
 1909 0171 05       		.uleb128 0x5
 1910 0172 49       		.uleb128 0x49
 1911 0173 13       		.uleb128 0x13
 1912 0174 02       		.uleb128 0x2
 1913 0175 18       		.uleb128 0x18
 1914 0176 00       		.byte	0
 1915 0177 00       		.byte	0
 1916 0178 1B       		.uleb128 0x1b
 1917 0179 2E       		.uleb128 0x2e
 1918 017a 01       		.byte	0x1
 1919 017b 3F       		.uleb128 0x3f
ARM GAS  C:\temp\ccUyuQab.s 			page 51


 1920 017c 19       		.uleb128 0x19
 1921 017d 03       		.uleb128 0x3
 1922 017e 0E       		.uleb128 0xe
 1923 017f 3A       		.uleb128 0x3a
 1924 0180 0B       		.uleb128 0xb
 1925 0181 3B       		.uleb128 0x3b
 1926 0182 05       		.uleb128 0x5
 1927 0183 27       		.uleb128 0x27
 1928 0184 19       		.uleb128 0x19
 1929 0185 11       		.uleb128 0x11
 1930 0186 01       		.uleb128 0x1
 1931 0187 12       		.uleb128 0x12
 1932 0188 06       		.uleb128 0x6
 1933 0189 40       		.uleb128 0x40
 1934 018a 18       		.uleb128 0x18
 1935 018b 9742     		.uleb128 0x2117
 1936 018d 19       		.uleb128 0x19
 1937 018e 01       		.uleb128 0x1
 1938 018f 13       		.uleb128 0x13
 1939 0190 00       		.byte	0
 1940 0191 00       		.byte	0
 1941 0192 1C       		.uleb128 0x1c
 1942 0193 05       		.uleb128 0x5
 1943 0194 00       		.byte	0
 1944 0195 03       		.uleb128 0x3
 1945 0196 0E       		.uleb128 0xe
 1946 0197 3A       		.uleb128 0x3a
 1947 0198 0B       		.uleb128 0xb
 1948 0199 3B       		.uleb128 0x3b
 1949 019a 05       		.uleb128 0x5
 1950 019b 49       		.uleb128 0x49
 1951 019c 13       		.uleb128 0x13
 1952 019d 02       		.uleb128 0x2
 1953 019e 18       		.uleb128 0x18
 1954 019f 00       		.byte	0
 1955 01a0 00       		.byte	0
 1956 01a1 1D       		.uleb128 0x1d
 1957 01a2 2E       		.uleb128 0x2e
 1958 01a3 01       		.byte	0x1
 1959 01a4 3F       		.uleb128 0x3f
 1960 01a5 19       		.uleb128 0x19
 1961 01a6 03       		.uleb128 0x3
 1962 01a7 0E       		.uleb128 0xe
 1963 01a8 3A       		.uleb128 0x3a
 1964 01a9 0B       		.uleb128 0xb
 1965 01aa 3B       		.uleb128 0x3b
 1966 01ab 05       		.uleb128 0x5
 1967 01ac 27       		.uleb128 0x27
 1968 01ad 19       		.uleb128 0x19
 1969 01ae 49       		.uleb128 0x49
 1970 01af 13       		.uleb128 0x13
 1971 01b0 11       		.uleb128 0x11
 1972 01b1 01       		.uleb128 0x1
 1973 01b2 12       		.uleb128 0x12
 1974 01b3 06       		.uleb128 0x6
 1975 01b4 40       		.uleb128 0x40
 1976 01b5 18       		.uleb128 0x18
ARM GAS  C:\temp\ccUyuQab.s 			page 52


 1977 01b6 9642     		.uleb128 0x2116
 1978 01b8 19       		.uleb128 0x19
 1979 01b9 01       		.uleb128 0x1
 1980 01ba 13       		.uleb128 0x13
 1981 01bb 00       		.byte	0
 1982 01bc 00       		.byte	0
 1983 01bd 1E       		.uleb128 0x1e
 1984 01be 34       		.uleb128 0x34
 1985 01bf 00       		.byte	0
 1986 01c0 03       		.uleb128 0x3
 1987 01c1 0E       		.uleb128 0xe
 1988 01c2 3A       		.uleb128 0x3a
 1989 01c3 0B       		.uleb128 0xb
 1990 01c4 3B       		.uleb128 0x3b
 1991 01c5 0B       		.uleb128 0xb
 1992 01c6 49       		.uleb128 0x49
 1993 01c7 13       		.uleb128 0x13
 1994 01c8 3F       		.uleb128 0x3f
 1995 01c9 19       		.uleb128 0x19
 1996 01ca 02       		.uleb128 0x2
 1997 01cb 18       		.uleb128 0x18
 1998 01cc 00       		.byte	0
 1999 01cd 00       		.byte	0
 2000 01ce 1F       		.uleb128 0x1f
 2001 01cf 2E       		.uleb128 0x2e
 2002 01d0 01       		.byte	0x1
 2003 01d1 3F       		.uleb128 0x3f
 2004 01d2 19       		.uleb128 0x19
 2005 01d3 03       		.uleb128 0x3
 2006 01d4 0E       		.uleb128 0xe
 2007 01d5 3A       		.uleb128 0x3a
 2008 01d6 0B       		.uleb128 0xb
 2009 01d7 3B       		.uleb128 0x3b
 2010 01d8 0B       		.uleb128 0xb
 2011 01d9 27       		.uleb128 0x27
 2012 01da 19       		.uleb128 0x19
 2013 01db 3C       		.uleb128 0x3c
 2014 01dc 19       		.uleb128 0x19
 2015 01dd 01       		.uleb128 0x1
 2016 01de 13       		.uleb128 0x13
 2017 01df 00       		.byte	0
 2018 01e0 00       		.byte	0
 2019 01e1 20       		.uleb128 0x20
 2020 01e2 05       		.uleb128 0x5
 2021 01e3 00       		.byte	0
 2022 01e4 49       		.uleb128 0x49
 2023 01e5 13       		.uleb128 0x13
 2024 01e6 00       		.byte	0
 2025 01e7 00       		.byte	0
 2026 01e8 21       		.uleb128 0x21
 2027 01e9 2E       		.uleb128 0x2e
 2028 01ea 01       		.byte	0x1
 2029 01eb 3F       		.uleb128 0x3f
 2030 01ec 19       		.uleb128 0x19
 2031 01ed 03       		.uleb128 0x3
 2032 01ee 0E       		.uleb128 0xe
 2033 01ef 3A       		.uleb128 0x3a
ARM GAS  C:\temp\ccUyuQab.s 			page 53


 2034 01f0 0B       		.uleb128 0xb
 2035 01f1 3B       		.uleb128 0x3b
 2036 01f2 0B       		.uleb128 0xb
 2037 01f3 27       		.uleb128 0x27
 2038 01f4 19       		.uleb128 0x19
 2039 01f5 49       		.uleb128 0x49
 2040 01f6 13       		.uleb128 0x13
 2041 01f7 3C       		.uleb128 0x3c
 2042 01f8 19       		.uleb128 0x19
 2043 01f9 01       		.uleb128 0x1
 2044 01fa 13       		.uleb128 0x13
 2045 01fb 00       		.byte	0
 2046 01fc 00       		.byte	0
 2047 01fd 22       		.uleb128 0x22
 2048 01fe 2E       		.uleb128 0x2e
 2049 01ff 01       		.byte	0x1
 2050 0200 3F       		.uleb128 0x3f
 2051 0201 19       		.uleb128 0x19
 2052 0202 03       		.uleb128 0x3
 2053 0203 0E       		.uleb128 0xe
 2054 0204 3A       		.uleb128 0x3a
 2055 0205 0B       		.uleb128 0xb
 2056 0206 3B       		.uleb128 0x3b
 2057 0207 0B       		.uleb128 0xb
 2058 0208 27       		.uleb128 0x27
 2059 0209 19       		.uleb128 0x19
 2060 020a 3C       		.uleb128 0x3c
 2061 020b 19       		.uleb128 0x19
 2062 020c 00       		.byte	0
 2063 020d 00       		.byte	0
 2064 020e 00       		.byte	0
 2065              		.section	.debug_loc,"",%progbits
 2066              	.Ldebug_loc0:
 2067              	.LLST0:
 2068 0000 6E000000 		.4byte	.LVL5
 2069 0004 D2000000 		.4byte	.LVL13
 2070 0008 0100     		.2byte	0x1
 2071 000a 54       		.byte	0x54
 2072 000b D2000000 		.4byte	.LVL13
 2073 000f D8000000 		.4byte	.LVL14
 2074 0013 0300     		.2byte	0x3
 2075 0015 74       		.byte	0x74
 2076 0016 7F       		.sleb128 -1
 2077 0017 9F       		.byte	0x9f
 2078 0018 D8000000 		.4byte	.LVL14
 2079 001c E0000000 		.4byte	.LVL15
 2080 0020 0100     		.2byte	0x1
 2081 0022 54       		.byte	0x54
 2082 0023 00000000 		.4byte	0
 2083 0027 00000000 		.4byte	0
 2084              	.LLST1:
 2085 002b 64000000 		.4byte	.LVL2
 2086 002f 66000000 		.4byte	.LVL3
 2087 0033 0100     		.2byte	0x1
 2088 0035 51       		.byte	0x51
 2089 0036 66000000 		.4byte	.LVL3
 2090 003a 6E000000 		.4byte	.LVL5
ARM GAS  C:\temp\ccUyuQab.s 			page 54


 2091 003e 0100     		.2byte	0x1
 2092 0040 53       		.byte	0x53
 2093 0041 80000000 		.4byte	.LVL6
 2094 0045 8A000000 		.4byte	.LVL8
 2095 0049 0100     		.2byte	0x1
 2096 004b 52       		.byte	0x52
 2097 004c 8A000000 		.4byte	.LVL8
 2098 0050 96000000 		.4byte	.LVL9
 2099 0054 0200     		.2byte	0x2
 2100 0056 70       		.byte	0x70
 2101 0057 00       		.sleb128 0
 2102 0058 96000000 		.4byte	.LVL9
 2103 005c A8000000 		.4byte	.LVL10
 2104 0060 1800     		.2byte	0x18
 2105 0062 73       		.byte	0x73
 2106 0063 00       		.sleb128 0
 2107 0064 75       		.byte	0x75
 2108 0065 00       		.sleb128 0
 2109 0066 22       		.byte	0x22
 2110 0067 06       		.byte	0x6
 2111 0068 0A       		.byte	0xa
 2112 0069 0037     		.2byte	0x3700
 2113 006b 1A       		.byte	0x1a
 2114 006c 73       		.byte	0x73
 2115 006d 00       		.sleb128 0
 2116 006e 74       		.byte	0x74
 2117 006f 00       		.sleb128 0
 2118 0070 22       		.byte	0x22
 2119 0071 23       		.byte	0x23
 2120 0072 14       		.uleb128 0x14
 2121 0073 94       		.byte	0x94
 2122 0074 01       		.byte	0x1
 2123 0075 08       		.byte	0x8
 2124 0076 FF       		.byte	0xff
 2125 0077 1A       		.byte	0x1a
 2126 0078 21       		.byte	0x21
 2127 0079 9F       		.byte	0x9f
 2128 007a A8000000 		.4byte	.LVL10
 2129 007e D2000000 		.4byte	.LVL13
 2130 0082 1C00     		.2byte	0x1c
 2131 0084 75       		.byte	0x75
 2132 0085 00       		.sleb128 0
 2133 0086 03       		.byte	0x3
 2134 0087 00000000 		.4byte	.LANCHOR0
 2135 008b 22       		.byte	0x22
 2136 008c 06       		.byte	0x6
 2137 008d 0A       		.byte	0xa
 2138 008e 0037     		.2byte	0x3700
 2139 0090 1A       		.byte	0x1a
 2140 0091 74       		.byte	0x74
 2141 0092 00       		.sleb128 0
 2142 0093 03       		.byte	0x3
 2143 0094 14000000 		.4byte	.LANCHOR0+20
 2144 0098 22       		.byte	0x22
 2145 0099 94       		.byte	0x94
 2146 009a 01       		.byte	0x1
 2147 009b 08       		.byte	0x8
ARM GAS  C:\temp\ccUyuQab.s 			page 55


 2148 009c FF       		.byte	0xff
 2149 009d 1A       		.byte	0x1a
 2150 009e 21       		.byte	0x21
 2151 009f 9F       		.byte	0x9f
 2152 00a0 D2000000 		.4byte	.LVL13
 2153 00a4 E0000000 		.4byte	.LVL15
 2154 00a8 1C00     		.2byte	0x1c
 2155 00aa 75       		.byte	0x75
 2156 00ab 00       		.sleb128 0
 2157 00ac 03       		.byte	0x3
 2158 00ad 00000000 		.4byte	.LANCHOR0
 2159 00b1 22       		.byte	0x22
 2160 00b2 06       		.byte	0x6
 2161 00b3 0A       		.byte	0xa
 2162 00b4 0037     		.2byte	0x3700
 2163 00b6 1A       		.byte	0x1a
 2164 00b7 74       		.byte	0x74
 2165 00b8 00       		.sleb128 0
 2166 00b9 03       		.byte	0x3
 2167 00ba 13000000 		.4byte	.LANCHOR0+19
 2168 00be 22       		.byte	0x22
 2169 00bf 94       		.byte	0x94
 2170 00c0 01       		.byte	0x1
 2171 00c1 08       		.byte	0x8
 2172 00c2 FF       		.byte	0xff
 2173 00c3 1A       		.byte	0x1a
 2174 00c4 21       		.byte	0x21
 2175 00c5 9F       		.byte	0x9f
 2176 00c6 00000000 		.4byte	0
 2177 00ca 00000000 		.4byte	0
 2178              	.LLST2:
 2179 00ce B4000000 		.4byte	.LVL11
 2180 00d2 CE000000 		.4byte	.LVL12
 2181 00d6 0100     		.2byte	0x1
 2182 00d8 50       		.byte	0x50
 2183 00d9 00000000 		.4byte	0
 2184 00dd 00000000 		.4byte	0
 2185              	.LLST3:
 2186 00e1 00000000 		.4byte	.LVL19
 2187 00e5 06000000 		.4byte	.LVL20
 2188 00e9 0100     		.2byte	0x1
 2189 00eb 50       		.byte	0x50
 2190 00ec 06000000 		.4byte	.LVL20
 2191 00f0 20000000 		.4byte	.LVL25
 2192 00f4 0100     		.2byte	0x1
 2193 00f6 54       		.byte	0x54
 2194 00f7 20000000 		.4byte	.LVL25
 2195 00fb 28000000 		.4byte	.LFE6
 2196 00ff 0400     		.2byte	0x4
 2197 0101 F3       		.byte	0xf3
 2198 0102 01       		.uleb128 0x1
 2199 0103 50       		.byte	0x50
 2200 0104 9F       		.byte	0x9f
 2201 0105 00000000 		.4byte	0
 2202 0109 00000000 		.4byte	0
 2203              	.LLST4:
 2204 010d 00000000 		.4byte	.LVL19
ARM GAS  C:\temp\ccUyuQab.s 			page 56


 2205 0111 0A000000 		.4byte	.LVL21
 2206 0115 0200     		.2byte	0x2
 2207 0117 30       		.byte	0x30
 2208 0118 9F       		.byte	0x9f
 2209 0119 14000000 		.4byte	.LVL22
 2210 011d 1E000000 		.4byte	.LVL23
 2211 0121 0100     		.2byte	0x1
 2212 0123 50       		.byte	0x50
 2213 0124 1E000000 		.4byte	.LVL23
 2214 0128 20000000 		.4byte	.LVL24
 2215 012c 0200     		.2byte	0x2
 2216 012e 31       		.byte	0x31
 2217 012f 9F       		.byte	0x9f
 2218 0130 00000000 		.4byte	0
 2219 0134 00000000 		.4byte	0
 2220              	.LLST5:
 2221 0138 00000000 		.4byte	.LVL26
 2222 013c 0A000000 		.4byte	.LVL27
 2223 0140 0100     		.2byte	0x1
 2224 0142 50       		.byte	0x50
 2225 0143 0A000000 		.4byte	.LVL27
 2226 0147 18000000 		.4byte	.LFE7
 2227 014b 0400     		.2byte	0x4
 2228 014d F3       		.byte	0xf3
 2229 014e 01       		.uleb128 0x1
 2230 014f 50       		.byte	0x50
 2231 0150 9F       		.byte	0x9f
 2232 0151 00000000 		.4byte	0
 2233 0155 00000000 		.4byte	0
 2234              	.LLST6:
 2235 0159 00000000 		.4byte	.LVL29
 2236 015d 04000000 		.4byte	.LVL30
 2237 0161 0100     		.2byte	0x1
 2238 0163 50       		.byte	0x50
 2239 0164 04000000 		.4byte	.LVL30
 2240 0168 10000000 		.4byte	.LFE8
 2241 016c 0400     		.2byte	0x4
 2242 016e F3       		.byte	0xf3
 2243 016f 01       		.uleb128 0x1
 2244 0170 50       		.byte	0x50
 2245 0171 9F       		.byte	0x9f
 2246 0172 00000000 		.4byte	0
 2247 0176 00000000 		.4byte	0
 2248              	.LLST7:
 2249 017a 00000000 		.4byte	.LVL31
 2250 017e 04000000 		.4byte	.LVL32
 2251 0182 0100     		.2byte	0x1
 2252 0184 50       		.byte	0x50
 2253 0185 04000000 		.4byte	.LVL32
 2254 0189 18000000 		.4byte	.LFE9
 2255 018d 0400     		.2byte	0x4
 2256 018f F3       		.byte	0xf3
 2257 0190 01       		.uleb128 0x1
 2258 0191 50       		.byte	0x50
 2259 0192 9F       		.byte	0x9f
 2260 0193 00000000 		.4byte	0
 2261 0197 00000000 		.4byte	0
ARM GAS  C:\temp\ccUyuQab.s 			page 57


 2262              	.LLST8:
 2263 019b 00000000 		.4byte	.LVL33
 2264 019f 04000000 		.4byte	.LVL34
 2265 01a3 0100     		.2byte	0x1
 2266 01a5 50       		.byte	0x50
 2267 01a6 04000000 		.4byte	.LVL34
 2268 01aa 18000000 		.4byte	.LFE10
 2269 01ae 0400     		.2byte	0x4
 2270 01b0 F3       		.byte	0xf3
 2271 01b1 01       		.uleb128 0x1
 2272 01b2 50       		.byte	0x50
 2273 01b3 9F       		.byte	0x9f
 2274 01b4 00000000 		.4byte	0
 2275 01b8 00000000 		.4byte	0
 2276              	.LLST9:
 2277 01bc 00000000 		.4byte	.LVL35
 2278 01c0 04000000 		.4byte	.LVL36
 2279 01c4 0100     		.2byte	0x1
 2280 01c6 50       		.byte	0x50
 2281 01c7 04000000 		.4byte	.LVL36
 2282 01cb 10000000 		.4byte	.LFE11
 2283 01cf 0400     		.2byte	0x4
 2284 01d1 F3       		.byte	0xf3
 2285 01d2 01       		.uleb128 0x1
 2286 01d3 50       		.byte	0x50
 2287 01d4 9F       		.byte	0x9f
 2288 01d5 00000000 		.4byte	0
 2289 01d9 00000000 		.4byte	0
 2290              	.LLST10:
 2291 01dd 00000000 		.4byte	.LVL37
 2292 01e1 04000000 		.4byte	.LVL38
 2293 01e5 0100     		.2byte	0x1
 2294 01e7 50       		.byte	0x50
 2295 01e8 04000000 		.4byte	.LVL38
 2296 01ec 10000000 		.4byte	.LFE12
 2297 01f0 0400     		.2byte	0x4
 2298 01f2 F3       		.byte	0xf3
 2299 01f3 01       		.uleb128 0x1
 2300 01f4 50       		.byte	0x50
 2301 01f5 9F       		.byte	0x9f
 2302 01f6 00000000 		.4byte	0
 2303 01fa 00000000 		.4byte	0
 2304              	.LLST11:
 2305 01fe 00000000 		.4byte	.LVL39
 2306 0202 04000000 		.4byte	.LVL40
 2307 0206 0100     		.2byte	0x1
 2308 0208 50       		.byte	0x50
 2309 0209 04000000 		.4byte	.LVL40
 2310 020d 0C000000 		.4byte	.LFE13
 2311 0211 0400     		.2byte	0x4
 2312 0213 F3       		.byte	0xf3
 2313 0214 01       		.uleb128 0x1
 2314 0215 50       		.byte	0x50
 2315 0216 9F       		.byte	0x9f
 2316 0217 00000000 		.4byte	0
 2317 021b 00000000 		.4byte	0
 2318              	.LLST12:
ARM GAS  C:\temp\ccUyuQab.s 			page 58


 2319 021f 00000000 		.4byte	.LVL41
 2320 0223 04000000 		.4byte	.LVL42
 2321 0227 0100     		.2byte	0x1
 2322 0229 50       		.byte	0x50
 2323 022a 04000000 		.4byte	.LVL42
 2324 022e 0C000000 		.4byte	.LFE14
 2325 0232 0400     		.2byte	0x4
 2326 0234 F3       		.byte	0xf3
 2327 0235 01       		.uleb128 0x1
 2328 0236 50       		.byte	0x50
 2329 0237 9F       		.byte	0x9f
 2330 0238 00000000 		.4byte	0
 2331 023c 00000000 		.4byte	0
 2332              	.LLST13:
 2333 0240 00000000 		.4byte	.LVL43
 2334 0244 0C000000 		.4byte	.LVL44
 2335 0248 0100     		.2byte	0x1
 2336 024a 50       		.byte	0x50
 2337 024b 0C000000 		.4byte	.LVL44
 2338 024f 40000000 		.4byte	.LFE15
 2339 0253 0400     		.2byte	0x4
 2340 0255 F3       		.byte	0xf3
 2341 0256 01       		.uleb128 0x1
 2342 0257 50       		.byte	0x50
 2343 0258 9F       		.byte	0x9f
 2344 0259 00000000 		.4byte	0
 2345 025d 00000000 		.4byte	0
 2346              	.LLST14:
 2347 0261 00000000 		.4byte	.LVL43
 2348 0265 0E000000 		.4byte	.LVL45
 2349 0269 0100     		.2byte	0x1
 2350 026b 51       		.byte	0x51
 2351 026c 0E000000 		.4byte	.LVL45
 2352 0270 14000000 		.4byte	.LVL46
 2353 0274 0400     		.2byte	0x4
 2354 0276 F3       		.byte	0xf3
 2355 0277 01       		.uleb128 0x1
 2356 0278 51       		.byte	0x51
 2357 0279 9F       		.byte	0x9f
 2358 027a 14000000 		.4byte	.LVL46
 2359 027e 2A000000 		.4byte	.LVL47
 2360 0282 0100     		.2byte	0x1
 2361 0284 51       		.byte	0x51
 2362 0285 00000000 		.4byte	0
 2363 0289 00000000 		.4byte	0
 2364              	.LLST15:
 2365 028d 2A000000 		.4byte	.LVL47
 2366 0291 2F000000 		.4byte	.LVL48-1
 2367 0295 0900     		.2byte	0x9
 2368 0297 74       		.byte	0x74
 2369 0298 00       		.sleb128 0
 2370 0299 73       		.byte	0x73
 2371 029a 00       		.sleb128 0
 2372 029b 22       		.byte	0x22
 2373 029c 71       		.byte	0x71
 2374 029d 00       		.sleb128 0
 2375 029e 1B       		.byte	0x1b
ARM GAS  C:\temp\ccUyuQab.s 			page 59


 2376 029f 9F       		.byte	0x9f
 2377 02a0 00000000 		.4byte	0
 2378 02a4 00000000 		.4byte	0
 2379              	.LLST16:
 2380 02a8 00000000 		.4byte	.LVL49
 2381 02ac 0E000000 		.4byte	.LVL51
 2382 02b0 0100     		.2byte	0x1
 2383 02b2 50       		.byte	0x50
 2384 02b3 0E000000 		.4byte	.LVL51
 2385 02b7 34000000 		.4byte	.LFE16
 2386 02bb 0400     		.2byte	0x4
 2387 02bd F3       		.byte	0xf3
 2388 02be 01       		.uleb128 0x1
 2389 02bf 50       		.byte	0x50
 2390 02c0 9F       		.byte	0x9f
 2391 02c1 00000000 		.4byte	0
 2392 02c5 00000000 		.4byte	0
 2393              	.LLST17:
 2394 02c9 00000000 		.4byte	.LVL49
 2395 02cd 0A000000 		.4byte	.LVL50
 2396 02d1 0100     		.2byte	0x1
 2397 02d3 51       		.byte	0x51
 2398 02d4 0A000000 		.4byte	.LVL50
 2399 02d8 18000000 		.4byte	.LVL53
 2400 02dc 0100     		.2byte	0x1
 2401 02de 51       		.byte	0x51
 2402 02df 18000000 		.4byte	.LVL53
 2403 02e3 1B000000 		.4byte	.LVL54-1
 2404 02e7 0100     		.2byte	0x1
 2405 02e9 50       		.byte	0x50
 2406 02ea 00000000 		.4byte	0
 2407 02ee 00000000 		.4byte	0
 2408              	.LLST18:
 2409 02f2 10000000 		.4byte	.LVL52
 2410 02f6 18000000 		.4byte	.LVL53
 2411 02fa 1A00     		.2byte	0x1a
 2412 02fc 71       		.byte	0x71
 2413 02fd 00       		.sleb128 0
 2414 02fe F7       		.byte	0xf7
 2415 02ff 41       		.uleb128 0x41
 2416 0300 F7       		.byte	0xf7
 2417 0301 25       		.uleb128 0x25
 2418 0302 0C       		.byte	0xc
 2419 0303 80969800 		.4byte	0x989680
 2420 0307 F7       		.byte	0xf7
 2421 0308 25       		.uleb128 0x25
 2422 0309 1E       		.byte	0x1e
 2423 030a F7       		.byte	0xf7
 2424 030b 2C       		.uleb128 0x2c
 2425 030c 74       		.byte	0x74
 2426 030d 00       		.sleb128 0
 2427 030e F7       		.byte	0xf7
 2428 030f 33       		.uleb128 0x33
 2429 0310 F7       		.byte	0xf7
 2430 0311 2C       		.uleb128 0x2c
 2431 0312 1B       		.byte	0x1b
 2432 0313 F7       		.byte	0xf7
ARM GAS  C:\temp\ccUyuQab.s 			page 60


 2433 0314 25       		.uleb128 0x25
 2434 0315 9F       		.byte	0x9f
 2435 0316 18000000 		.4byte	.LVL53
 2436 031a 1B000000 		.4byte	.LVL54-1
 2437 031e 1A00     		.2byte	0x1a
 2438 0320 70       		.byte	0x70
 2439 0321 00       		.sleb128 0
 2440 0322 F7       		.byte	0xf7
 2441 0323 41       		.uleb128 0x41
 2442 0324 F7       		.byte	0xf7
 2443 0325 25       		.uleb128 0x25
 2444 0326 0C       		.byte	0xc
 2445 0327 80969800 		.4byte	0x989680
 2446 032b F7       		.byte	0xf7
 2447 032c 25       		.uleb128 0x25
 2448 032d 1E       		.byte	0x1e
 2449 032e F7       		.byte	0xf7
 2450 032f 2C       		.uleb128 0x2c
 2451 0330 74       		.byte	0x74
 2452 0331 00       		.sleb128 0
 2453 0332 F7       		.byte	0xf7
 2454 0333 33       		.uleb128 0x33
 2455 0334 F7       		.byte	0xf7
 2456 0335 2C       		.uleb128 0x2c
 2457 0336 1B       		.byte	0x1b
 2458 0337 F7       		.byte	0xf7
 2459 0338 25       		.uleb128 0x25
 2460 0339 9F       		.byte	0x9f
 2461 033a 00000000 		.4byte	0
 2462 033e 00000000 		.4byte	0
 2463              	.LLST19:
 2464 0342 00000000 		.4byte	.LVL56
 2465 0346 0A000000 		.4byte	.LVL57
 2466 034a 0100     		.2byte	0x1
 2467 034c 50       		.byte	0x50
 2468 034d 0A000000 		.4byte	.LVL57
 2469 0351 3C000000 		.4byte	.LFE17
 2470 0355 0400     		.2byte	0x4
 2471 0357 F3       		.byte	0xf3
 2472 0358 01       		.uleb128 0x1
 2473 0359 50       		.byte	0x50
 2474 035a 9F       		.byte	0x9f
 2475 035b 00000000 		.4byte	0
 2476 035f 00000000 		.4byte	0
 2477              	.LLST20:
 2478 0363 00000000 		.4byte	.LVL56
 2479 0367 0C000000 		.4byte	.LVL58
 2480 036b 0100     		.2byte	0x1
 2481 036d 51       		.byte	0x51
 2482 036e 0C000000 		.4byte	.LVL58
 2483 0372 15000000 		.4byte	.LVL60-1
 2484 0376 0100     		.2byte	0x1
 2485 0378 51       		.byte	0x51
 2486 0379 00000000 		.4byte	0
 2487 037d 00000000 		.4byte	0
 2488              	.LLST21:
 2489 0381 10000000 		.4byte	.LVL59
ARM GAS  C:\temp\ccUyuQab.s 			page 61


 2490 0385 15000000 		.4byte	.LVL60-1
 2491 0389 1600     		.2byte	0x16
 2492 038b 71       		.byte	0x71
 2493 038c 00       		.sleb128 0
 2494 038d F7       		.byte	0xf7
 2495 038e 41       		.uleb128 0x41
 2496 038f F7       		.byte	0xf7
 2497 0390 3A       		.uleb128 0x3a
 2498 0391 F4       		.byte	0xf4
 2499 0392 3A       		.uleb128 0x3a
 2500 0393 04       		.byte	0x4
 2501 0394 00002041 		.4byte	0x41200000
 2502 0398 1E       		.byte	0x1e
 2503 0399 75       		.byte	0x75
 2504 039a 00       		.sleb128 0
 2505 039b F7       		.byte	0xf7
 2506 039c 33       		.uleb128 0x33
 2507 039d F7       		.byte	0xf7
 2508 039e 3A       		.uleb128 0x3a
 2509 039f 1B       		.byte	0x1b
 2510 03a0 9F       		.byte	0x9f
 2511 03a1 00000000 		.4byte	0
 2512 03a5 00000000 		.4byte	0
 2513              		.section	.debug_aranges,"",%progbits
 2514 0000 A4000000 		.4byte	0xa4
 2515 0004 0200     		.2byte	0x2
 2516 0006 00000000 		.4byte	.Ldebug_info0
 2517 000a 04       		.byte	0x4
 2518 000b 00       		.byte	0
 2519 000c 0000     		.2byte	0
 2520 000e 0000     		.2byte	0
 2521 0010 00000000 		.4byte	.LFB1
 2522 0014 50010000 		.4byte	.LFE1-.LFB1
 2523 0018 00000000 		.4byte	.LFB2
 2524 001c 20000000 		.4byte	.LFE2-.LFB2
 2525 0020 00000000 		.4byte	.LFB0
 2526 0024 1C000000 		.4byte	.LFE0-.LFB0
 2527 0028 00000000 		.4byte	.LFB3
 2528 002c 10000000 		.4byte	.LFE3-.LFB3
 2529 0030 00000000 		.4byte	.LFB4
 2530 0034 14000000 		.4byte	.LFE4-.LFB4
 2531 0038 00000000 		.4byte	.LFB5
 2532 003c 14000000 		.4byte	.LFE5-.LFB5
 2533 0040 00000000 		.4byte	.LFB6
 2534 0044 28000000 		.4byte	.LFE6-.LFB6
 2535 0048 00000000 		.4byte	.LFB7
 2536 004c 18000000 		.4byte	.LFE7-.LFB7
 2537 0050 00000000 		.4byte	.LFB8
 2538 0054 10000000 		.4byte	.LFE8-.LFB8
 2539 0058 00000000 		.4byte	.LFB9
 2540 005c 18000000 		.4byte	.LFE9-.LFB9
 2541 0060 00000000 		.4byte	.LFB10
 2542 0064 18000000 		.4byte	.LFE10-.LFB10
 2543 0068 00000000 		.4byte	.LFB11
 2544 006c 10000000 		.4byte	.LFE11-.LFB11
 2545 0070 00000000 		.4byte	.LFB12
 2546 0074 10000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\temp\ccUyuQab.s 			page 62


 2547 0078 00000000 		.4byte	.LFB13
 2548 007c 0C000000 		.4byte	.LFE13-.LFB13
 2549 0080 00000000 		.4byte	.LFB14
 2550 0084 0C000000 		.4byte	.LFE14-.LFB14
 2551 0088 00000000 		.4byte	.LFB15
 2552 008c 40000000 		.4byte	.LFE15-.LFB15
 2553 0090 00000000 		.4byte	.LFB16
 2554 0094 34000000 		.4byte	.LFE16-.LFB16
 2555 0098 00000000 		.4byte	.LFB17
 2556 009c 3C000000 		.4byte	.LFE17-.LFB17
 2557 00a0 00000000 		.4byte	0
 2558 00a4 00000000 		.4byte	0
 2559              		.section	.debug_ranges,"",%progbits
 2560              	.Ldebug_ranges0:
 2561 0000 00000000 		.4byte	.LFB1
 2562 0004 50010000 		.4byte	.LFE1
 2563 0008 00000000 		.4byte	.LFB2
 2564 000c 20000000 		.4byte	.LFE2
 2565 0010 00000000 		.4byte	.LFB0
 2566 0014 1C000000 		.4byte	.LFE0
 2567 0018 00000000 		.4byte	.LFB3
 2568 001c 10000000 		.4byte	.LFE3
 2569 0020 00000000 		.4byte	.LFB4
 2570 0024 14000000 		.4byte	.LFE4
 2571 0028 00000000 		.4byte	.LFB5
 2572 002c 14000000 		.4byte	.LFE5
 2573 0030 00000000 		.4byte	.LFB6
 2574 0034 28000000 		.4byte	.LFE6
 2575 0038 00000000 		.4byte	.LFB7
 2576 003c 18000000 		.4byte	.LFE7
 2577 0040 00000000 		.4byte	.LFB8
 2578 0044 10000000 		.4byte	.LFE8
 2579 0048 00000000 		.4byte	.LFB9
 2580 004c 18000000 		.4byte	.LFE9
 2581 0050 00000000 		.4byte	.LFB10
 2582 0054 18000000 		.4byte	.LFE10
 2583 0058 00000000 		.4byte	.LFB11
 2584 005c 10000000 		.4byte	.LFE11
 2585 0060 00000000 		.4byte	.LFB12
 2586 0064 10000000 		.4byte	.LFE12
 2587 0068 00000000 		.4byte	.LFB13
 2588 006c 0C000000 		.4byte	.LFE13
 2589 0070 00000000 		.4byte	.LFB14
 2590 0074 0C000000 		.4byte	.LFE14
 2591 0078 00000000 		.4byte	.LFB15
 2592 007c 40000000 		.4byte	.LFE15
 2593 0080 00000000 		.4byte	.LFB16
 2594 0084 34000000 		.4byte	.LFE16
 2595 0088 00000000 		.4byte	.LFB17
 2596 008c 3C000000 		.4byte	.LFE17
 2597 0090 00000000 		.4byte	0
 2598 0094 00000000 		.4byte	0
 2599              		.section	.debug_line,"",%progbits
 2600              	.Ldebug_line0:
 2601 0000 BF020000 		.section	.debug_str,"MS",%progbits,1
 2601      02005700 
 2601      00000201 
ARM GAS  C:\temp\ccUyuQab.s 			page 63


 2601      FB0E0D00 
 2601      01010101 
 2602              	.LASF58:
 2603 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2603      5341525F 
 2603      5365715F 
 2603      315F6F66 
 2603      66736574 
 2604              	.LASF11:
 2605 0015 75696E74 		.ascii	"uint16\000"
 2605      313600
 2606              	.LASF60:
 2607 001c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2607      4320342E 
 2607      392E3320 
 2607      32303135 
 2607      30333033 
 2608 004f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2608      20726576 
 2608      6973696F 
 2608      6E203232 
 2608      31323230 
 2609 0082 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2609      66756E63 
 2609      74696F6E 
 2609      2D736563 
 2609      74696F6E 
 2610              	.LASF26:
 2611 00aa 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2611      5341525F 
 2611      5365715F 
 2611      315F496E 
 2611      697400
 2612              	.LASF48:
 2613 00bd 61646347 		.ascii	"adcGain\000"
 2613      61696E00 
 2614              	.LASF24:
 2615 00c5 636F756E 		.ascii	"counts\000"
 2615      747300
 2616              	.LASF29:
 2617 00cc 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2617      5341525F 
 2617      5365715F 
 2617      315F5374 
 2617      61727443 
 2618              	.LASF44:
 2619 00e7 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2619      5341525F 
 2619      5365715F 
 2619      315F5365 
 2619      74536174 
 2620              	.LASF27:
 2621 0100 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2621      5341525F 
 2621      5365715F 
 2621      315F5374 
 2621      61727400 
ARM GAS  C:\temp\ccUyuQab.s 			page 64


 2622              	.LASF0:
 2623 0114 6C6F6E67 		.ascii	"long long unsigned int\000"
 2623      206C6F6E 
 2623      6720756E 
 2623      7369676E 
 2623      65642069 
 2624              	.LASF63:
 2625 012b 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2625      5341525F 
 2625      5365715F 
 2625      315F456E 
 2625      61626C65 
 2626              	.LASF25:
 2627 0140 4144435F 		.ascii	"ADC_SAR_Seq_1_InputsPlacement\000"
 2627      5341525F 
 2627      5365715F 
 2627      315F496E 
 2627      70757473 
 2628              	.LASF33:
 2629 015e 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2629      5341525F 
 2629      5365715F 
 2629      315F4765 
 2629      74526573 
 2630              	.LASF1:
 2631 0178 6C6F6E67 		.ascii	"long long int\000"
 2631      206C6F6E 
 2631      6720696E 
 2631      7400
 2632              	.LASF4:
 2633 0186 7369676E 		.ascii	"signed char\000"
 2633      65642063 
 2633      68617200 
 2634              	.LASF41:
 2635 0192 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2635      5341525F 
 2635      5365715F 
 2635      315F5365 
 2635      74486967 
 2636              	.LASF14:
 2637 01ad 696E7433 		.ascii	"int32\000"
 2637      3200
 2638              	.LASF52:
 2639 01b3 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2639      5341525F 
 2639      5365715F 
 2639      315F436F 
 2639      756E7473 
 2640              	.LASF7:
 2641 01d1 6C6F6E67 		.ascii	"long int\000"
 2641      20696E74 
 2641      00
 2642              	.LASF62:
 2643 01da 433A5C55 		.ascii	"C:\\Users\\BEAST\\Desktop\\GITHUB PSOC PLANTE\\PSoC"
 2643      73657273 
 2643      5C424541 
 2643      53545C44 
ARM GAS  C:\temp\ccUyuQab.s 			page 65


 2643      65736B74 
 2644 0208 5C506C61 		.ascii	"\\Plant_control2_0.cydsn\000"
 2644      6E745F63 
 2644      6F6E7472 
 2644      6F6C325F 
 2644      302E6379 
 2645              	.LASF10:
 2646 0220 75696E74 		.ascii	"uint8\000"
 2646      3800
 2647              	.LASF66:
 2648 0226 43794465 		.ascii	"CyDelayUs\000"
 2648      6C617955 
 2648      7300
 2649              	.LASF16:
 2650 0230 646F7562 		.ascii	"double\000"
 2650      6C6500
 2651              	.LASF12:
 2652 0237 75696E74 		.ascii	"uint32\000"
 2652      333200
 2653              	.LASF38:
 2654 023e 6D61736B 		.ascii	"mask\000"
 2654      00
 2655              	.LASF49:
 2656 0243 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2656      5341525F 
 2656      5365715F 
 2656      315F436F 
 2656      756E7473 
 2657              	.LASF34:
 2658 0261 7265744D 		.ascii	"retMode\000"
 2658      6F646500 
 2659              	.LASF57:
 2660 0269 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2660      5341525F 
 2660      5365715F 
 2660      315F696E 
 2660      69745661 
 2661              	.LASF9:
 2662 027f 756E7369 		.ascii	"unsigned int\000"
 2662      676E6564 
 2662      20696E74 
 2662      00
 2663              	.LASF53:
 2664 028c 75566F6C 		.ascii	"uVolts\000"
 2664      747300
 2665              	.LASF8:
 2666 0293 6C6F6E67 		.ascii	"long unsigned int\000"
 2666      20756E73 
 2666      69676E65 
 2666      6420696E 
 2666      7400
 2667              	.LASF55:
 2668 02a5 766F6C74 		.ascii	"volts\000"
 2668      7300
 2669              	.LASF23:
 2670 02ab 746D7052 		.ascii	"tmpRegVal\000"
 2670      65675661 
ARM GAS  C:\temp\ccUyuQab.s 			page 66


 2670      6C00
 2671              	.LASF6:
 2672 02b5 73686F72 		.ascii	"short unsigned int\000"
 2672      7420756E 
 2672      7369676E 
 2672      65642069 
 2672      6E7400
 2673              	.LASF65:
 2674 02c8 4379496E 		.ascii	"CyIntSetVector\000"
 2674      74536574 
 2674      56656374 
 2674      6F7200
 2675              	.LASF56:
 2676 02d7 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2676      5341525F 
 2676      5365715F 
 2676      315F6368 
 2676      616E6E65 
 2677              	.LASF51:
 2678 02f4 6D566F6C 		.ascii	"mVolts\000"
 2678      747300
 2679              	.LASF19:
 2680 02fb 72656733 		.ascii	"reg32\000"
 2680      3200
 2681              	.LASF61:
 2682 0301 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2682      6E657261 
 2682      7465645F 
 2682      536F7572 
 2682      63655C50 
 2683              	.LASF15:
 2684 032a 666C6F61 		.ascii	"float32\000"
 2684      74333200 
 2685              	.LASF21:
 2686 0332 73697A65 		.ascii	"sizetype\000"
 2686      74797065 
 2686      00
 2687              	.LASF40:
 2688 033b 6C6F774C 		.ascii	"lowLimit\000"
 2688      696D6974 
 2688      00
 2689              	.LASF32:
 2690 0344 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2690      5341525F 
 2690      5365715F 
 2690      315F4973 
 2690      456E6443 
 2691              	.LASF30:
 2692 0362 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2692      5341525F 
 2692      5365715F 
 2692      315F5374 
 2692      6F70436F 
 2693              	.LASF17:
 2694 037c 696E7436 		.ascii	"int64\000"
 2694      3400
 2695              	.LASF64:
ARM GAS  C:\temp\ccUyuQab.s 			page 67


 2696 0382 4379496E 		.ascii	"CyIntSetPriority\000"
 2696      74536574 
 2696      5072696F 
 2696      72697479 
 2696      00
 2697              	.LASF2:
 2698 0393 666C6F61 		.ascii	"float\000"
 2698      7400
 2699              	.LASF47:
 2700 0399 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2700      5341525F 
 2700      5365715F 
 2700      315F5365 
 2700      74476169 
 2701              	.LASF28:
 2702 03af 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2702      5341525F 
 2702      5365715F 
 2702      315F5374 
 2702      6F7000
 2703              	.LASF42:
 2704 03c2 68696768 		.ascii	"highLimit\000"
 2704      4C696D69 
 2704      7400
 2705              	.LASF5:
 2706 03cc 756E7369 		.ascii	"unsigned char\000"
 2706      676E6564 
 2706      20636861 
 2706      7200
 2707              	.LASF3:
 2708 03da 73686F72 		.ascii	"short int\000"
 2708      7420696E 
 2708      7400
 2709              	.LASF54:
 2710 03e4 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2710      5341525F 
 2710      5365715F 
 2710      315F436F 
 2710      756E7473 
 2711              	.LASF37:
 2712 0401 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2712      5341525F 
 2712      5365715F 
 2712      315F5365 
 2712      74436861 
 2713              	.LASF22:
 2714 041b 63684E75 		.ascii	"chNum\000"
 2714      6D00
 2715              	.LASF35:
 2716 0421 6368616E 		.ascii	"chan\000"
 2716      00
 2717              	.LASF18:
 2718 0426 63686172 		.ascii	"char\000"
 2718      00
 2719              	.LASF20:
 2720 042b 63796973 		.ascii	"cyisraddress\000"
 2720      72616464 
ARM GAS  C:\temp\ccUyuQab.s 			page 68


 2720      72657373 
 2720      00
 2721              	.LASF39:
 2722 0438 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2722      5341525F 
 2722      5365715F 
 2722      315F5365 
 2722      744C6F77 
 2723              	.LASF46:
 2724 0452 6F666673 		.ascii	"offset\000"
 2724      657400
 2725              	.LASF50:
 2726 0459 61646343 		.ascii	"adcCounts\000"
 2726      6F756E74 
 2726      7300
 2727              	.LASF59:
 2728 0463 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2728      5341525F 
 2728      5365715F 
 2728      315F636F 
 2728      756E7473 
 2729              	.LASF31:
 2730 0481 73746174 		.ascii	"status\000"
 2730      757300
 2731              	.LASF45:
 2732 0488 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2732      5341525F 
 2732      5365715F 
 2732      315F5365 
 2732      744F6666 
 2733              	.LASF13:
 2734 04a0 696E7431 		.ascii	"int16\000"
 2734      3600
 2735              	.LASF43:
 2736 04a6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2736      5341525F 
 2736      5365715F 
 2736      315F5365 
 2736      744C696D 
 2737              	.LASF36:
 2738 04c1 72657375 		.ascii	"result\000"
 2738      6C7400
 2739              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
