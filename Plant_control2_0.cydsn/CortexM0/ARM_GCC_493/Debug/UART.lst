ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_Init,"ax",%progbits
  18              		.align	2
  19              		.global	UART_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_Init, %function
  23              	UART_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART.c"
   1:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC4/UART.c **** * Version 2.50
   4:.\Generated_Source\PSoC4/UART.c **** *
   5:.\Generated_Source\PSoC4/UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/UART.c **** *
   8:.\Generated_Source\PSoC4/UART.c **** * Note:
   9:.\Generated_Source\PSoC4/UART.c **** *
  10:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART.c **** 
  17:.\Generated_Source\PSoC4/UART.c **** #include "UART.h"
  18:.\Generated_Source\PSoC4/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC4/UART.c ****     #include "UART_IntClock.h"
  20:.\Generated_Source\PSoC4/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC4/UART.c **** 
  22:.\Generated_Source\PSoC4/UART.c **** 
  23:.\Generated_Source\PSoC4/UART.c **** /***************************************
  24:.\Generated_Source\PSoC4/UART.c **** * Global data allocation
  25:.\Generated_Source\PSoC4/UART.c **** ***************************************/
  26:.\Generated_Source\PSoC4/UART.c **** 
  27:.\Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  28:.\Generated_Source\PSoC4/UART.c **** 
  29:.\Generated_Source\PSoC4/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_txBufferWrite = 0u;
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 2


  33:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:.\Generated_Source\PSoC4/UART.c **** 
  35:.\Generated_Source\PSoC4/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_errorStatus = 0u;
  37:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC4/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC4/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:.\Generated_Source\PSoC4/UART.c **** 
  48:.\Generated_Source\PSoC4/UART.c **** 
  49:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
  51:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
  52:.\Generated_Source\PSoC4/UART.c **** *
  53:.\Generated_Source\PSoC4/UART.c **** * Summary:
  54:.\Generated_Source\PSoC4/UART.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC4/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC4/UART.c **** *  UART_Init() function, and then calls the
  57:.\Generated_Source\PSoC4/UART.c **** *  UART_Enable() function.
  58:.\Generated_Source\PSoC4/UART.c **** *
  59:.\Generated_Source\PSoC4/UART.c **** * Parameters:
  60:.\Generated_Source\PSoC4/UART.c **** *  None.
  61:.\Generated_Source\PSoC4/UART.c **** *
  62:.\Generated_Source\PSoC4/UART.c **** * Return:
  63:.\Generated_Source\PSoC4/UART.c **** *  None.
  64:.\Generated_Source\PSoC4/UART.c **** *
  65:.\Generated_Source\PSoC4/UART.c **** * Global variables:
  66:.\Generated_Source\PSoC4/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC4/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC4/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:.\Generated_Source\PSoC4/UART.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC4/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:.\Generated_Source\PSoC4/UART.c **** *
  72:.\Generated_Source\PSoC4/UART.c **** * Reentrant:
  73:.\Generated_Source\PSoC4/UART.c **** *  No.
  74:.\Generated_Source\PSoC4/UART.c **** *
  75:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC4/UART.c **** void UART_Start(void) 
  77:.\Generated_Source\PSoC4/UART.c **** {
  78:.\Generated_Source\PSoC4/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC4/UART.c ****     if(UART_initVar == 0u)
  80:.\Generated_Source\PSoC4/UART.c ****     {
  81:.\Generated_Source\PSoC4/UART.c ****         UART_Init();
  82:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u;
  83:.\Generated_Source\PSoC4/UART.c ****     }
  84:.\Generated_Source\PSoC4/UART.c **** 
  85:.\Generated_Source\PSoC4/UART.c ****     UART_Enable();
  86:.\Generated_Source\PSoC4/UART.c **** }
  87:.\Generated_Source\PSoC4/UART.c **** 
  88:.\Generated_Source\PSoC4/UART.c **** 
  89:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 3


  90:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
  91:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
  92:.\Generated_Source\PSoC4/UART.c **** *
  93:.\Generated_Source\PSoC4/UART.c **** * Summary:
  94:.\Generated_Source\PSoC4/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC4/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:.\Generated_Source\PSoC4/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC4/UART.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC4/UART.c **** *
  99:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 100:.\Generated_Source\PSoC4/UART.c **** *  None.
 101:.\Generated_Source\PSoC4/UART.c **** *
 102:.\Generated_Source\PSoC4/UART.c **** * Return:
 103:.\Generated_Source\PSoC4/UART.c **** *  None.
 104:.\Generated_Source\PSoC4/UART.c **** *
 105:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC4/UART.c **** void UART_Init(void) 
 107:.\Generated_Source\PSoC4/UART.c **** {
  26              		.loc 1 107 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 108:.\Generated_Source\PSoC4/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:.\Generated_Source\PSoC4/UART.c **** 
 110:.\Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC4/UART.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC4/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
  32              		.loc 1 112 0
  33 0002 0020     		mov	r0, #0
  34 0004 1049     		ldr	r1, .L2
  35 0006 FFF7FEFF 		bl	CyIntSetVector
  36              	.LVL0:
 113:.\Generated_Source\PSoC4/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
  37              		.loc 1 113 0
  38 000a 0020     		mov	r0, #0
  39 000c 0321     		mov	r1, #3
  40 000e FFF7FEFF 		bl	CyIntSetPriority
  41              	.LVL1:
 114:.\Generated_Source\PSoC4/UART.c ****             UART_errorStatus = 0u;
  42              		.loc 1 114 0
  43 0012 0022     		mov	r2, #0
  44 0014 0D4B     		ldr	r3, .L2+4
  45 0016 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC4/UART.c **** 
 117:.\Generated_Source\PSoC4/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC4/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC4/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC4/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC4/UART.c **** 
 123:.\Generated_Source\PSoC4/UART.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  46              		.loc 1 124 0
  47 0018 7632     		add	r2, r2, #118
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 4


  48 001a 0D4B     		ldr	r3, .L2+8
  49 001c 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC4/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  50              		.loc 1 126 0
  51 001e 563A     		sub	r2, r2, #86
  52 0020 0C4B     		ldr	r3, .L2+12
  53 0022 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC4/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:.\Generated_Source\PSoC4/UART.c **** 
 129:.\Generated_Source\PSoC4/UART.c ****     #if(UART_TX_ENABLED)
 130:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC4/UART.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC4/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
  54              		.loc 1 132 0
  55 0024 0220     		mov	r0, #2
  56 0026 0C49     		ldr	r1, .L2+16
  57 0028 FFF7FEFF 		bl	CyIntSetVector
  58              	.LVL2:
 133:.\Generated_Source\PSoC4/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
  59              		.loc 1 133 0
  60 002c 0220     		mov	r0, #2
  61 002e 0321     		mov	r1, #3
  62 0030 FFF7FEFF 		bl	CyIntSetPriority
  63              	.LVL3:
 134:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC4/UART.c **** 
 136:.\Generated_Source\PSoC4/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  64              		.loc 1 138 0
  65 0034 0E22     		mov	r2, #14
  66 0036 094B     		ldr	r3, .L2+20
  67 0038 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  68              		.loc 1 139 0
  69 003a 8132     		add	r2, r2, #129
  70 003c 084B     		ldr	r3, .L2+24
  71 003e 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC4/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC4/UART.c ****         #else
 142:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC4/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC4/UART.c **** 
 146:.\Generated_Source\PSoC4/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC4/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
  72              		.loc 1 148 0
  73 0040 8D3A     		sub	r2, r2, #141
  74 0042 084B     		ldr	r3, .L2+28
  75 0044 1A70     		strb	r2, [r3]
 149:.\Generated_Source\PSoC4/UART.c ****         #else
 150:.\Generated_Source\PSoC4/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC4/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC4/UART.c **** 
 153:.\Generated_Source\PSoC4/UART.c ****     #endif /* End UART_TX_ENABLED */
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 5


 154:.\Generated_Source\PSoC4/UART.c **** 
 155:.\Generated_Source\PSoC4/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC4/UART.c ****         UART_WriteControlRegister( \
 157:.\Generated_Source\PSoC4/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC4/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC4/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC4/UART.c **** }
  76              		.loc 1 160 0
  77              		@ sp needed
  78 0046 08BD     		pop	{r3, pc}
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 0048 00000000 		.word	UART_RXISR
  83 004c 00000000 		.word	.LANCHOR0
  84 0050 83000F40 		.word	1074724995
  85 0054 80000F40 		.word	1074724992
  86 0058 00000000 		.word	UART_TXISR
  87 005c 22000F40 		.word	1074724898
  88 0060 32000F40 		.word	1074724914
  89 0064 81000F40 		.word	1074724993
  90              		.cfi_endproc
  91              	.LFE1:
  92              		.size	UART_Init, .-UART_Init
  93              		.section	.text.UART_Enable,"ax",%progbits
  94              		.align	2
  95              		.global	UART_Enable
  96              		.code	16
  97              		.thumb_func
  98              		.type	UART_Enable, %function
  99              	UART_Enable:
 100              	.LFB2:
 161:.\Generated_Source\PSoC4/UART.c **** 
 162:.\Generated_Source\PSoC4/UART.c **** 
 163:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
 165:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/UART.c **** *
 167:.\Generated_Source\PSoC4/UART.c **** * Summary:
 168:.\Generated_Source\PSoC4/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC4/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:.\Generated_Source\PSoC4/UART.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC4/UART.c **** *  operation.
 172:.\Generated_Source\PSoC4/UART.c **** 
 173:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 174:.\Generated_Source\PSoC4/UART.c **** *  None.
 175:.\Generated_Source\PSoC4/UART.c **** *
 176:.\Generated_Source\PSoC4/UART.c **** * Return:
 177:.\Generated_Source\PSoC4/UART.c **** *  None.
 178:.\Generated_Source\PSoC4/UART.c **** *
 179:.\Generated_Source\PSoC4/UART.c **** * Global Variables:
 180:.\Generated_Source\PSoC4/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC4/UART.c **** *
 182:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC4/UART.c **** void UART_Enable(void) 
 184:.\Generated_Source\PSoC4/UART.c **** {
 101              		.loc 1 184 0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 6


 102              		.cfi_startproc
 103 0000 38B5     		push	{r3, r4, r5, lr}
 104              		.cfi_def_cfa_offset 16
 105              		.cfi_offset 3, -16
 106              		.cfi_offset 4, -12
 107              		.cfi_offset 5, -8
 108              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC4/UART.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC4/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 109              		.loc 1 186 0
 110 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 111              	.LVL4:
 112 0006 051C     		mov	r5, r0
 113              	.LVL5:
 187:.\Generated_Source\PSoC4/UART.c **** 
 188:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:.\Generated_Source\PSoC4/UART.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 114              		.loc 1 190 0
 115 0008 0F4A     		ldr	r2, .L5
 116 000a 1178     		ldrb	r1, [r2]
 117 000c 2023     		mov	r3, #32
 118 000e 0B43     		orr	r3, r1
 119 0010 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC4/UART.c **** 
 192:.\Generated_Source\PSoC4/UART.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 120              		.loc 1 193 0
 121 0012 0E4A     		ldr	r2, .L5+4
 122 0014 1378     		ldrb	r3, [r2]
 123 0016 1024     		mov	r4, #16
 124 0018 2343     		orr	r3, r4
 125 001a DBB2     		uxtb	r3, r3
 126 001c 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC4/UART.c **** 
 195:.\Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC4/UART.c ****             UART_EnableRxInt();
 127              		.loc 1 196 0
 128 001e 0020     		mov	r0, #0
 129 0020 FFF7FEFF 		bl	CyIntEnable
 130              	.LVL6:
 197:.\Generated_Source\PSoC4/UART.c **** 
 198:.\Generated_Source\PSoC4/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC4/UART.c ****                 UART_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:.\Generated_Source\PSoC4/UART.c **** 
 204:.\Generated_Source\PSoC4/UART.c ****     #if(UART_TX_ENABLED)
 205:.\Generated_Source\PSoC4/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC4/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC4/UART.c **** 
 210:.\Generated_Source\PSoC4/UART.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 131              		.loc 1 211 0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 7


 132 0024 0A4B     		ldr	r3, .L5+8
 133 0026 1A78     		ldrb	r2, [r3]
 134 0028 1443     		orr	r4, r2
 135 002a E4B2     		uxtb	r4, r4
 136 002c 1C70     		strb	r4, [r3]
 212:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC4/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 137              		.loc 1 213 0
 138 002e 0220     		mov	r0, #2
 139 0030 FFF7FEFF 		bl	CyIntClearPending
 140              	.LVL7:
 214:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 141              		.loc 1 214 0
 142 0034 0220     		mov	r0, #2
 143 0036 FFF7FEFF 		bl	CyIntEnable
 144              	.LVL8:
 215:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC4/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC4/UART.c **** 
 218:.\Generated_Source\PSoC4/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC4/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 145              		.loc 1 219 0
 146 003a FFF7FEFF 		bl	UART_IntClock_Start
 147              	.LVL9:
 220:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC4/UART.c **** 
 222:.\Generated_Source\PSoC4/UART.c ****     CyExitCriticalSection(enableInterrupts);
 148              		.loc 1 222 0
 149 003e 281C     		mov	r0, r5
 150 0040 FFF7FEFF 		bl	CyExitCriticalSection
 151              	.LVL10:
 223:.\Generated_Source\PSoC4/UART.c **** }
 152              		.loc 1 223 0
 153              		@ sp needed
 154              	.LVL11:
 155 0044 38BD     		pop	{r3, r4, r5, pc}
 156              	.L6:
 157 0046 C046     		.align	2
 158              	.L5:
 159 0048 93000F40 		.word	1074725011
 160 004c 90000F40 		.word	1074725008
 161 0050 91000F40 		.word	1074725009
 162              		.cfi_endproc
 163              	.LFE2:
 164              		.size	UART_Enable, .-UART_Enable
 165              		.section	.text.UART_Start,"ax",%progbits
 166              		.align	2
 167              		.global	UART_Start
 168              		.code	16
 169              		.thumb_func
 170              		.type	UART_Start, %function
 171              	UART_Start:
 172              	.LFB0:
  77:.\Generated_Source\PSoC4/UART.c ****     /* If not initialized then initialize all required hardware and software */
 173              		.loc 1 77 0
 174              		.cfi_startproc
 175 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 8


 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 3, -8
 178              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC4/UART.c ****     {
 179              		.loc 1 79 0
 180 0002 064B     		ldr	r3, .L9
 181 0004 5B78     		ldrb	r3, [r3, #1]
 182 0006 002B     		cmp	r3, #0
 183 0008 04D1     		bne	.L8
  81:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u;
 184              		.loc 1 81 0
 185 000a FFF7FEFF 		bl	UART_Init
 186              	.LVL12:
  82:.\Generated_Source\PSoC4/UART.c ****     }
 187              		.loc 1 82 0
 188 000e 0122     		mov	r2, #1
 189 0010 024B     		ldr	r3, .L9
 190 0012 5A70     		strb	r2, [r3, #1]
 191              	.L8:
  85:.\Generated_Source\PSoC4/UART.c **** }
 192              		.loc 1 85 0
 193 0014 FFF7FEFF 		bl	UART_Enable
 194              	.LVL13:
  86:.\Generated_Source\PSoC4/UART.c **** 
 195              		.loc 1 86 0
 196              		@ sp needed
 197 0018 08BD     		pop	{r3, pc}
 198              	.L10:
 199 001a C046     		.align	2
 200              	.L9:
 201 001c 00000000 		.word	.LANCHOR0
 202              		.cfi_endproc
 203              	.LFE0:
 204              		.size	UART_Start, .-UART_Start
 205              		.section	.text.UART_Stop,"ax",%progbits
 206              		.align	2
 207              		.global	UART_Stop
 208              		.code	16
 209              		.thumb_func
 210              		.type	UART_Stop, %function
 211              	UART_Stop:
 212              	.LFB3:
 224:.\Generated_Source\PSoC4/UART.c **** 
 225:.\Generated_Source\PSoC4/UART.c **** 
 226:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 228:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/UART.c **** *
 230:.\Generated_Source\PSoC4/UART.c **** * Summary:
 231:.\Generated_Source\PSoC4/UART.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC4/UART.c **** *
 233:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 234:.\Generated_Source\PSoC4/UART.c **** *  None.
 235:.\Generated_Source\PSoC4/UART.c **** *
 236:.\Generated_Source\PSoC4/UART.c **** * Return:
 237:.\Generated_Source\PSoC4/UART.c **** *  None.
 238:.\Generated_Source\PSoC4/UART.c **** *
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 9


 239:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC4/UART.c **** void UART_Stop(void) 
 241:.\Generated_Source\PSoC4/UART.c **** {
 213              		.loc 1 241 0
 214              		.cfi_startproc
 215 0000 38B5     		push	{r3, r4, r5, lr}
 216              		.cfi_def_cfa_offset 16
 217              		.cfi_offset 3, -16
 218              		.cfi_offset 4, -12
 219              		.cfi_offset 5, -8
 220              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC4/UART.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC4/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 221              		.loc 1 243 0
 222 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 223              	.LVL14:
 224 0006 041C     		mov	r4, r0
 225              	.LVL15:
 244:.\Generated_Source\PSoC4/UART.c **** 
 245:.\Generated_Source\PSoC4/UART.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:.\Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 226              		.loc 1 247 0
 227 0008 0C4A     		ldr	r2, .L12
 228 000a 1378     		ldrb	r3, [r2]
 229 000c 2021     		mov	r1, #32
 230 000e 8B43     		bic	r3, r1
 231 0010 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:.\Generated_Source\PSoC4/UART.c **** 
 250:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_ENABLED)
 251:.\Generated_Source\PSoC4/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:.\Generated_Source\PSoC4/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:.\Generated_Source\PSoC4/UART.c **** 
 256:.\Generated_Source\PSoC4/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC4/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 232              		.loc 1 257 0
 233 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 234              	.LVL16:
 258:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC4/UART.c **** 
 260:.\Generated_Source\PSoC4/UART.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 235              		.loc 1 262 0
 236 0016 0A4A     		ldr	r2, .L12+4
 237 0018 1378     		ldrb	r3, [r2]
 238 001a 1025     		mov	r5, #16
 239 001c AB43     		bic	r3, r5
 240 001e 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC4/UART.c **** 
 264:.\Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC4/UART.c ****             UART_DisableRxInt();
 241              		.loc 1 265 0
 242 0020 0020     		mov	r0, #0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 10


 243 0022 FFF7FEFF 		bl	CyIntDisable
 244              	.LVL17:
 266:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:.\Generated_Source\PSoC4/UART.c **** 
 269:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_ENABLED)
 270:.\Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 245              		.loc 1 270 0
 246 0026 074A     		ldr	r2, .L12+8
 247 0028 1378     		ldrb	r3, [r2]
 248 002a AB43     		bic	r3, r5
 249 002c 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC4/UART.c **** 
 272:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
 250              		.loc 1 273 0
 251 002e 0220     		mov	r0, #2
 252 0030 FFF7FEFF 		bl	CyIntDisable
 253              	.LVL18:
 274:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:.\Generated_Source\PSoC4/UART.c **** 
 277:.\Generated_Source\PSoC4/UART.c ****     CyExitCriticalSection(enableInterrupts);
 254              		.loc 1 277 0
 255 0034 201C     		mov	r0, r4
 256 0036 FFF7FEFF 		bl	CyExitCriticalSection
 257              	.LVL19:
 278:.\Generated_Source\PSoC4/UART.c **** }
 258              		.loc 1 278 0
 259              		@ sp needed
 260              	.LVL20:
 261 003a 38BD     		pop	{r3, r4, r5, pc}
 262              	.L13:
 263              		.align	2
 264              	.L12:
 265 003c 93000F40 		.word	1074725011
 266 0040 90000F40 		.word	1074725008
 267 0044 91000F40 		.word	1074725009
 268              		.cfi_endproc
 269              	.LFE3:
 270              		.size	UART_Stop, .-UART_Stop
 271              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 272              		.align	2
 273              		.global	UART_ReadControlRegister
 274              		.code	16
 275              		.thumb_func
 276              		.type	UART_ReadControlRegister, %function
 277              	UART_ReadControlRegister:
 278              	.LFB4:
 279:.\Generated_Source\PSoC4/UART.c **** 
 280:.\Generated_Source\PSoC4/UART.c **** 
 281:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_ReadControlRegister
 283:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 284:.\Generated_Source\PSoC4/UART.c **** *
 285:.\Generated_Source\PSoC4/UART.c **** * Summary:
 286:.\Generated_Source\PSoC4/UART.c **** *  Returns the current value of the control register.
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 11


 287:.\Generated_Source\PSoC4/UART.c **** *
 288:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART.c **** *  None.
 290:.\Generated_Source\PSoC4/UART.c **** *
 291:.\Generated_Source\PSoC4/UART.c **** * Return:
 292:.\Generated_Source\PSoC4/UART.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC4/UART.c **** *
 294:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC4/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC4/UART.c **** {
 279              		.loc 1 296 0
 280              		.cfi_startproc
 297:.\Generated_Source\PSoC4/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC4/UART.c ****         return(0u);
 299:.\Generated_Source\PSoC4/UART.c ****     #else
 300:.\Generated_Source\PSoC4/UART.c ****         return(UART_CONTROL_REG);
 301:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC4/UART.c **** }
 281              		.loc 1 302 0
 282 0000 0020     		mov	r0, #0
 283              		@ sp needed
 284 0002 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE4:
 287              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 288              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 289              		.align	2
 290              		.global	UART_WriteControlRegister
 291              		.code	16
 292              		.thumb_func
 293              		.type	UART_WriteControlRegister, %function
 294              	UART_WriteControlRegister:
 295              	.LFB5:
 303:.\Generated_Source\PSoC4/UART.c **** 
 304:.\Generated_Source\PSoC4/UART.c **** 
 305:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_WriteControlRegister
 307:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 308:.\Generated_Source\PSoC4/UART.c **** *
 309:.\Generated_Source\PSoC4/UART.c **** * Summary:
 310:.\Generated_Source\PSoC4/UART.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC4/UART.c **** *
 312:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 313:.\Generated_Source\PSoC4/UART.c **** *  control:  control register value
 314:.\Generated_Source\PSoC4/UART.c **** *
 315:.\Generated_Source\PSoC4/UART.c **** * Return:
 316:.\Generated_Source\PSoC4/UART.c **** *  None.
 317:.\Generated_Source\PSoC4/UART.c **** *
 318:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC4/UART.c **** {
 296              		.loc 1 320 0
 297              		.cfi_startproc
 298              	.LVL21:
 321:.\Generated_Source\PSoC4/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC4/UART.c ****         if(0u != control)
 323:.\Generated_Source\PSoC4/UART.c ****         {
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 12


 324:.\Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC4/UART.c ****         }
 326:.\Generated_Source\PSoC4/UART.c ****     #else
 327:.\Generated_Source\PSoC4/UART.c ****        UART_CONTROL_REG = control;
 328:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC4/UART.c **** }
 299              		.loc 1 329 0
 300              		@ sp needed
 301 0000 7047     		bx	lr
 302              		.cfi_endproc
 303              	.LFE5:
 304              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 305 0002 C046     		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 306              		.align	2
 307              		.global	UART_SetRxInterruptMode
 308              		.code	16
 309              		.thumb_func
 310              		.type	UART_SetRxInterruptMode, %function
 311              	UART_SetRxInterruptMode:
 312              	.LFB6:
 330:.\Generated_Source\PSoC4/UART.c **** 
 331:.\Generated_Source\PSoC4/UART.c **** 
 332:.\Generated_Source\PSoC4/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC4/UART.c ****     *
 337:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 338:.\Generated_Source\PSoC4/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC4/UART.c ****     *
 340:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 341:.\Generated_Source\PSoC4/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC4/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC4/UART.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC4/UART.c ****     *
 352:.\Generated_Source\PSoC4/UART.c ****     * Return:
 353:.\Generated_Source\PSoC4/UART.c ****     *  None.
 354:.\Generated_Source\PSoC4/UART.c ****     *
 355:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 356:.\Generated_Source\PSoC4/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC4/UART.c ****     *
 358:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC4/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC4/UART.c ****     {
 313              		.loc 1 360 0
 314              		.cfi_startproc
 315              	.LVL22:
 361:.\Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 316              		.loc 1 361 0
 317 0000 014B     		ldr	r3, .L17
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 13


 318 0002 1870     		strb	r0, [r3]
 362:.\Generated_Source\PSoC4/UART.c ****     }
 319              		.loc 1 362 0
 320              		@ sp needed
 321 0004 7047     		bx	lr
 322              	.L18:
 323 0006 C046     		.align	2
 324              	.L17:
 325 0008 80000F40 		.word	1074724992
 326              		.cfi_endproc
 327              	.LFE6:
 328              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 329              		.section	.text.UART_ReadRxData,"ax",%progbits
 330              		.align	2
 331              		.global	UART_ReadRxData
 332              		.code	16
 333              		.thumb_func
 334              		.type	UART_ReadRxData, %function
 335              	UART_ReadRxData:
 336              	.LFB7:
 363:.\Generated_Source\PSoC4/UART.c **** 
 364:.\Generated_Source\PSoC4/UART.c **** 
 365:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadRxData
 367:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC4/UART.c ****     *
 369:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 370:.\Generated_Source\PSoC4/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC4/UART.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC4/UART.c ****     *
 373:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 374:.\Generated_Source\PSoC4/UART.c ****     *  None.
 375:.\Generated_Source\PSoC4/UART.c ****     *
 376:.\Generated_Source\PSoC4/UART.c ****     * Return:
 377:.\Generated_Source\PSoC4/UART.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC4/UART.c ****     *
 379:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 380:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC4/UART.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC4/UART.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC4/UART.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC4/UART.c ****     *
 388:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 389:.\Generated_Source\PSoC4/UART.c ****     *  No.
 390:.\Generated_Source\PSoC4/UART.c ****     *
 391:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadRxData(void) 
 393:.\Generated_Source\PSoC4/UART.c ****     {
 337              		.loc 1 393 0
 338              		.cfi_startproc
 339 0000 10B5     		push	{r4, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 4, -8
 342              		.cfi_offset 14, -4
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 14


 394:.\Generated_Source\PSoC4/UART.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC4/UART.c **** 
 396:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC4/UART.c **** 
 398:.\Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC4/UART.c **** 
 401:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 343              		.loc 1 402 0
 344 0002 0020     		mov	r0, #0
 345 0004 FFF7FEFF 		bl	CyIntDisable
 346              	.LVL23:
 403:.\Generated_Source\PSoC4/UART.c **** 
 404:.\Generated_Source\PSoC4/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 347              		.loc 1 404 0
 348 0008 114A     		ldr	r2, .L25
 349 000a 9378     		ldrb	r3, [r2, #2]
 350 000c DBB2     		uxtb	r3, r3
 351              	.LVL24:
 405:.\Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 352              		.loc 1 405 0
 353 000e D178     		ldrb	r1, [r2, #3]
 354 0010 C9B2     		uxtb	r1, r1
 355              	.LVL25:
 406:.\Generated_Source\PSoC4/UART.c **** 
 407:.\Generated_Source\PSoC4/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 356              		.loc 1 407 0
 357 0012 1279     		ldrb	r2, [r2, #4]
 358 0014 002A     		cmp	r2, #0
 359 0016 01D1     		bne	.L20
 360              		.loc 1 407 0 is_stmt 0 discriminator 1
 361 0018 8B42     		cmp	r3, r1
 362 001a 10D0     		beq	.L21
 363              	.L20:
 408:.\Generated_Source\PSoC4/UART.c ****         {
 409:.\Generated_Source\PSoC4/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 364              		.loc 1 409 0 is_stmt 1
 365 001c 0D4A     		ldr	r2, .L25+4
 366 001e D45C     		ldrb	r4, [r2, r3]
 367 0020 E4B2     		uxtb	r4, r4
 368              	.LVL26:
 410:.\Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 369              		.loc 1 410 0
 370 0022 0133     		add	r3, r3, #1
 371              	.LVL27:
 372 0024 DBB2     		uxtb	r3, r3
 373              	.LVL28:
 411:.\Generated_Source\PSoC4/UART.c **** 
 412:.\Generated_Source\PSoC4/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 374              		.loc 1 412 0
 375 0026 FF2B     		cmp	r3, #255
 376 0028 00D1     		bne	.L22
 413:.\Generated_Source\PSoC4/UART.c ****             {
 414:.\Generated_Source\PSoC4/UART.c ****                 locRxBufferRead = 0u;
 377              		.loc 1 414 0
 378 002a 0023     		mov	r3, #0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 15


 379              	.LVL29:
 380              	.L22:
 415:.\Generated_Source\PSoC4/UART.c ****             }
 416:.\Generated_Source\PSoC4/UART.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC4/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 381              		.loc 1 417 0
 382 002c 084A     		ldr	r2, .L25
 383 002e 9370     		strb	r3, [r2, #2]
 418:.\Generated_Source\PSoC4/UART.c **** 
 419:.\Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 384              		.loc 1 419 0
 385 0030 1379     		ldrb	r3, [r2, #4]
 386              	.LVL30:
 387 0032 002B     		cmp	r3, #0
 388 0034 06D0     		beq	.L23
 420:.\Generated_Source\PSoC4/UART.c ****             {
 421:.\Generated_Source\PSoC4/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 389              		.loc 1 421 0
 390 0036 0022     		mov	r2, #0
 391 0038 054B     		ldr	r3, .L25
 392 003a 1A71     		strb	r2, [r3, #4]
 393              	.LVL31:
 394 003c 02E0     		b	.L23
 395              	.LVL32:
 396              	.L21:
 422:.\Generated_Source\PSoC4/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC4/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC4/UART.c ****                     #if( UART_HD_ENABLED )
 425:.\Generated_Source\PSoC4/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC4/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC4/UART.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC4/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC4/UART.c ****                             */
 430:.\Generated_Source\PSoC4/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC4/UART.c ****                         }
 432:.\Generated_Source\PSoC4/UART.c ****                     #else
 433:.\Generated_Source\PSoC4/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC4/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:.\Generated_Source\PSoC4/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC4/UART.c ****             }
 437:.\Generated_Source\PSoC4/UART.c ****         }
 438:.\Generated_Source\PSoC4/UART.c ****         else
 439:.\Generated_Source\PSoC4/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC4/UART.c ****             rxData = UART_RXDATA_REG;
 397              		.loc 1 440 0
 398 003e 064B     		ldr	r3, .L25+8
 399              	.LVL33:
 400 0040 1C78     		ldrb	r4, [r3]
 401 0042 E4B2     		uxtb	r4, r4
 402              	.LVL34:
 403              	.L23:
 441:.\Generated_Source\PSoC4/UART.c ****         }
 442:.\Generated_Source\PSoC4/UART.c **** 
 443:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 404              		.loc 1 443 0
 405 0044 0020     		mov	r0, #0
 406 0046 FFF7FEFF 		bl	CyIntEnable
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 16


 407              	.LVL35:
 444:.\Generated_Source\PSoC4/UART.c **** 
 445:.\Generated_Source\PSoC4/UART.c ****     #else
 446:.\Generated_Source\PSoC4/UART.c **** 
 447:.\Generated_Source\PSoC4/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC4/UART.c ****         rxData = UART_RXDATA_REG;
 449:.\Generated_Source\PSoC4/UART.c **** 
 450:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC4/UART.c **** 
 452:.\Generated_Source\PSoC4/UART.c ****         return(rxData);
 453:.\Generated_Source\PSoC4/UART.c ****     }
 408              		.loc 1 453 0
 409 004a 201C     		mov	r0, r4
 410              		@ sp needed
 411              	.LVL36:
 412 004c 10BD     		pop	{r4, pc}
 413              	.L26:
 414 004e C046     		.align	2
 415              	.L25:
 416 0050 00000000 		.word	.LANCHOR0
 417 0054 00000000 		.word	UART_rxBuffer
 418 0058 40000F40 		.word	1074724928
 419              		.cfi_endproc
 420              	.LFE7:
 421              		.size	UART_ReadRxData, .-UART_ReadRxData
 422              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 423              		.align	2
 424              		.global	UART_ReadRxStatus
 425              		.code	16
 426              		.thumb_func
 427              		.type	UART_ReadRxStatus, %function
 428              	UART_ReadRxStatus:
 429              	.LFB8:
 454:.\Generated_Source\PSoC4/UART.c **** 
 455:.\Generated_Source\PSoC4/UART.c **** 
 456:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadRxStatus
 458:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC4/UART.c ****     *
 460:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 461:.\Generated_Source\PSoC4/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC4/UART.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC4/UART.c ****     *
 464:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 465:.\Generated_Source\PSoC4/UART.c ****     *  None.
 466:.\Generated_Source\PSoC4/UART.c ****     *
 467:.\Generated_Source\PSoC4/UART.c ****     * Return:
 468:.\Generated_Source\PSoC4/UART.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC4/UART.c ****     *
 470:.\Generated_Source\PSoC4/UART.c ****     * Side Effect:
 471:.\Generated_Source\PSoC4/UART.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC4/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC4/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC4/UART.c ****     *  register read.
 475:.\Generated_Source\PSoC4/UART.c ****     *
 476:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 477:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 17


 478:.\Generated_Source\PSoC4/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC4/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC4/UART.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC4/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC4/UART.c ****     *   bits.
 483:.\Generated_Source\PSoC4/UART.c ****     *
 484:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC4/UART.c ****     {
 430              		.loc 1 486 0
 431              		.cfi_startproc
 487:.\Generated_Source\PSoC4/UART.c ****         uint8 status;
 488:.\Generated_Source\PSoC4/UART.c **** 
 489:.\Generated_Source\PSoC4/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 432              		.loc 1 489 0
 433 0000 064B     		ldr	r3, .L29
 434 0002 1878     		ldrb	r0, [r3]
 435 0004 7F23     		mov	r3, #127
 436 0006 1840     		and	r0, r3
 437              	.LVL37:
 490:.\Generated_Source\PSoC4/UART.c **** 
 491:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC4/UART.c ****         if(UART_rxBufferOverflow != 0u)
 438              		.loc 1 492 0
 439 0008 054B     		ldr	r3, .L29+4
 440 000a 5B79     		ldrb	r3, [r3, #5]
 441 000c 002B     		cmp	r3, #0
 442 000e 04D0     		beq	.L28
 493:.\Generated_Source\PSoC4/UART.c ****         {
 494:.\Generated_Source\PSoC4/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 443              		.loc 1 494 0
 444 0010 8023     		mov	r3, #128
 445 0012 1843     		orr	r0, r3
 446              	.LVL38:
 495:.\Generated_Source\PSoC4/UART.c ****             UART_rxBufferOverflow = 0u;
 447              		.loc 1 495 0
 448 0014 0022     		mov	r2, #0
 449 0016 024B     		ldr	r3, .L29+4
 450 0018 5A71     		strb	r2, [r3, #5]
 451              	.L28:
 496:.\Generated_Source\PSoC4/UART.c ****         }
 497:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC4/UART.c **** 
 499:.\Generated_Source\PSoC4/UART.c ****         return(status);
 500:.\Generated_Source\PSoC4/UART.c ****     }
 452              		.loc 1 500 0
 453              		@ sp needed
 454 001a 7047     		bx	lr
 455              	.L30:
 456              		.align	2
 457              	.L29:
 458 001c 60000F40 		.word	1074724960
 459 0020 00000000 		.word	.LANCHOR0
 460              		.cfi_endproc
 461              	.LFE8:
 462              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 463              		.section	.text.UART_GetChar,"ax",%progbits
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 18


 464              		.align	2
 465              		.global	UART_GetChar
 466              		.code	16
 467              		.thumb_func
 468              		.type	UART_GetChar, %function
 469              	UART_GetChar:
 470              	.LFB9:
 501:.\Generated_Source\PSoC4/UART.c **** 
 502:.\Generated_Source\PSoC4/UART.c **** 
 503:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetChar
 505:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC4/UART.c ****     *
 507:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 508:.\Generated_Source\PSoC4/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:.\Generated_Source\PSoC4/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC4/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC4/UART.c ****     *
 512:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 513:.\Generated_Source\PSoC4/UART.c ****     *  None.
 514:.\Generated_Source\PSoC4/UART.c ****     *
 515:.\Generated_Source\PSoC4/UART.c ****     * Return:
 516:.\Generated_Source\PSoC4/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC4/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC4/UART.c ****     *
 519:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 520:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC4/UART.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC4/UART.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC4/UART.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC4/UART.c ****     *
 528:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 529:.\Generated_Source\PSoC4/UART.c ****     *  No.
 530:.\Generated_Source\PSoC4/UART.c ****     *
 531:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_GetChar(void) 
 533:.\Generated_Source\PSoC4/UART.c ****     {
 471              		.loc 1 533 0
 472              		.cfi_startproc
 473 0000 10B5     		push	{r4, lr}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 4, -8
 476              		.cfi_offset 14, -4
 477              	.LVL39:
 534:.\Generated_Source\PSoC4/UART.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC4/UART.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC4/UART.c **** 
 537:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC4/UART.c **** 
 541:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 478              		.loc 1 542 0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 19


 479 0002 0020     		mov	r0, #0
 480 0004 FFF7FEFF 		bl	CyIntDisable
 481              	.LVL40:
 543:.\Generated_Source\PSoC4/UART.c **** 
 544:.\Generated_Source\PSoC4/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 482              		.loc 1 544 0
 483 0008 174A     		ldr	r2, .L39
 484 000a 9378     		ldrb	r3, [r2, #2]
 485 000c DBB2     		uxtb	r3, r3
 486              	.LVL41:
 545:.\Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 487              		.loc 1 545 0
 488 000e D178     		ldrb	r1, [r2, #3]
 489 0010 C9B2     		uxtb	r1, r1
 490              	.LVL42:
 546:.\Generated_Source\PSoC4/UART.c **** 
 547:.\Generated_Source\PSoC4/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 491              		.loc 1 547 0
 492 0012 1279     		ldrb	r2, [r2, #4]
 493 0014 002A     		cmp	r2, #0
 494 0016 01D1     		bne	.L32
 495              		.loc 1 547 0 is_stmt 0 discriminator 1
 496 0018 8B42     		cmp	r3, r1
 497 001a 10D0     		beq	.L33
 498              	.L32:
 548:.\Generated_Source\PSoC4/UART.c ****         {
 549:.\Generated_Source\PSoC4/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 499              		.loc 1 549 0 is_stmt 1
 500 001c 134A     		ldr	r2, .L39+4
 501 001e D45C     		ldrb	r4, [r2, r3]
 502 0020 E4B2     		uxtb	r4, r4
 503              	.LVL43:
 550:.\Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 504              		.loc 1 550 0
 505 0022 0133     		add	r3, r3, #1
 506              	.LVL44:
 507 0024 DBB2     		uxtb	r3, r3
 508              	.LVL45:
 551:.\Generated_Source\PSoC4/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 509              		.loc 1 551 0
 510 0026 FF2B     		cmp	r3, #255
 511 0028 00D1     		bne	.L34
 552:.\Generated_Source\PSoC4/UART.c ****             {
 553:.\Generated_Source\PSoC4/UART.c ****                 locRxBufferRead = 0u;
 512              		.loc 1 553 0
 513 002a 0023     		mov	r3, #0
 514              	.LVL46:
 515              	.L34:
 554:.\Generated_Source\PSoC4/UART.c ****             }
 555:.\Generated_Source\PSoC4/UART.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC4/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 516              		.loc 1 556 0
 517 002c 0E4A     		ldr	r2, .L39
 518 002e 9370     		strb	r3, [r2, #2]
 557:.\Generated_Source\PSoC4/UART.c **** 
 558:.\Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 519              		.loc 1 558 0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 20


 520 0030 1379     		ldrb	r3, [r2, #4]
 521              	.LVL47:
 522 0032 002B     		cmp	r3, #0
 523 0034 12D0     		beq	.L35
 559:.\Generated_Source\PSoC4/UART.c ****             {
 560:.\Generated_Source\PSoC4/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 524              		.loc 1 560 0
 525 0036 0022     		mov	r2, #0
 526 0038 0B4B     		ldr	r3, .L39
 527 003a 1A71     		strb	r2, [r3, #4]
 528              	.LVL48:
 529 003c 0EE0     		b	.L35
 530              	.LVL49:
 531              	.L33:
 561:.\Generated_Source\PSoC4/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC4/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC4/UART.c ****                     #if( UART_HD_ENABLED )
 564:.\Generated_Source\PSoC4/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC4/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC4/UART.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC4/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC4/UART.c ****                             */
 569:.\Generated_Source\PSoC4/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC4/UART.c ****                         }
 571:.\Generated_Source\PSoC4/UART.c ****                     #else
 572:.\Generated_Source\PSoC4/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC4/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:.\Generated_Source\PSoC4/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC4/UART.c ****             }
 576:.\Generated_Source\PSoC4/UART.c **** 
 577:.\Generated_Source\PSoC4/UART.c ****         }
 578:.\Generated_Source\PSoC4/UART.c ****         else
 579:.\Generated_Source\PSoC4/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 532              		.loc 1 579 0
 533 003e 0C4B     		ldr	r3, .L39+8
 534              	.LVL50:
 535 0040 1B78     		ldrb	r3, [r3]
 536 0042 DBB2     		uxtb	r3, r3
 537              	.LVL51:
 580:.\Generated_Source\PSoC4/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 538              		.loc 1 580 0
 539 0044 9A06     		lsl	r2, r3, #26
 540 0046 06D5     		bpl	.L37
 581:.\Generated_Source\PSoC4/UART.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC4/UART.c ****                 rxData = UART_RXDATA_REG;
 541              		.loc 1 582 0
 542 0048 0A4A     		ldr	r2, .L39+12
 543 004a 1478     		ldrb	r4, [r2]
 544 004c E4B2     		uxtb	r4, r4
 545              	.LVL52:
 583:.\Generated_Source\PSoC4/UART.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC4/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 546              		.loc 1 584 0
 547 004e 1E22     		mov	r2, #30
 548 0050 1A42     		tst	r2, r3
 549 0052 02D1     		bne	.L38
 550 0054 02E0     		b	.L35
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 21


 551              	.LVL53:
 552              	.L37:
 534:.\Generated_Source\PSoC4/UART.c ****         uint8 rxStatus;
 553              		.loc 1 534 0
 554 0056 0024     		mov	r4, #0
 555 0058 00E0     		b	.L35
 556              	.LVL54:
 557              	.L38:
 585:.\Generated_Source\PSoC4/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC4/UART.c ****                 {
 587:.\Generated_Source\PSoC4/UART.c ****                     rxData = 0u;
 558              		.loc 1 587 0
 559 005a 0024     		mov	r4, #0
 560              	.LVL55:
 561              	.L35:
 588:.\Generated_Source\PSoC4/UART.c ****                 }
 589:.\Generated_Source\PSoC4/UART.c ****             }
 590:.\Generated_Source\PSoC4/UART.c ****         }
 591:.\Generated_Source\PSoC4/UART.c **** 
 592:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 562              		.loc 1 592 0
 563 005c 0020     		mov	r0, #0
 564 005e FFF7FEFF 		bl	CyIntEnable
 565              	.LVL56:
 593:.\Generated_Source\PSoC4/UART.c **** 
 594:.\Generated_Source\PSoC4/UART.c ****     #else
 595:.\Generated_Source\PSoC4/UART.c **** 
 596:.\Generated_Source\PSoC4/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:.\Generated_Source\PSoC4/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC4/UART.c ****         {
 599:.\Generated_Source\PSoC4/UART.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC4/UART.c ****             rxData = UART_RXDATA_REG;
 601:.\Generated_Source\PSoC4/UART.c **** 
 602:.\Generated_Source\PSoC4/UART.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC4/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC4/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC4/UART.c ****             {
 606:.\Generated_Source\PSoC4/UART.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC4/UART.c ****             }
 608:.\Generated_Source\PSoC4/UART.c ****         }
 609:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC4/UART.c **** 
 611:.\Generated_Source\PSoC4/UART.c ****         return(rxData);
 612:.\Generated_Source\PSoC4/UART.c ****     }
 566              		.loc 1 612 0
 567 0062 201C     		mov	r0, r4
 568              		@ sp needed
 569              	.LVL57:
 570 0064 10BD     		pop	{r4, pc}
 571              	.L40:
 572 0066 C046     		.align	2
 573              	.L39:
 574 0068 00000000 		.word	.LANCHOR0
 575 006c 00000000 		.word	UART_rxBuffer
 576 0070 60000F40 		.word	1074724960
 577 0074 40000F40 		.word	1074724928
 578              		.cfi_endproc
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 22


 579              	.LFE9:
 580              		.size	UART_GetChar, .-UART_GetChar
 581              		.section	.text.UART_GetByte,"ax",%progbits
 582              		.align	2
 583              		.global	UART_GetByte
 584              		.code	16
 585              		.thumb_func
 586              		.type	UART_GetByte, %function
 587              	UART_GetByte:
 588              	.LFB10:
 613:.\Generated_Source\PSoC4/UART.c **** 
 614:.\Generated_Source\PSoC4/UART.c **** 
 615:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetByte
 617:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC4/UART.c ****     *
 619:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 620:.\Generated_Source\PSoC4/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC4/UART.c ****     *  condition.
 622:.\Generated_Source\PSoC4/UART.c ****     *
 623:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 624:.\Generated_Source\PSoC4/UART.c ****     *  None.
 625:.\Generated_Source\PSoC4/UART.c ****     *
 626:.\Generated_Source\PSoC4/UART.c ****     * Return:
 627:.\Generated_Source\PSoC4/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC4/UART.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC4/UART.c ****     *
 630:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 631:.\Generated_Source\PSoC4/UART.c ****     *  No.
 632:.\Generated_Source\PSoC4/UART.c ****     *
 633:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC4/UART.c ****     uint16 UART_GetByte(void) 
 635:.\Generated_Source\PSoC4/UART.c ****     {
 589              		.loc 1 635 0
 590              		.cfi_startproc
 591 0000 10B5     		push	{r4, lr}
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 4, -8
 594              		.cfi_offset 14, -4
 636:.\Generated_Source\PSoC4/UART.c ****         
 637:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC4/UART.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 595              		.loc 1 640 0
 596 0002 0020     		mov	r0, #0
 597 0004 FFF7FEFF 		bl	CyIntDisable
 598              	.LVL58:
 641:.\Generated_Source\PSoC4/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 599              		.loc 1 641 0
 600 0008 064B     		ldr	r3, .L42
 601 000a 1C78     		ldrb	r4, [r3]
 602              	.LVL59:
 642:.\Generated_Source\PSoC4/UART.c ****         UART_errorStatus = 0u;
 603              		.loc 1 642 0
 604 000c 0022     		mov	r2, #0
 605 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 23


 643:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 606              		.loc 1 643 0
 607 0010 0020     		mov	r0, #0
 608 0012 FFF7FEFF 		bl	CyIntEnable
 609              	.LVL60:
 644:.\Generated_Source\PSoC4/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 610              		.loc 1 644 0
 611 0016 2402     		lsl	r4, r4, #8
 612              	.LVL61:
 613 0018 FFF7FEFF 		bl	UART_ReadRxData
 614              	.LVL62:
 615 001c 2043     		orr	r0, r4
 616 001e 80B2     		uxth	r0, r0
 645:.\Generated_Source\PSoC4/UART.c ****     #else
 646:.\Generated_Source\PSoC4/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 647:.\Generated_Source\PSoC4/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC4/UART.c ****         
 649:.\Generated_Source\PSoC4/UART.c ****     }
 617              		.loc 1 649 0
 618              		@ sp needed
 619 0020 10BD     		pop	{r4, pc}
 620              	.L43:
 621 0022 C046     		.align	2
 622              	.L42:
 623 0024 00000000 		.word	.LANCHOR0
 624              		.cfi_endproc
 625              	.LFE10:
 626              		.size	UART_GetByte, .-UART_GetByte
 627              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 628              		.align	2
 629              		.global	UART_GetRxBufferSize
 630              		.code	16
 631              		.thumb_func
 632              		.type	UART_GetRxBufferSize, %function
 633              	UART_GetRxBufferSize:
 634              	.LFB11:
 650:.\Generated_Source\PSoC4/UART.c **** 
 651:.\Generated_Source\PSoC4/UART.c **** 
 652:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC4/UART.c ****     *
 656:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 657:.\Generated_Source\PSoC4/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC4/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC4/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC4/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC4/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC4/UART.c ****     *    account.
 663:.\Generated_Source\PSoC4/UART.c ****     *
 664:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 665:.\Generated_Source\PSoC4/UART.c ****     *  None.
 666:.\Generated_Source\PSoC4/UART.c ****     *
 667:.\Generated_Source\PSoC4/UART.c ****     * Return:
 668:.\Generated_Source\PSoC4/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC4/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 24


 671:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 672:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC4/UART.c ****     *
 676:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 677:.\Generated_Source\PSoC4/UART.c ****     *  No.
 678:.\Generated_Source\PSoC4/UART.c ****     *
 679:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 680:.\Generated_Source\PSoC4/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC4/UART.c ****     *
 682:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC4/UART.c ****                                                             
 685:.\Generated_Source\PSoC4/UART.c ****     {
 635              		.loc 1 685 0
 636              		.cfi_startproc
 637 0000 10B5     		push	{r4, lr}
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 4, -8
 640              		.cfi_offset 14, -4
 686:.\Generated_Source\PSoC4/UART.c ****         uint8 size;
 687:.\Generated_Source\PSoC4/UART.c **** 
 688:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC4/UART.c **** 
 690:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 641              		.loc 1 691 0
 642 0002 0020     		mov	r0, #0
 643 0004 FFF7FEFF 		bl	CyIntDisable
 644              	.LVL63:
 692:.\Generated_Source\PSoC4/UART.c **** 
 693:.\Generated_Source\PSoC4/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 645              		.loc 1 693 0
 646 0008 124A     		ldr	r2, .L49
 647 000a 9378     		ldrb	r3, [r2, #2]
 648 000c D278     		ldrb	r2, [r2, #3]
 649 000e DBB2     		uxtb	r3, r3
 650 0010 9342     		cmp	r3, r2
 651 0012 05D1     		bne	.L45
 694:.\Generated_Source\PSoC4/UART.c ****         {
 695:.\Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 652              		.loc 1 695 0
 653 0014 0F4B     		ldr	r3, .L49
 654 0016 1B79     		ldrb	r3, [r3, #4]
 655 0018 002B     		cmp	r3, #0
 656 001a 14D0     		beq	.L48
 696:.\Generated_Source\PSoC4/UART.c ****             {
 697:.\Generated_Source\PSoC4/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 657              		.loc 1 697 0
 658 001c FF24     		mov	r4, #255
 659 001e 13E0     		b	.L46
 660              	.L45:
 698:.\Generated_Source\PSoC4/UART.c ****             }
 699:.\Generated_Source\PSoC4/UART.c ****             else
 700:.\Generated_Source\PSoC4/UART.c ****             {
 701:.\Generated_Source\PSoC4/UART.c ****                 size = 0u;
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 25


 702:.\Generated_Source\PSoC4/UART.c ****             }
 703:.\Generated_Source\PSoC4/UART.c ****         }
 704:.\Generated_Source\PSoC4/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 661              		.loc 1 704 0
 662 0020 0C4A     		ldr	r2, .L49
 663 0022 9378     		ldrb	r3, [r2, #2]
 664 0024 D278     		ldrb	r2, [r2, #3]
 665 0026 DBB2     		uxtb	r3, r3
 666 0028 9342     		cmp	r3, r2
 667 002a 05D2     		bcs	.L47
 705:.\Generated_Source\PSoC4/UART.c ****         {
 706:.\Generated_Source\PSoC4/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 668              		.loc 1 706 0
 669 002c 094A     		ldr	r2, .L49
 670 002e D378     		ldrb	r3, [r2, #3]
 671 0030 9478     		ldrb	r4, [r2, #2]
 672 0032 1C1B     		sub	r4, r3, r4
 673 0034 E4B2     		uxtb	r4, r4
 674              	.LVL64:
 675 0036 07E0     		b	.L46
 676              	.LVL65:
 677              	.L47:
 707:.\Generated_Source\PSoC4/UART.c ****         }
 708:.\Generated_Source\PSoC4/UART.c ****         else
 709:.\Generated_Source\PSoC4/UART.c ****         {
 710:.\Generated_Source\PSoC4/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 678              		.loc 1 710 0
 679 0038 064A     		ldr	r2, .L49
 680 003a D378     		ldrb	r3, [r2, #3]
 681 003c 9478     		ldrb	r4, [r2, #2]
 682 003e 1C1B     		sub	r4, r3, r4
 683 0040 013C     		sub	r4, r4, #1
 684 0042 E4B2     		uxtb	r4, r4
 685              	.LVL66:
 686 0044 00E0     		b	.L46
 687              	.LVL67:
 688              	.L48:
 701:.\Generated_Source\PSoC4/UART.c ****             }
 689              		.loc 1 701 0
 690 0046 0024     		mov	r4, #0
 691              	.L46:
 692              	.LVL68:
 711:.\Generated_Source\PSoC4/UART.c ****         }
 712:.\Generated_Source\PSoC4/UART.c **** 
 713:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 693              		.loc 1 713 0
 694 0048 0020     		mov	r0, #0
 695 004a FFF7FEFF 		bl	CyIntEnable
 696              	.LVL69:
 714:.\Generated_Source\PSoC4/UART.c **** 
 715:.\Generated_Source\PSoC4/UART.c ****     #else
 716:.\Generated_Source\PSoC4/UART.c **** 
 717:.\Generated_Source\PSoC4/UART.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC4/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC4/UART.c **** 
 720:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 26


 722:.\Generated_Source\PSoC4/UART.c ****         return(size);
 723:.\Generated_Source\PSoC4/UART.c ****     }
 697              		.loc 1 723 0
 698 004e 201C     		mov	r0, r4
 699              		@ sp needed
 700              	.LVL70:
 701 0050 10BD     		pop	{r4, pc}
 702              	.L50:
 703 0052 C046     		.align	2
 704              	.L49:
 705 0054 00000000 		.word	.LANCHOR0
 706              		.cfi_endproc
 707              	.LFE11:
 708              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 709              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 710              		.align	2
 711              		.global	UART_ClearRxBuffer
 712              		.code	16
 713              		.thumb_func
 714              		.type	UART_ClearRxBuffer, %function
 715              	UART_ClearRxBuffer:
 716              	.LFB12:
 724:.\Generated_Source\PSoC4/UART.c **** 
 725:.\Generated_Source\PSoC4/UART.c **** 
 726:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC4/UART.c ****     *
 730:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 731:.\Generated_Source\PSoC4/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC4/UART.c ****     *
 733:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 734:.\Generated_Source\PSoC4/UART.c ****     *  None.
 735:.\Generated_Source\PSoC4/UART.c ****     *
 736:.\Generated_Source\PSoC4/UART.c ****     * Return:
 737:.\Generated_Source\PSoC4/UART.c ****     *  None.
 738:.\Generated_Source\PSoC4/UART.c ****     *
 739:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 740:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC4/UART.c ****     *
 745:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 746:.\Generated_Source\PSoC4/UART.c ****     *  No.
 747:.\Generated_Source\PSoC4/UART.c ****     *
 748:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 749:.\Generated_Source\PSoC4/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC4/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC4/UART.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC4/UART.c ****     *
 753:.\Generated_Source\PSoC4/UART.c ****     * Side Effects:
 754:.\Generated_Source\PSoC4/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC4/UART.c ****     *
 756:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC4/UART.c ****     void UART_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC4/UART.c ****     {
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 27


 717              		.loc 1 758 0
 718              		.cfi_startproc
 719 0000 08B5     		push	{r3, lr}
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 3, -8
 722              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC4/UART.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC4/UART.c **** 
 761:.\Generated_Source\PSoC4/UART.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC4/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 723              		.loc 1 762 0
 724 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 725              	.LVL71:
 763:.\Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 726              		.loc 1 763 0
 727 0006 0C4B     		ldr	r3, .L52
 728 0008 1978     		ldrb	r1, [r3]
 729 000a 0122     		mov	r2, #1
 730 000c 0A43     		orr	r2, r1
 731 000e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 732              		.loc 1 764 0
 733 0010 1A78     		ldrb	r2, [r3]
 734 0012 0121     		mov	r1, #1
 735 0014 8A43     		bic	r2, r1
 736 0016 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC4/UART.c ****         CyExitCriticalSection(enableInterrupts);
 737              		.loc 1 765 0
 738 0018 FFF7FEFF 		bl	CyExitCriticalSection
 739              	.LVL72:
 766:.\Generated_Source\PSoC4/UART.c **** 
 767:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC4/UART.c **** 
 769:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 740              		.loc 1 770 0
 741 001c 0020     		mov	r0, #0
 742 001e FFF7FEFF 		bl	CyIntDisable
 743              	.LVL73:
 771:.\Generated_Source\PSoC4/UART.c **** 
 772:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferRead = 0u;
 744              		.loc 1 772 0
 745 0022 064B     		ldr	r3, .L52+4
 746 0024 0022     		mov	r2, #0
 747 0026 9A70     		strb	r2, [r3, #2]
 773:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferWrite = 0u;
 748              		.loc 1 773 0
 749 0028 DA70     		strb	r2, [r3, #3]
 774:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferLoopDetect = 0u;
 750              		.loc 1 774 0
 751 002a 1A71     		strb	r2, [r3, #4]
 775:.\Generated_Source\PSoC4/UART.c ****         UART_rxBufferOverflow = 0u;
 752              		.loc 1 775 0
 753 002c 5A71     		strb	r2, [r3, #5]
 776:.\Generated_Source\PSoC4/UART.c **** 
 777:.\Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 754              		.loc 1 777 0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 28


 755 002e 0020     		mov	r0, #0
 756 0030 FFF7FEFF 		bl	CyIntEnable
 757              	.LVL74:
 778:.\Generated_Source\PSoC4/UART.c **** 
 779:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC4/UART.c **** 
 781:.\Generated_Source\PSoC4/UART.c ****     }
 758              		.loc 1 781 0
 759              		@ sp needed
 760 0034 08BD     		pop	{r3, pc}
 761              	.L53:
 762 0036 C046     		.align	2
 763              	.L52:
 764 0038 90000F40 		.word	1074725008
 765 003c 00000000 		.word	.LANCHOR0
 766              		.cfi_endproc
 767              	.LFE12:
 768              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 769              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 770              		.align	2
 771              		.global	UART_SetRxAddressMode
 772              		.code	16
 773              		.thumb_func
 774              		.type	UART_SetRxAddressMode, %function
 775              	UART_SetRxAddressMode:
 776              	.LFB13:
 782:.\Generated_Source\PSoC4/UART.c **** 
 783:.\Generated_Source\PSoC4/UART.c **** 
 784:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC4/UART.c ****     *
 788:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 789:.\Generated_Source\PSoC4/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC4/UART.c ****     *  UART.
 791:.\Generated_Source\PSoC4/UART.c ****     *
 792:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 793:.\Generated_Source\PSoC4/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC4/UART.c ****     *                                               detection
 796:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC4/UART.c ****     *                                               address detection
 798:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC4/UART.c ****     *                                               detection
 800:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC4/UART.c ****     *                                               address detection
 802:.\Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC4/UART.c ****     *
 804:.\Generated_Source\PSoC4/UART.c ****     * Return:
 805:.\Generated_Source\PSoC4/UART.c ****     *  None.
 806:.\Generated_Source\PSoC4/UART.c ****     *
 807:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 808:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC4/UART.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC4/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC4/UART.c ****     *
 812:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 29


 813:.\Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC4/UART.c ****                                                         
 815:.\Generated_Source\PSoC4/UART.c ****     {
 777              		.loc 1 815 0
 778              		.cfi_startproc
 779              	.LVL75:
 816:.\Generated_Source\PSoC4/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC4/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC4/UART.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC4/UART.c ****                 {
 820:.\Generated_Source\PSoC4/UART.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC4/UART.c ****                 }
 822:.\Generated_Source\PSoC4/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC4/UART.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC4/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC4/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC4/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC4/UART.c **** 
 828:.\Generated_Source\PSoC4/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC4/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC4/UART.c ****                     UART_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC4/UART.c ****                     UART_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC4/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC4/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC4/UART.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC4/UART.c ****             {
 837:.\Generated_Source\PSoC4/UART.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC4/UART.c ****             }
 839:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC4/UART.c ****     }
 780              		.loc 1 840 0
 781              		@ sp needed
 782 0000 7047     		bx	lr
 783              		.cfi_endproc
 784              	.LFE13:
 785              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 786 0002 C046     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 787              		.align	2
 788              		.global	UART_SetRxAddress1
 789              		.code	16
 790              		.thumb_func
 791              		.type	UART_SetRxAddress1, %function
 792              	UART_SetRxAddress1:
 793              	.LFB14:
 841:.\Generated_Source\PSoC4/UART.c **** 
 842:.\Generated_Source\PSoC4/UART.c **** 
 843:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddress1
 845:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC4/UART.c ****     *
 847:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 848:.\Generated_Source\PSoC4/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC4/UART.c ****     *
 850:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 851:.\Generated_Source\PSoC4/UART.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 30


 853:.\Generated_Source\PSoC4/UART.c ****     * Return:
 854:.\Generated_Source\PSoC4/UART.c ****     *  None.
 855:.\Generated_Source\PSoC4/UART.c ****     *
 856:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC4/UART.c ****     {
 794              		.loc 1 858 0
 795              		.cfi_startproc
 796              	.LVL76:
 859:.\Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS1_REG = address;
 797              		.loc 1 859 0
 798 0000 014B     		ldr	r3, .L56
 799 0002 1870     		strb	r0, [r3]
 860:.\Generated_Source\PSoC4/UART.c ****     }
 800              		.loc 1 860 0
 801              		@ sp needed
 802 0004 7047     		bx	lr
 803              	.L57:
 804 0006 C046     		.align	2
 805              	.L56:
 806 0008 20000F40 		.word	1074724896
 807              		.cfi_endproc
 808              	.LFE14:
 809              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 810              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 811              		.align	2
 812              		.global	UART_SetRxAddress2
 813              		.code	16
 814              		.thumb_func
 815              		.type	UART_SetRxAddress2, %function
 816              	UART_SetRxAddress2:
 817              	.LFB15:
 861:.\Generated_Source\PSoC4/UART.c **** 
 862:.\Generated_Source\PSoC4/UART.c **** 
 863:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddress2
 865:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC4/UART.c ****     *
 867:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 868:.\Generated_Source\PSoC4/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC4/UART.c ****     *
 870:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 871:.\Generated_Source\PSoC4/UART.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC4/UART.c ****     *
 873:.\Generated_Source\PSoC4/UART.c ****     * Return:
 874:.\Generated_Source\PSoC4/UART.c ****     *  None.
 875:.\Generated_Source\PSoC4/UART.c ****     *
 876:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC4/UART.c ****     {
 818              		.loc 1 878 0
 819              		.cfi_startproc
 820              	.LVL77:
 879:.\Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS2_REG = address;
 821              		.loc 1 879 0
 822 0000 014B     		ldr	r3, .L59
 823 0002 1870     		strb	r0, [r3]
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 31


 880:.\Generated_Source\PSoC4/UART.c ****     }
 824              		.loc 1 880 0
 825              		@ sp needed
 826 0004 7047     		bx	lr
 827              	.L60:
 828 0006 C046     		.align	2
 829              	.L59:
 830 0008 30000F40 		.word	1074724912
 831              		.cfi_endproc
 832              	.LFE15:
 833              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 834              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 835              		.align	2
 836              		.global	UART_SetTxInterruptMode
 837              		.code	16
 838              		.thumb_func
 839              		.type	UART_SetTxInterruptMode, %function
 840              	UART_SetTxInterruptMode:
 841              	.LFB16:
 881:.\Generated_Source\PSoC4/UART.c **** 
 882:.\Generated_Source\PSoC4/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:.\Generated_Source\PSoC4/UART.c **** 
 884:.\Generated_Source\PSoC4/UART.c **** 
 885:.\Generated_Source\PSoC4/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC4/UART.c ****     *
 890:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 891:.\Generated_Source\PSoC4/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC4/UART.c ****     *  interrupt.
 893:.\Generated_Source\PSoC4/UART.c ****     *
 894:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 895:.\Generated_Source\PSoC4/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC4/UART.c ****     *
 901:.\Generated_Source\PSoC4/UART.c ****     * Return:
 902:.\Generated_Source\PSoC4/UART.c ****     *  None.
 903:.\Generated_Source\PSoC4/UART.c ****     *
 904:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 905:.\Generated_Source\PSoC4/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC4/UART.c ****     *
 907:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC4/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC4/UART.c ****     {
 842              		.loc 1 909 0
 843              		.cfi_startproc
 844              	.LVL78:
 910:.\Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 845              		.loc 1 910 0
 846 0000 014B     		ldr	r3, .L62
 847 0002 1870     		strb	r0, [r3]
 911:.\Generated_Source\PSoC4/UART.c ****     }
 848              		.loc 1 911 0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 32


 849              		@ sp needed
 850 0004 7047     		bx	lr
 851              	.L63:
 852 0006 C046     		.align	2
 853              	.L62:
 854 0008 81000F40 		.word	1074724993
 855              		.cfi_endproc
 856              	.LFE16:
 857              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 858              		.section	.text.UART_WriteTxData,"ax",%progbits
 859              		.align	2
 860              		.global	UART_WriteTxData
 861              		.code	16
 862              		.thumb_func
 863              		.type	UART_WriteTxData, %function
 864              	UART_WriteTxData:
 865              	.LFB17:
 912:.\Generated_Source\PSoC4/UART.c **** 
 913:.\Generated_Source\PSoC4/UART.c **** 
 914:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_WriteTxData
 916:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC4/UART.c ****     *
 918:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 919:.\Generated_Source\PSoC4/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC4/UART.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC4/UART.c ****     *  separately.
 922:.\Generated_Source\PSoC4/UART.c ****     *
 923:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 924:.\Generated_Source\PSoC4/UART.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC4/UART.c ****     *
 926:.\Generated_Source\PSoC4/UART.c ****     * Return:
 927:.\Generated_Source\PSoC4/UART.c ****     * None.
 928:.\Generated_Source\PSoC4/UART.c ****     *
 929:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
 930:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC4/UART.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC4/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC4/UART.c ****     *    initialized.
 937:.\Generated_Source\PSoC4/UART.c ****     *
 938:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
 939:.\Generated_Source\PSoC4/UART.c ****     *  No.
 940:.\Generated_Source\PSoC4/UART.c ****     *
 941:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC4/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC4/UART.c ****     {
 866              		.loc 1 943 0
 867              		.cfi_startproc
 868              	.LVL79:
 869 0000 10B5     		push	{r4, lr}
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 4, -8
 872              		.cfi_offset 14, -4
 873 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 33


 944:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 874              		.loc 1 945 0
 875 0004 114B     		ldr	r3, .L69
 876 0006 5B78     		ldrb	r3, [r3, #1]
 877 0008 002B     		cmp	r3, #0
 878 000a 1DD0     		beq	.L64
 946:.\Generated_Source\PSoC4/UART.c ****         {
 947:.\Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC4/UART.c **** 
 949:.\Generated_Source\PSoC4/UART.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
 879              		.loc 1 950 0
 880 000c 0220     		mov	r0, #2
 881              	.LVL80:
 882 000e FFF7FEFF 		bl	CyIntDisable
 883              	.LVL81:
 951:.\Generated_Source\PSoC4/UART.c **** 
 952:.\Generated_Source\PSoC4/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 884              		.loc 1 952 0
 885 0012 0E4A     		ldr	r2, .L69
 886 0014 9379     		ldrb	r3, [r2, #6]
 887 0016 DBB2     		uxtb	r3, r3
 888 0018 D279     		ldrb	r2, [r2, #7]
 889 001a 9342     		cmp	r3, r2
 890 001c 06D1     		bne	.L66
 953:.\Generated_Source\PSoC4/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 891              		.loc 1 953 0 discriminator 1
 892 001e 0C4B     		ldr	r3, .L69+4
 893 0020 1B78     		ldrb	r3, [r3]
 952:.\Generated_Source\PSoC4/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 894              		.loc 1 952 0 discriminator 1
 895 0022 5B07     		lsl	r3, r3, #29
 896 0024 02D4     		bmi	.L66
 954:.\Generated_Source\PSoC4/UART.c ****             {
 955:.\Generated_Source\PSoC4/UART.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = txDataByte;
 897              		.loc 1 956 0
 898 0026 0B4B     		ldr	r3, .L69+8
 899 0028 1C70     		strb	r4, [r3]
 900 002a 0AE0     		b	.L67
 901              	.L66:
 957:.\Generated_Source\PSoC4/UART.c ****             }
 958:.\Generated_Source\PSoC4/UART.c ****             else
 959:.\Generated_Source\PSoC4/UART.c ****             {
 960:.\Generated_Source\PSoC4/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 902              		.loc 1 960 0
 903 002c FF2A     		cmp	r2, #255
 904 002e 02D1     		bne	.L68
 961:.\Generated_Source\PSoC4/UART.c ****                 {
 962:.\Generated_Source\PSoC4/UART.c ****                     UART_txBufferWrite = 0u;
 905              		.loc 1 962 0
 906 0030 0022     		mov	r2, #0
 907 0032 064B     		ldr	r3, .L69
 908 0034 DA71     		strb	r2, [r3, #7]
 909              	.L68:
 963:.\Generated_Source\PSoC4/UART.c ****                 }
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 34


 964:.\Generated_Source\PSoC4/UART.c **** 
 965:.\Generated_Source\PSoC4/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 910              		.loc 1 965 0
 911 0036 054A     		ldr	r2, .L69
 912 0038 D379     		ldrb	r3, [r2, #7]
 913 003a 0749     		ldr	r1, .L69+12
 914 003c CC54     		strb	r4, [r1, r3]
 966:.\Generated_Source\PSoC4/UART.c **** 
 967:.\Generated_Source\PSoC4/UART.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC4/UART.c ****                 UART_txBufferWrite++;
 915              		.loc 1 968 0
 916 003e 0133     		add	r3, r3, #1
 917 0040 D371     		strb	r3, [r2, #7]
 918              	.L67:
 969:.\Generated_Source\PSoC4/UART.c ****             }
 970:.\Generated_Source\PSoC4/UART.c **** 
 971:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 919              		.loc 1 971 0
 920 0042 0220     		mov	r0, #2
 921 0044 FFF7FEFF 		bl	CyIntEnable
 922              	.LVL82:
 923              	.L64:
 972:.\Generated_Source\PSoC4/UART.c **** 
 973:.\Generated_Source\PSoC4/UART.c ****         #else
 974:.\Generated_Source\PSoC4/UART.c **** 
 975:.\Generated_Source\PSoC4/UART.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC4/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:.\Generated_Source\PSoC4/UART.c **** 
 978:.\Generated_Source\PSoC4/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC4/UART.c ****         }
 980:.\Generated_Source\PSoC4/UART.c ****     }
 924              		.loc 1 980 0
 925              		@ sp needed
 926 0048 10BD     		pop	{r4, pc}
 927              	.L70:
 928 004a C046     		.align	2
 929              	.L69:
 930 004c 00000000 		.word	.LANCHOR0
 931 0050 61000F40 		.word	1074724961
 932 0054 41000F40 		.word	1074724929
 933 0058 00000000 		.word	UART_txBuffer
 934              		.cfi_endproc
 935              	.LFE17:
 936              		.size	UART_WriteTxData, .-UART_WriteTxData
 937              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 938              		.align	2
 939              		.global	UART_ReadTxStatus
 940              		.code	16
 941              		.thumb_func
 942              		.type	UART_ReadTxStatus, %function
 943              	UART_ReadTxStatus:
 944              	.LFB18:
 981:.\Generated_Source\PSoC4/UART.c **** 
 982:.\Generated_Source\PSoC4/UART.c **** 
 983:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadTxStatus
 985:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 35


 986:.\Generated_Source\PSoC4/UART.c ****     *
 987:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 988:.\Generated_Source\PSoC4/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC4/UART.c ****     *
 990:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 991:.\Generated_Source\PSoC4/UART.c ****     *  None.
 992:.\Generated_Source\PSoC4/UART.c ****     *
 993:.\Generated_Source\PSoC4/UART.c ****     * Return:
 994:.\Generated_Source\PSoC4/UART.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC4/UART.c ****     *
 996:.\Generated_Source\PSoC4/UART.c ****     * Theory:
 997:.\Generated_Source\PSoC4/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC4/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC4/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC4/UART.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC4/UART.c ****     *
1002:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC4/UART.c ****     {
 945              		.loc 1 1004 0
 946              		.cfi_startproc
1005:.\Generated_Source\PSoC4/UART.c ****         return(UART_TXSTATUS_REG);
 947              		.loc 1 1005 0
 948 0000 014B     		ldr	r3, .L72
 949 0002 1878     		ldrb	r0, [r3]
 950 0004 C0B2     		uxtb	r0, r0
1006:.\Generated_Source\PSoC4/UART.c ****     }
 951              		.loc 1 1006 0
 952              		@ sp needed
 953 0006 7047     		bx	lr
 954              	.L73:
 955              		.align	2
 956              	.L72:
 957 0008 61000F40 		.word	1074724961
 958              		.cfi_endproc
 959              	.LFE18:
 960              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 961              		.section	.text.UART_PutChar,"ax",%progbits
 962              		.align	2
 963              		.global	UART_PutChar
 964              		.code	16
 965              		.thumb_func
 966              		.type	UART_PutChar, %function
 967              	UART_PutChar:
 968              	.LFB19:
1007:.\Generated_Source\PSoC4/UART.c **** 
1008:.\Generated_Source\PSoC4/UART.c **** 
1009:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutChar
1011:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/UART.c ****     *
1013:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1014:.\Generated_Source\PSoC4/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC4/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC4/UART.c ****     *  hold the data.
1017:.\Generated_Source\PSoC4/UART.c ****     *
1018:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 36


1019:.\Generated_Source\PSoC4/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC4/UART.c ****     *
1021:.\Generated_Source\PSoC4/UART.c ****     * Return:
1022:.\Generated_Source\PSoC4/UART.c ****     *  None.
1023:.\Generated_Source\PSoC4/UART.c ****     *
1024:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1025:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC4/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC4/UART.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC4/UART.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1033:.\Generated_Source\PSoC4/UART.c ****     *
1034:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1035:.\Generated_Source\PSoC4/UART.c ****     *  No.
1036:.\Generated_Source\PSoC4/UART.c ****     *
1037:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1038:.\Generated_Source\PSoC4/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC4/UART.c ****     *
1040:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC4/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC4/UART.c ****     {
 969              		.loc 1 1042 0
 970              		.cfi_startproc
 971              	.LVL83:
 972 0000 10B5     		push	{r4, lr}
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 4, -8
 975              		.cfi_offset 14, -4
 976              	.L77:
1043:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC4/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC4/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC4/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC4/UART.c ****         */
1048:.\Generated_Source\PSoC4/UART.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC4/UART.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC4/UART.c **** 
1051:.\Generated_Source\PSoC4/UART.c ****         do
1052:.\Generated_Source\PSoC4/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC4/UART.c **** 
1054:.\Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC4/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
1057:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC4/UART.c **** 
1059:.\Generated_Source\PSoC4/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
 977              		.loc 1 1059 0
 978 0002 164B     		ldr	r3, .L82
 979 0004 D979     		ldrb	r1, [r3, #7]
 980              	.LVL84:
1060:.\Generated_Source\PSoC4/UART.c ****             locTxBufferRead  = UART_txBufferRead;
 981              		.loc 1 1060 0
 982 0006 9A79     		ldrb	r2, [r3, #6]
 983 0008 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 37


 984              	.LVL85:
1061:.\Generated_Source\PSoC4/UART.c **** 
1062:.\Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC4/UART.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
1065:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC4/UART.c ****         }
1067:.\Generated_Source\PSoC4/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 985              		.loc 1 1067 0
 986 000a 9142     		cmp	r1, r2
 987 000c 05D2     		bcs	.L75
 988              		.loc 1 1067 0 is_stmt 0 discriminator 1
 989 000e 531E     		sub	r3, r2, #1
 990 0010 CB1A     		sub	r3, r1, r3
 991 0012 5C42     		neg	r4, r3
 992 0014 6341     		adc	r3, r3, r4
 993 0016 DBB2     		uxtb	r3, r3
 994 0018 04E0     		b	.L76
 995              	.L75:
1068:.\Generated_Source\PSoC4/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 996              		.loc 1 1068 0 is_stmt 1 discriminator 2
 997 001a 8B1A     		sub	r3, r1, r2
1067:.\Generated_Source\PSoC4/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 998              		.loc 1 1067 0 discriminator 2
 999 001c FE3B     		sub	r3, r3, #254
 1000 001e 5C42     		neg	r4, r3
 1001 0020 6341     		adc	r3, r3, r4
 1002 0022 DBB2     		uxtb	r3, r3
 1003              	.L76:
1069:.\Generated_Source\PSoC4/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
 1004              		.loc 1 1069 0
 1005 0024 002B     		cmp	r3, #0
 1006 0026 ECD1     		bne	.L77
1070:.\Generated_Source\PSoC4/UART.c **** 
1071:.\Generated_Source\PSoC4/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 1007              		.loc 1 1071 0
 1008 0028 8A42     		cmp	r2, r1
 1009 002a 06D1     		bne	.L78
1072:.\Generated_Source\PSoC4/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1010              		.loc 1 1072 0 discriminator 1
 1011 002c 0C4B     		ldr	r3, .L82+4
 1012 002e 1B78     		ldrb	r3, [r3]
1071:.\Generated_Source\PSoC4/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1013              		.loc 1 1071 0 discriminator 1
 1014 0030 5B07     		lsl	r3, r3, #29
 1015 0032 02D4     		bmi	.L78
1073:.\Generated_Source\PSoC4/UART.c ****         {
1074:.\Generated_Source\PSoC4/UART.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC4/UART.c ****             UART_TXDATA_REG = txDataByte;
 1016              		.loc 1 1075 0
 1017 0034 0B4B     		ldr	r3, .L82+8
 1018 0036 1870     		strb	r0, [r3]
 1019 0038 0EE0     		b	.L74
 1020              	.L78:
1076:.\Generated_Source\PSoC4/UART.c ****         }
1077:.\Generated_Source\PSoC4/UART.c ****         else
1078:.\Generated_Source\PSoC4/UART.c ****         {
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 38


1079:.\Generated_Source\PSoC4/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
 1021              		.loc 1 1079 0
 1022 003a FF29     		cmp	r1, #255
 1023 003c 00D1     		bne	.L80
1080:.\Generated_Source\PSoC4/UART.c ****             {
1081:.\Generated_Source\PSoC4/UART.c ****                 locTxBufferWrite = 0u;
 1024              		.loc 1 1081 0
 1025 003e 0021     		mov	r1, #0
 1026              	.LVL86:
 1027              	.L80:
1082:.\Generated_Source\PSoC4/UART.c ****             }
1083:.\Generated_Source\PSoC4/UART.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC4/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
 1028              		.loc 1 1084 0
 1029 0040 094B     		ldr	r3, .L82+12
 1030 0042 5854     		strb	r0, [r3, r1]
1085:.\Generated_Source\PSoC4/UART.c ****             locTxBufferWrite++;
 1031              		.loc 1 1085 0
 1032 0044 0131     		add	r1, r1, #1
 1033              	.LVL87:
1086:.\Generated_Source\PSoC4/UART.c **** 
1087:.\Generated_Source\PSoC4/UART.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
1090:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC4/UART.c **** 
1092:.\Generated_Source\PSoC4/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
 1034              		.loc 1 1092 0
 1035 0046 054B     		ldr	r3, .L82
 1036 0048 D971     		strb	r1, [r3, #7]
1093:.\Generated_Source\PSoC4/UART.c **** 
1094:.\Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
1096:.\Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC4/UART.c **** 
1098:.\Generated_Source\PSoC4/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
 1037              		.loc 1 1098 0
 1038 004a 054B     		ldr	r3, .L82+4
 1039 004c 1B78     		ldrb	r3, [r3]
 1040 004e 9B07     		lsl	r3, r3, #30
 1041 0050 02D5     		bpl	.L74
1099:.\Generated_Source\PSoC4/UART.c ****             {
1100:.\Generated_Source\PSoC4/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC4/UART.c ****                 UART_SetPendingTxInt();
 1042              		.loc 1 1101 0
 1043 0052 0220     		mov	r0, #2
 1044              	.LVL88:
 1045 0054 FFF7FEFF 		bl	CyIntSetPending
 1046              	.LVL89:
 1047              	.L74:
1102:.\Generated_Source\PSoC4/UART.c ****             }
1103:.\Generated_Source\PSoC4/UART.c ****         }
1104:.\Generated_Source\PSoC4/UART.c **** 
1105:.\Generated_Source\PSoC4/UART.c ****     #else
1106:.\Generated_Source\PSoC4/UART.c **** 
1107:.\Generated_Source\PSoC4/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:.\Generated_Source\PSoC4/UART.c ****         {
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 39


1109:.\Generated_Source\PSoC4/UART.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC4/UART.c ****         }
1111:.\Generated_Source\PSoC4/UART.c **** 
1112:.\Generated_Source\PSoC4/UART.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC4/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:.\Generated_Source\PSoC4/UART.c **** 
1115:.\Generated_Source\PSoC4/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC4/UART.c ****     }
 1048              		.loc 1 1116 0
 1049              		@ sp needed
 1050 0058 10BD     		pop	{r4, pc}
 1051              	.L83:
 1052 005a C046     		.align	2
 1053              	.L82:
 1054 005c 00000000 		.word	.LANCHOR0
 1055 0060 61000F40 		.word	1074724961
 1056 0064 41000F40 		.word	1074724929
 1057 0068 00000000 		.word	UART_txBuffer
 1058              		.cfi_endproc
 1059              	.LFE19:
 1060              		.size	UART_PutChar, .-UART_PutChar
 1061              		.section	.text.UART_PutString,"ax",%progbits
 1062              		.align	2
 1063              		.global	UART_PutString
 1064              		.code	16
 1065              		.thumb_func
 1066              		.type	UART_PutString, %function
 1067              	UART_PutString:
 1068              	.LFB20:
1117:.\Generated_Source\PSoC4/UART.c **** 
1118:.\Generated_Source\PSoC4/UART.c **** 
1119:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutString
1121:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC4/UART.c ****     *
1123:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1124:.\Generated_Source\PSoC4/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC4/UART.c ****     *
1126:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1127:.\Generated_Source\PSoC4/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC4/UART.c ****     *
1129:.\Generated_Source\PSoC4/UART.c ****     * Return:
1130:.\Generated_Source\PSoC4/UART.c ****     *  None.
1131:.\Generated_Source\PSoC4/UART.c ****     *
1132:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1133:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1135:.\Generated_Source\PSoC4/UART.c ****     *
1136:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1137:.\Generated_Source\PSoC4/UART.c ****     *  No.
1138:.\Generated_Source\PSoC4/UART.c ****     *
1139:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1140:.\Generated_Source\PSoC4/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC4/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC4/UART.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC4/UART.c ****     *
1144:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 40


1145:.\Generated_Source\PSoC4/UART.c ****     void UART_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC4/UART.c ****     {
 1069              		.loc 1 1146 0
 1070              		.cfi_startproc
 1071              	.LVL90:
 1072 0000 38B5     		push	{r3, r4, r5, lr}
 1073              		.cfi_def_cfa_offset 16
 1074              		.cfi_offset 3, -16
 1075              		.cfi_offset 4, -12
 1076              		.cfi_offset 5, -8
 1077              		.cfi_offset 14, -4
 1078              	.LVL91:
1147:.\Generated_Source\PSoC4/UART.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC4/UART.c **** 
1149:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 1079              		.loc 1 1150 0
 1080 0002 084B     		ldr	r3, .L89
 1081 0004 5B78     		ldrb	r3, [r3, #1]
 1082 0006 002B     		cmp	r3, #0
 1083 0008 05D1     		bne	.L88
 1084 000a 09E0     		b	.L84
 1085              	.LVL92:
 1086              	.L87:
1151:.\Generated_Source\PSoC4/UART.c ****         {
1152:.\Generated_Source\PSoC4/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC4/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC4/UART.c ****             {
1155:.\Generated_Source\PSoC4/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 1087              		.loc 1 1155 0
 1088 000c FFF7FEFF 		bl	UART_PutChar
 1089              	.LVL93:
1156:.\Generated_Source\PSoC4/UART.c ****                 bufIndex++;
 1090              		.loc 1 1156 0
 1091 0010 0134     		add	r4, r4, #1
 1092              	.LVL94:
 1093 0012 A4B2     		uxth	r4, r4
 1094              	.LVL95:
 1095 0014 01E0     		b	.L85
 1096              	.LVL96:
 1097              	.L88:
 1098 0016 051C     		mov	r5, r0
 1099 0018 0024     		mov	r4, #0
 1100              	.LVL97:
 1101              	.L85:
1153:.\Generated_Source\PSoC4/UART.c ****             {
 1102              		.loc 1 1153 0
 1103 001a 285D     		ldrb	r0, [r5, r4]
 1104 001c 0028     		cmp	r0, #0
 1105 001e F5D1     		bne	.L87
 1106              	.LVL98:
 1107              	.L84:
1157:.\Generated_Source\PSoC4/UART.c ****             }
1158:.\Generated_Source\PSoC4/UART.c ****         }
1159:.\Generated_Source\PSoC4/UART.c ****     }
 1108              		.loc 1 1159 0
 1109              		@ sp needed
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 41


 1110 0020 38BD     		pop	{r3, r4, r5, pc}
 1111              	.L90:
 1112 0022 C046     		.align	2
 1113              	.L89:
 1114 0024 00000000 		.word	.LANCHOR0
 1115              		.cfi_endproc
 1116              	.LFE20:
 1117              		.size	UART_PutString, .-UART_PutString
 1118              		.section	.text.UART_PutArray,"ax",%progbits
 1119              		.align	2
 1120              		.global	UART_PutArray
 1121              		.code	16
 1122              		.thumb_func
 1123              		.type	UART_PutArray, %function
 1124              	UART_PutArray:
 1125              	.LFB21:
1160:.\Generated_Source\PSoC4/UART.c **** 
1161:.\Generated_Source\PSoC4/UART.c **** 
1162:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutArray
1164:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC4/UART.c ****     *
1166:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1167:.\Generated_Source\PSoC4/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC4/UART.c ****     *  transmission.
1169:.\Generated_Source\PSoC4/UART.c ****     *
1170:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1171:.\Generated_Source\PSoC4/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC4/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC4/UART.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC4/UART.c ****     *
1175:.\Generated_Source\PSoC4/UART.c ****     * Return:
1176:.\Generated_Source\PSoC4/UART.c ****     *  None.
1177:.\Generated_Source\PSoC4/UART.c ****     *
1178:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1179:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1181:.\Generated_Source\PSoC4/UART.c ****     *
1182:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1183:.\Generated_Source\PSoC4/UART.c ****     *  No.
1184:.\Generated_Source\PSoC4/UART.c ****     *
1185:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1186:.\Generated_Source\PSoC4/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC4/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC4/UART.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC4/UART.c ****     *
1190:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC4/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC4/UART.c ****                                                                     
1193:.\Generated_Source\PSoC4/UART.c ****     {
 1126              		.loc 1 1193 0
 1127              		.cfi_startproc
 1128              	.LVL99:
 1129 0000 70B5     		push	{r4, r5, r6, lr}
 1130              		.cfi_def_cfa_offset 16
 1131              		.cfi_offset 4, -16
 1132              		.cfi_offset 5, -12
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 42


 1133              		.cfi_offset 6, -8
 1134              		.cfi_offset 14, -4
 1135              	.LVL100:
1194:.\Generated_Source\PSoC4/UART.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC4/UART.c **** 
1196:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 1136              		.loc 1 1197 0
 1137 0002 084B     		ldr	r3, .L96
 1138 0004 5B78     		ldrb	r3, [r3, #1]
 1139 0006 002B     		cmp	r3, #0
 1140 0008 06D1     		bne	.L95
 1141 000a 0AE0     		b	.L91
 1142              	.LVL101:
 1143              	.L94:
1198:.\Generated_Source\PSoC4/UART.c ****         {
1199:.\Generated_Source\PSoC4/UART.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC4/UART.c ****             {
1201:.\Generated_Source\PSoC4/UART.c ****                 UART_PutChar(string[bufIndex]);
 1144              		.loc 1 1201 0
 1145 000c 305D     		ldrb	r0, [r6, r4]
 1146 000e FFF7FEFF 		bl	UART_PutChar
 1147              	.LVL102:
1202:.\Generated_Source\PSoC4/UART.c ****                 bufIndex++;
 1148              		.loc 1 1202 0
 1149 0012 0134     		add	r4, r4, #1
 1150              	.LVL103:
 1151 0014 E4B2     		uxtb	r4, r4
 1152              	.LVL104:
 1153 0016 02E0     		b	.L92
 1154              	.LVL105:
 1155              	.L95:
 1156 0018 0D1C     		mov	r5, r1
 1157 001a 061C     		mov	r6, r0
 1158 001c 0024     		mov	r4, #0
 1159              	.LVL106:
 1160              	.L92:
1199:.\Generated_Source\PSoC4/UART.c ****             {
 1161              		.loc 1 1199 0
 1162 001e AC42     		cmp	r4, r5
 1163 0020 F4D3     		bcc	.L94
 1164              	.LVL107:
 1165              	.L91:
1203:.\Generated_Source\PSoC4/UART.c ****             }
1204:.\Generated_Source\PSoC4/UART.c ****         }
1205:.\Generated_Source\PSoC4/UART.c ****     }
 1166              		.loc 1 1205 0
 1167              		@ sp needed
 1168 0022 70BD     		pop	{r4, r5, r6, pc}
 1169              	.L97:
 1170              		.align	2
 1171              	.L96:
 1172 0024 00000000 		.word	.LANCHOR0
 1173              		.cfi_endproc
 1174              	.LFE21:
 1175              		.size	UART_PutArray, .-UART_PutArray
 1176              		.section	.text.UART_PutCRLF,"ax",%progbits
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 43


 1177              		.align	2
 1178              		.global	UART_PutCRLF
 1179              		.code	16
 1180              		.thumb_func
 1181              		.type	UART_PutCRLF, %function
 1182              	UART_PutCRLF:
 1183              	.LFB22:
1206:.\Generated_Source\PSoC4/UART.c **** 
1207:.\Generated_Source\PSoC4/UART.c **** 
1208:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutCRLF
1210:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC4/UART.c ****     *
1212:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1213:.\Generated_Source\PSoC4/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC4/UART.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC4/UART.c ****     *
1216:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1217:.\Generated_Source\PSoC4/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC4/UART.c ****     *
1219:.\Generated_Source\PSoC4/UART.c ****     * Return:
1220:.\Generated_Source\PSoC4/UART.c ****     *  None.
1221:.\Generated_Source\PSoC4/UART.c ****     *
1222:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1223:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1225:.\Generated_Source\PSoC4/UART.c ****     *
1226:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1227:.\Generated_Source\PSoC4/UART.c ****     *  No.
1228:.\Generated_Source\PSoC4/UART.c ****     *
1229:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC4/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC4/UART.c ****     {
 1184              		.loc 1 1231 0
 1185              		.cfi_startproc
 1186              	.LVL108:
 1187 0000 08B5     		push	{r3, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 3, -8
 1190              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 1191              		.loc 1 1233 0
 1192 0002 064B     		ldr	r3, .L100
 1193 0004 5B78     		ldrb	r3, [r3, #1]
 1194 0006 002B     		cmp	r3, #0
 1195 0008 07D0     		beq	.L98
1234:.\Generated_Source\PSoC4/UART.c ****         {
1235:.\Generated_Source\PSoC4/UART.c ****             UART_PutChar(txDataByte);
 1196              		.loc 1 1235 0
 1197 000a FFF7FEFF 		bl	UART_PutChar
 1198              	.LVL109:
1236:.\Generated_Source\PSoC4/UART.c ****             UART_PutChar(0x0Du);
 1199              		.loc 1 1236 0
 1200 000e 0D20     		mov	r0, #13
 1201 0010 FFF7FEFF 		bl	UART_PutChar
 1202              	.LVL110:
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 44


1237:.\Generated_Source\PSoC4/UART.c ****             UART_PutChar(0x0Au);
 1203              		.loc 1 1237 0
 1204 0014 0A20     		mov	r0, #10
 1205 0016 FFF7FEFF 		bl	UART_PutChar
 1206              	.LVL111:
 1207              	.L98:
1238:.\Generated_Source\PSoC4/UART.c ****         }
1239:.\Generated_Source\PSoC4/UART.c ****     }
 1208              		.loc 1 1239 0
 1209              		@ sp needed
 1210 001a 08BD     		pop	{r3, pc}
 1211              	.L101:
 1212              		.align	2
 1213              	.L100:
 1214 001c 00000000 		.word	.LANCHOR0
 1215              		.cfi_endproc
 1216              	.LFE22:
 1217              		.size	UART_PutCRLF, .-UART_PutCRLF
 1218              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1219              		.align	2
 1220              		.global	UART_GetTxBufferSize
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	UART_GetTxBufferSize, %function
 1224              	UART_GetTxBufferSize:
 1225              	.LFB23:
1240:.\Generated_Source\PSoC4/UART.c **** 
1241:.\Generated_Source\PSoC4/UART.c **** 
1242:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC4/UART.c ****     *
1246:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1247:.\Generated_Source\PSoC4/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC4/UART.c ****     *  transmitted.
1249:.\Generated_Source\PSoC4/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC4/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC4/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC4/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC4/UART.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC4/UART.c ****     *
1255:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1256:.\Generated_Source\PSoC4/UART.c ****     *  None.
1257:.\Generated_Source\PSoC4/UART.c ****     *
1258:.\Generated_Source\PSoC4/UART.c ****     * Return:
1259:.\Generated_Source\PSoC4/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC4/UART.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC4/UART.c ****     *
1262:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1263:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC4/UART.c ****     *
1266:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1267:.\Generated_Source\PSoC4/UART.c ****     *  No.
1268:.\Generated_Source\PSoC4/UART.c ****     *
1269:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1270:.\Generated_Source\PSoC4/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 45


1271:.\Generated_Source\PSoC4/UART.c ****     *
1272:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC4/UART.c ****                                                             
1275:.\Generated_Source\PSoC4/UART.c ****     {
 1226              		.loc 1 1275 0
 1227              		.cfi_startproc
 1228 0000 10B5     		push	{r4, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 4, -8
 1231              		.cfi_offset 14, -4
1276:.\Generated_Source\PSoC4/UART.c ****         uint8 size;
1277:.\Generated_Source\PSoC4/UART.c **** 
1278:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC4/UART.c **** 
1280:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC4/UART.c ****         UART_DisableTxInt();
 1232              		.loc 1 1281 0
 1233 0002 0220     		mov	r0, #2
 1234 0004 FFF7FEFF 		bl	CyIntDisable
 1235              	.LVL112:
1282:.\Generated_Source\PSoC4/UART.c **** 
1283:.\Generated_Source\PSoC4/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 1236              		.loc 1 1283 0
 1237 0008 0D4B     		ldr	r3, .L106
 1238 000a 9A79     		ldrb	r2, [r3, #6]
 1239 000c D2B2     		uxtb	r2, r2
 1240 000e DB79     		ldrb	r3, [r3, #7]
 1241 0010 9A42     		cmp	r2, r3
 1242 0012 0FD0     		beq	.L105
1284:.\Generated_Source\PSoC4/UART.c ****         {
1285:.\Generated_Source\PSoC4/UART.c ****             size = 0u;
1286:.\Generated_Source\PSoC4/UART.c ****         }
1287:.\Generated_Source\PSoC4/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 1243              		.loc 1 1287 0
 1244 0014 0A4A     		ldr	r2, .L106
 1245 0016 9279     		ldrb	r2, [r2, #6]
 1246 0018 D2B2     		uxtb	r2, r2
 1247 001a 9342     		cmp	r3, r2
 1248 001c 04D9     		bls	.L104
1288:.\Generated_Source\PSoC4/UART.c ****         {
1289:.\Generated_Source\PSoC4/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 1249              		.loc 1 1289 0
 1250 001e 084A     		ldr	r2, .L106
 1251 0020 9479     		ldrb	r4, [r2, #6]
 1252 0022 1B1B     		sub	r3, r3, r4
 1253 0024 DCB2     		uxtb	r4, r3
 1254              	.LVL113:
 1255 0026 06E0     		b	.L103
 1256              	.LVL114:
 1257              	.L104:
1290:.\Generated_Source\PSoC4/UART.c ****         }
1291:.\Generated_Source\PSoC4/UART.c ****         else
1292:.\Generated_Source\PSoC4/UART.c ****         {
1293:.\Generated_Source\PSoC4/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 1258              		.loc 1 1293 0
 1259 0028 054A     		ldr	r2, .L106
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 46


 1260 002a 9479     		ldrb	r4, [r2, #6]
 1261 002c 1C1B     		sub	r4, r3, r4
 1262 002e 013C     		sub	r4, r4, #1
 1263 0030 E4B2     		uxtb	r4, r4
 1264              	.LVL115:
 1265 0032 00E0     		b	.L103
 1266              	.LVL116:
 1267              	.L105:
1285:.\Generated_Source\PSoC4/UART.c ****         }
 1268              		.loc 1 1285 0
 1269 0034 0024     		mov	r4, #0
 1270              	.L103:
 1271              	.LVL117:
1294:.\Generated_Source\PSoC4/UART.c ****                     UART_txBufferWrite;
1295:.\Generated_Source\PSoC4/UART.c ****         }
1296:.\Generated_Source\PSoC4/UART.c **** 
1297:.\Generated_Source\PSoC4/UART.c ****         UART_EnableTxInt();
 1272              		.loc 1 1297 0
 1273 0036 0220     		mov	r0, #2
 1274 0038 FFF7FEFF 		bl	CyIntEnable
 1275              	.LVL118:
1298:.\Generated_Source\PSoC4/UART.c **** 
1299:.\Generated_Source\PSoC4/UART.c ****     #else
1300:.\Generated_Source\PSoC4/UART.c **** 
1301:.\Generated_Source\PSoC4/UART.c ****         size = UART_TXSTATUS_REG;
1302:.\Generated_Source\PSoC4/UART.c **** 
1303:.\Generated_Source\PSoC4/UART.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC4/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:.\Generated_Source\PSoC4/UART.c ****         {
1306:.\Generated_Source\PSoC4/UART.c ****             size = UART_FIFO_LENGTH;
1307:.\Generated_Source\PSoC4/UART.c ****         }
1308:.\Generated_Source\PSoC4/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:.\Generated_Source\PSoC4/UART.c ****         {
1310:.\Generated_Source\PSoC4/UART.c ****             size = 0u;
1311:.\Generated_Source\PSoC4/UART.c ****         }
1312:.\Generated_Source\PSoC4/UART.c ****         else
1313:.\Generated_Source\PSoC4/UART.c ****         {
1314:.\Generated_Source\PSoC4/UART.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC4/UART.c ****             size = 1u;
1316:.\Generated_Source\PSoC4/UART.c ****         }
1317:.\Generated_Source\PSoC4/UART.c **** 
1318:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC4/UART.c **** 
1320:.\Generated_Source\PSoC4/UART.c ****     return(size);
1321:.\Generated_Source\PSoC4/UART.c ****     }
 1276              		.loc 1 1321 0
 1277 003c 201C     		mov	r0, r4
 1278              		@ sp needed
 1279              	.LVL119:
 1280 003e 10BD     		pop	{r4, pc}
 1281              	.L107:
 1282              		.align	2
 1283              	.L106:
 1284 0040 00000000 		.word	.LANCHOR0
 1285              		.cfi_endproc
 1286              	.LFE23:
 1287              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 47


 1288              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1289              		.align	2
 1290              		.global	UART_ClearTxBuffer
 1291              		.code	16
 1292              		.thumb_func
 1293              		.type	UART_ClearTxBuffer, %function
 1294              	UART_ClearTxBuffer:
 1295              	.LFB24:
1322:.\Generated_Source\PSoC4/UART.c **** 
1323:.\Generated_Source\PSoC4/UART.c **** 
1324:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC4/UART.c ****     *
1328:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1329:.\Generated_Source\PSoC4/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC4/UART.c ****     *
1331:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1332:.\Generated_Source\PSoC4/UART.c ****     *  None.
1333:.\Generated_Source\PSoC4/UART.c ****     *
1334:.\Generated_Source\PSoC4/UART.c ****     * Return:
1335:.\Generated_Source\PSoC4/UART.c ****     *  None.
1336:.\Generated_Source\PSoC4/UART.c ****     *
1337:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1338:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC4/UART.c ****     *
1341:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1342:.\Generated_Source\PSoC4/UART.c ****     *  No.
1343:.\Generated_Source\PSoC4/UART.c ****     *
1344:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1345:.\Generated_Source\PSoC4/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC4/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC4/UART.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC4/UART.c ****     *
1349:.\Generated_Source\PSoC4/UART.c ****     * Side Effects:
1350:.\Generated_Source\PSoC4/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC4/UART.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC4/UART.c ****     *
1353:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC4/UART.c ****     void UART_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC4/UART.c ****     {
 1296              		.loc 1 1355 0
 1297              		.cfi_startproc
 1298 0000 08B5     		push	{r3, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 3, -8
 1301              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC4/UART.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC4/UART.c **** 
1358:.\Generated_Source\PSoC4/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1302              		.loc 1 1358 0
 1303 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1304              	.LVL120:
1359:.\Generated_Source\PSoC4/UART.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1305              		.loc 1 1360 0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 48


 1306 0006 0B4B     		ldr	r3, .L109
 1307 0008 1978     		ldrb	r1, [r3]
 1308 000a 0122     		mov	r2, #1
 1309 000c 0A43     		orr	r2, r1
 1310 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1311              		.loc 1 1361 0
 1312 0010 1A78     		ldrb	r2, [r3]
 1313 0012 0121     		mov	r1, #1
 1314 0014 8A43     		bic	r2, r1
 1315 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC4/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1316              		.loc 1 1362 0
 1317 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1318              	.LVL121:
1363:.\Generated_Source\PSoC4/UART.c **** 
1364:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC4/UART.c **** 
1366:.\Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC4/UART.c ****         UART_DisableTxInt();
 1319              		.loc 1 1367 0
 1320 001c 0220     		mov	r0, #2
 1321 001e FFF7FEFF 		bl	CyIntDisable
 1322              	.LVL122:
1368:.\Generated_Source\PSoC4/UART.c **** 
1369:.\Generated_Source\PSoC4/UART.c ****         UART_txBufferRead = 0u;
 1323              		.loc 1 1369 0
 1324 0022 054B     		ldr	r3, .L109+4
 1325 0024 0022     		mov	r2, #0
 1326 0026 9A71     		strb	r2, [r3, #6]
1370:.\Generated_Source\PSoC4/UART.c ****         UART_txBufferWrite = 0u;
 1327              		.loc 1 1370 0
 1328 0028 DA71     		strb	r2, [r3, #7]
1371:.\Generated_Source\PSoC4/UART.c **** 
1372:.\Generated_Source\PSoC4/UART.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC4/UART.c ****         UART_EnableTxInt();
 1329              		.loc 1 1373 0
 1330 002a 0220     		mov	r0, #2
 1331 002c FFF7FEFF 		bl	CyIntEnable
 1332              	.LVL123:
1374:.\Generated_Source\PSoC4/UART.c **** 
1375:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC4/UART.c ****     }
 1333              		.loc 1 1376 0
 1334              		@ sp needed
 1335 0030 08BD     		pop	{r3, pc}
 1336              	.L110:
 1337 0032 C046     		.align	2
 1338              	.L109:
 1339 0034 91000F40 		.word	1074725009
 1340 0038 00000000 		.word	.LANCHOR0
 1341              		.cfi_endproc
 1342              	.LFE24:
 1343              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1344              		.section	.text.UART_SendBreak,"ax",%progbits
 1345              		.align	2
 1346              		.global	UART_SendBreak
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 49


 1347              		.code	16
 1348              		.thumb_func
 1349              		.type	UART_SendBreak, %function
 1350              	UART_SendBreak:
 1351              	.LFB25:
1377:.\Generated_Source\PSoC4/UART.c **** 
1378:.\Generated_Source\PSoC4/UART.c **** 
1379:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SendBreak
1381:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC4/UART.c ****     *
1383:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1384:.\Generated_Source\PSoC4/UART.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC4/UART.c ****     *
1386:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1387:.\Generated_Source\PSoC4/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC4/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC4/UART.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC4/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC4/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC4/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC4/UART.c ****     *       then return.
1394:.\Generated_Source\PSoC4/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC4/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC4/UART.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC4/UART.c ****     *
1398:.\Generated_Source\PSoC4/UART.c ****     * Return:
1399:.\Generated_Source\PSoC4/UART.c ****     *  None.
1400:.\Generated_Source\PSoC4/UART.c ****     *
1401:.\Generated_Source\PSoC4/UART.c ****     * Global Variables:
1402:.\Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC4/UART.c ****     *     initialized.
1404:.\Generated_Source\PSoC4/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC4/UART.c ****     *
1406:.\Generated_Source\PSoC4/UART.c ****     * Reentrant:
1407:.\Generated_Source\PSoC4/UART.c ****     *  No.
1408:.\Generated_Source\PSoC4/UART.c ****     *
1409:.\Generated_Source\PSoC4/UART.c ****     * Theory:
1410:.\Generated_Source\PSoC4/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC4/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC4/UART.c ****     *  operation.
1413:.\Generated_Source\PSoC4/UART.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC4/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC4/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC4/UART.c ****     *     complete.
1417:.\Generated_Source\PSoC4/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC4/UART.c ****     *     operation
1419:.\Generated_Source\PSoC4/UART.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC4/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC4/UART.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC4/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC4/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC4/UART.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC4/UART.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC4/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC4/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC4/UART.c ****     *         Add your code here to use CPU time
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 50


1429:.\Generated_Source\PSoC4/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC4/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC4/UART.c ****     *
1432:.\Generated_Source\PSoC4/UART.c ****     * Side Effects:
1433:.\Generated_Source\PSoC4/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC4/UART.c ****     *  break signal.
1435:.\Generated_Source\PSoC4/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC4/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC4/UART.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC4/UART.c ****     *
1439:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC4/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC4/UART.c ****     {
 1352              		.loc 1 1441 0
 1353              		.cfi_startproc
 1354              	.LVL124:
1442:.\Generated_Source\PSoC4/UART.c **** 
1443:.\Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 1355              		.loc 1 1444 0
 1356 0000 124B     		ldr	r3, .L118
 1357 0002 5B78     		ldrb	r3, [r3, #1]
 1358 0004 002B     		cmp	r3, #0
 1359 0006 1FD0     		beq	.L111
 1360              	.LBB2:
1445:.\Generated_Source\PSoC4/UART.c ****         {
1446:.\Generated_Source\PSoC4/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC4/UART.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC4/UART.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC4/UART.c **** 
1450:.\Generated_Source\PSoC4/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC4/UART.c **** 
1452:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC4/UART.c ****             {
1455:.\Generated_Source\PSoC4/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:.\Generated_Source\PSoC4/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC4/UART.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC4/UART.c **** 
1461:.\Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC4/UART.c ****                 {
1463:.\Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:.\Generated_Source\PSoC4/UART.c ****                 }
1465:.\Generated_Source\PSoC4/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC4/UART.c ****             }
1467:.\Generated_Source\PSoC4/UART.c **** 
1468:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC4/UART.c ****             {
1471:.\Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC4/UART.c ****                 {
1473:.\Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:.\Generated_Source\PSoC4/UART.c ****                 }
1475:.\Generated_Source\PSoC4/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC4/UART.c ****             }
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 51


1477:.\Generated_Source\PSoC4/UART.c **** 
1478:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
1480:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC4/UART.c ****             {
1482:.\Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:.\Generated_Source\PSoC4/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC4/UART.c ****             }
1485:.\Generated_Source\PSoC4/UART.c **** 
1486:.\Generated_Source\PSoC4/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC4/UART.c **** 
1488:.\Generated_Source\PSoC4/UART.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC4/UART.c **** 
1490:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1361              		.loc 1 1490 0
 1362 0008 0028     		cmp	r0, #0
 1363 000a 01D0     		beq	.L113
 1364              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1365 000c 0328     		cmp	r0, #3
 1366 000e 0CD1     		bne	.L114
 1367              	.L113:
1491:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC4/UART.c ****             {
1493:.\Generated_Source\PSoC4/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC4/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC4/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC4/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:.\Generated_Source\PSoC4/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC4/UART.c **** 
1500:.\Generated_Source\PSoC4/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC4/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1368              		.loc 1 1501 0 is_stmt 1
 1369 0010 0F4B     		ldr	r3, .L118+4
 1370 0012 1978     		ldrb	r1, [r3]
 1371 0014 0D4A     		ldr	r2, .L118
 1372 0016 1172     		strb	r1, [r2, #8]
1502:.\Generated_Source\PSoC4/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1373              		.loc 1 1502 0
 1374 0018 CF22     		mov	r2, #207
 1375 001a 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC4/UART.c ****                 #else
1504:.\Generated_Source\PSoC4/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC4/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC4/UART.c **** 
1508:.\Generated_Source\PSoC4/UART.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = 0u;
 1376              		.loc 1 1509 0
 1377 001c 0022     		mov	r2, #0
 1378 001e 0D4B     		ldr	r3, .L118+8
 1379 0020 1A70     		strb	r2, [r3]
 1380              	.L115:
1510:.\Generated_Source\PSoC4/UART.c **** 
1511:.\Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC4/UART.c ****                 {
1513:.\Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 52


 1381              		.loc 1 1513 0 discriminator 1
 1382 0022 0D4B     		ldr	r3, .L118+12
 1383 0024 1B78     		ldrb	r3, [r3]
 1384              	.LVL125:
1514:.\Generated_Source\PSoC4/UART.c ****                 }
1515:.\Generated_Source\PSoC4/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1385              		.loc 1 1515 0 discriminator 1
 1386 0026 9B07     		lsl	r3, r3, #30
 1387 0028 FBD4     		bmi	.L115
 1388              	.LVL126:
 1389              	.L114:
1516:.\Generated_Source\PSoC4/UART.c ****             }
1517:.\Generated_Source\PSoC4/UART.c **** 
1518:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1390              		.loc 1 1518 0
 1391 002a 0128     		cmp	r0, #1
 1392 002c 01D0     		beq	.L116
 1393              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1394 002e 0328     		cmp	r0, #3
 1395 0030 03D1     		bne	.L117
 1396              	.L116:
1519:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC4/UART.c ****             {
1521:.\Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC4/UART.c ****                 {
1523:.\Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1397              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1398 0032 094B     		ldr	r3, .L118+12
 1399 0034 1B78     		ldrb	r3, [r3]
 1400              	.LVL127:
1524:.\Generated_Source\PSoC4/UART.c ****                 }
1525:.\Generated_Source\PSoC4/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1401              		.loc 1 1525 0 discriminator 1
 1402 0036 DB07     		lsl	r3, r3, #31
 1403 0038 FBD5     		bpl	.L116
 1404              	.LVL128:
 1405              	.L117:
1526:.\Generated_Source\PSoC4/UART.c ****             }
1527:.\Generated_Source\PSoC4/UART.c **** 
1528:.\Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
 1406              		.loc 1 1529 0
 1407 003a 0138     		sub	r0, r0, #1
 1408              	.LVL129:
1528:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
 1409              		.loc 1 1528 0
 1410 003c 0228     		cmp	r0, #2
 1411 003e 03D8     		bhi	.L111
1530:.\Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC4/UART.c ****             {
1532:.\Generated_Source\PSoC4/UART.c **** 
1533:.\Generated_Source\PSoC4/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC4/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1412              		.loc 1 1534 0
 1413 0040 024B     		ldr	r3, .L118
 1414 0042 1A7A     		ldrb	r2, [r3, #8]
 1415 0044 024B     		ldr	r3, .L118+4
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 53


 1416 0046 1A70     		strb	r2, [r3]
 1417              	.L111:
 1418              	.LBE2:
1535:.\Generated_Source\PSoC4/UART.c ****             #else
1536:.\Generated_Source\PSoC4/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC4/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC4/UART.c **** 
1539:.\Generated_Source\PSoC4/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC4/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:.\Generated_Source\PSoC4/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC4/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC4/UART.c ****             }
1545:.\Generated_Source\PSoC4/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:.\Generated_Source\PSoC4/UART.c ****         }
1547:.\Generated_Source\PSoC4/UART.c ****     }
 1419              		.loc 1 1547 0
 1420              		@ sp needed
 1421 0048 7047     		bx	lr
 1422              	.L119:
 1423 004a C046     		.align	2
 1424              	.L118:
 1425 004c 00000000 		.word	.LANCHOR0
 1426 0050 32000F40 		.word	1074724914
 1427 0054 41000F40 		.word	1074724929
 1428 0058 61000F40 		.word	1074724961
 1429              		.cfi_endproc
 1430              	.LFE25:
 1431              		.size	UART_SendBreak, .-UART_SendBreak
 1432              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1433              		.align	2
 1434              		.global	UART_SetTxAddressMode
 1435              		.code	16
 1436              		.thumb_func
 1437              		.type	UART_SetTxAddressMode, %function
 1438              	UART_SetTxAddressMode:
 1439              	.LFB26:
1548:.\Generated_Source\PSoC4/UART.c **** 
1549:.\Generated_Source\PSoC4/UART.c **** 
1550:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC4/UART.c ****     *
1554:.\Generated_Source\PSoC4/UART.c ****     * Summary:
1555:.\Generated_Source\PSoC4/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC4/UART.c ****     *
1557:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
1558:.\Generated_Source\PSoC4/UART.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC4/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC4/UART.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC4/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC4/UART.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC4/UART.c ****     *
1564:.\Generated_Source\PSoC4/UART.c ****     * Return:
1565:.\Generated_Source\PSoC4/UART.c ****     *  None.
1566:.\Generated_Source\PSoC4/UART.c ****     *
1567:.\Generated_Source\PSoC4/UART.c ****     * Side Effects:
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 54


1568:.\Generated_Source\PSoC4/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC4/UART.c ****     *  register.
1570:.\Generated_Source\PSoC4/UART.c ****     *
1571:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC4/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC4/UART.c ****     {
 1440              		.loc 1 1573 0
 1441              		.cfi_startproc
 1442              	.LVL130:
1574:.\Generated_Source\PSoC4/UART.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC4/UART.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC4/UART.c ****         {
1577:.\Generated_Source\PSoC4/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC4/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
1579:.\Generated_Source\PSoC4/UART.c ****                                                   UART_CTRL_MARK);
1580:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC4/UART.c ****         }
1582:.\Generated_Source\PSoC4/UART.c ****         else
1583:.\Generated_Source\PSoC4/UART.c ****         {
1584:.\Generated_Source\PSoC4/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC4/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
1586:.\Generated_Source\PSoC4/UART.c ****                                                   (uint8) ~UART_CTRL_MARK);
1587:.\Generated_Source\PSoC4/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC4/UART.c ****         }
1589:.\Generated_Source\PSoC4/UART.c ****     }
 1443              		.loc 1 1589 0
 1444              		@ sp needed
 1445 0000 7047     		bx	lr
 1446              		.cfi_endproc
 1447              	.LFE26:
 1448              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1449              		.global	UART_rxBufferOverflow
 1450              		.global	UART_rxBufferLoopDetect
 1451              		.global	UART_rxBufferWrite
 1452              		.global	UART_rxBufferRead
 1453              		.comm	UART_rxBuffer,255,4
 1454              		.global	UART_errorStatus
 1455              		.global	UART_txBufferWrite
 1456              		.global	UART_txBufferRead
 1457              		.comm	UART_txBuffer,255,4
 1458              		.global	UART_initVar
 1459 0002 C046     		.bss
 1460              		.set	.LANCHOR0,. + 0
 1461              		.type	UART_errorStatus, %object
 1462              		.size	UART_errorStatus, 1
 1463              	UART_errorStatus:
 1464 0000 00       		.space	1
 1465              		.type	UART_initVar, %object
 1466              		.size	UART_initVar, 1
 1467              	UART_initVar:
 1468 0001 00       		.space	1
 1469              		.type	UART_rxBufferRead, %object
 1470              		.size	UART_rxBufferRead, 1
 1471              	UART_rxBufferRead:
 1472 0002 00       		.space	1
 1473              		.type	UART_rxBufferWrite, %object
 1474              		.size	UART_rxBufferWrite, 1
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 55


 1475              	UART_rxBufferWrite:
 1476 0003 00       		.space	1
 1477              		.type	UART_rxBufferLoopDetect, %object
 1478              		.size	UART_rxBufferLoopDetect, 1
 1479              	UART_rxBufferLoopDetect:
 1480 0004 00       		.space	1
 1481              		.type	UART_rxBufferOverflow, %object
 1482              		.size	UART_rxBufferOverflow, 1
 1483              	UART_rxBufferOverflow:
 1484 0005 00       		.space	1
 1485              		.type	UART_txBufferRead, %object
 1486              		.size	UART_txBufferRead, 1
 1487              	UART_txBufferRead:
 1488 0006 00       		.space	1
 1489              		.type	UART_txBufferWrite, %object
 1490              		.size	UART_txBufferWrite, 1
 1491              	UART_txBufferWrite:
 1492 0007 00       		.space	1
 1493              		.type	txPeriod.4878, %object
 1494              		.size	txPeriod.4878, 1
 1495              	txPeriod.4878:
 1496 0008 00       		.space	1
 1497              		.text
 1498              	.Letext0:
 1499              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1500              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1501              		.file 4 ".\\Generated_Source\\PSoC4\\UART_IntClock.h"
 1502              		.section	.debug_info,"",%progbits
 1503              	.Ldebug_info0:
 1504 0000 7A090000 		.4byte	0x97a
 1505 0004 0400     		.2byte	0x4
 1506 0006 00000000 		.4byte	.Ldebug_abbrev0
 1507 000a 04       		.byte	0x4
 1508 000b 01       		.uleb128 0x1
 1509 000c 40030000 		.4byte	.LASF83
 1510 0010 01       		.byte	0x1
 1511 0011 8F020000 		.4byte	.LASF84
 1512 0015 87050000 		.4byte	.LASF85
 1513 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1514 001d 00000000 		.4byte	0
 1515 0021 00000000 		.4byte	.Ldebug_line0
 1516 0025 02       		.uleb128 0x2
 1517 0026 01       		.byte	0x1
 1518 0027 06       		.byte	0x6
 1519 0028 B2000000 		.4byte	.LASF0
 1520 002c 02       		.uleb128 0x2
 1521 002d 01       		.byte	0x1
 1522 002e 08       		.byte	0x8
 1523 002f 39040000 		.4byte	.LASF1
 1524 0033 02       		.uleb128 0x2
 1525 0034 02       		.byte	0x2
 1526 0035 05       		.byte	0x5
 1527 0036 58040000 		.4byte	.LASF2
 1528 003a 02       		.uleb128 0x2
 1529 003b 02       		.byte	0x2
 1530 003c 07       		.byte	0x7
 1531 003d 44020000 		.4byte	.LASF3
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 56


 1532 0041 02       		.uleb128 0x2
 1533 0042 04       		.byte	0x4
 1534 0043 05       		.byte	0x5
 1535 0044 C7000000 		.4byte	.LASF4
 1536 0048 02       		.uleb128 0x2
 1537 0049 04       		.byte	0x4
 1538 004a 07       		.byte	0x7
 1539 004b CF010000 		.4byte	.LASF5
 1540 004f 02       		.uleb128 0x2
 1541 0050 08       		.byte	0x8
 1542 0051 05       		.byte	0x5
 1543 0052 A4000000 		.4byte	.LASF6
 1544 0056 02       		.uleb128 0x2
 1545 0057 08       		.byte	0x8
 1546 0058 07       		.byte	0x7
 1547 0059 42000000 		.4byte	.LASF7
 1548 005d 03       		.uleb128 0x3
 1549 005e 04       		.byte	0x4
 1550 005f 05       		.byte	0x5
 1551 0060 696E7400 		.ascii	"int\000"
 1552 0064 02       		.uleb128 0x2
 1553 0065 04       		.byte	0x4
 1554 0066 07       		.byte	0x7
 1555 0067 93010000 		.4byte	.LASF8
 1556 006b 04       		.uleb128 0x4
 1557 006c FA000000 		.4byte	.LASF9
 1558 0070 02       		.byte	0x2
 1559 0071 C2       		.byte	0xc2
 1560 0072 2C000000 		.4byte	0x2c
 1561 0076 04       		.uleb128 0x4
 1562 0077 00000000 		.4byte	.LASF10
 1563 007b 02       		.byte	0x2
 1564 007c C3       		.byte	0xc3
 1565 007d 3A000000 		.4byte	0x3a
 1566 0081 02       		.uleb128 0x2
 1567 0082 04       		.byte	0x4
 1568 0083 04       		.byte	0x4
 1569 0084 03040000 		.4byte	.LASF11
 1570 0088 02       		.uleb128 0x2
 1571 0089 08       		.byte	0x8
 1572 008a 04       		.byte	0x4
 1573 008b 19010000 		.4byte	.LASF12
 1574 008f 04       		.uleb128 0x4
 1575 0090 BE040000 		.4byte	.LASF13
 1576 0094 02       		.byte	0x2
 1577 0095 D3       		.byte	0xd3
 1578 0096 9A000000 		.4byte	0x9a
 1579 009a 02       		.uleb128 0x2
 1580 009b 01       		.byte	0x1
 1581 009c 08       		.byte	0x8
 1582 009d AC040000 		.4byte	.LASF14
 1583 00a1 05       		.uleb128 0x5
 1584 00a2 1E040000 		.4byte	.LASF15
 1585 00a6 02       		.byte	0x2
 1586 00a7 6C01     		.2byte	0x16c
 1587 00a9 AD000000 		.4byte	0xad
 1588 00ad 06       		.uleb128 0x6
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 57


 1589 00ae 6B000000 		.4byte	0x6b
 1590 00b2 05       		.uleb128 0x5
 1591 00b3 B1040000 		.4byte	.LASF16
 1592 00b7 02       		.byte	0x2
 1593 00b8 7E01     		.2byte	0x17e
 1594 00ba BE000000 		.4byte	0xbe
 1595 00be 07       		.uleb128 0x7
 1596 00bf 04       		.byte	0x4
 1597 00c0 C4000000 		.4byte	0xc4
 1598 00c4 08       		.uleb128 0x8
 1599 00c5 02       		.uleb128 0x2
 1600 00c6 04       		.byte	0x4
 1601 00c7 07       		.byte	0x7
 1602 00c8 DD020000 		.4byte	.LASF17
 1603 00cc 09       		.uleb128 0x9
 1604 00cd 66010000 		.4byte	.LASF18
 1605 00d1 01       		.byte	0x1
 1606 00d2 6A       		.byte	0x6a
 1607 00d3 00000000 		.4byte	.LFB1
 1608 00d7 68000000 		.4byte	.LFE1-.LFB1
 1609 00db 01       		.uleb128 0x1
 1610 00dc 9C       		.byte	0x9c
 1611 00dd 34010000 		.4byte	0x134
 1612 00e1 0A       		.uleb128 0xa
 1613 00e2 0A000000 		.4byte	.LVL0
 1614 00e6 E3080000 		.4byte	0x8e3
 1615 00ea F4000000 		.4byte	0xf4
 1616 00ee 0B       		.uleb128 0xb
 1617 00ef 01       		.uleb128 0x1
 1618 00f0 50       		.byte	0x50
 1619 00f1 01       		.uleb128 0x1
 1620 00f2 30       		.byte	0x30
 1621 00f3 00       		.byte	0
 1622 00f4 0A       		.uleb128 0xa
 1623 00f5 12000000 		.4byte	.LVL1
 1624 00f9 FD080000 		.4byte	0x8fd
 1625 00fd 0C010000 		.4byte	0x10c
 1626 0101 0B       		.uleb128 0xb
 1627 0102 01       		.uleb128 0x1
 1628 0103 51       		.byte	0x51
 1629 0104 01       		.uleb128 0x1
 1630 0105 33       		.byte	0x33
 1631 0106 0B       		.uleb128 0xb
 1632 0107 01       		.uleb128 0x1
 1633 0108 50       		.byte	0x50
 1634 0109 01       		.uleb128 0x1
 1635 010a 30       		.byte	0x30
 1636 010b 00       		.byte	0
 1637 010c 0A       		.uleb128 0xa
 1638 010d 2C000000 		.4byte	.LVL2
 1639 0111 E3080000 		.4byte	0x8e3
 1640 0115 1F010000 		.4byte	0x11f
 1641 0119 0B       		.uleb128 0xb
 1642 011a 01       		.uleb128 0x1
 1643 011b 50       		.byte	0x50
 1644 011c 01       		.uleb128 0x1
 1645 011d 32       		.byte	0x32
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 58


 1646 011e 00       		.byte	0
 1647 011f 0C       		.uleb128 0xc
 1648 0120 34000000 		.4byte	.LVL3
 1649 0124 FD080000 		.4byte	0x8fd
 1650 0128 0B       		.uleb128 0xb
 1651 0129 01       		.uleb128 0x1
 1652 012a 51       		.byte	0x51
 1653 012b 01       		.uleb128 0x1
 1654 012c 33       		.byte	0x33
 1655 012d 0B       		.uleb128 0xb
 1656 012e 01       		.uleb128 0x1
 1657 012f 50       		.byte	0x50
 1658 0130 01       		.uleb128 0x1
 1659 0131 32       		.byte	0x32
 1660 0132 00       		.byte	0
 1661 0133 00       		.byte	0
 1662 0134 09       		.uleb128 0x9
 1663 0135 8E040000 		.4byte	.LASF19
 1664 0139 01       		.byte	0x1
 1665 013a B7       		.byte	0xb7
 1666 013b 00000000 		.4byte	.LFB2
 1667 013f 54000000 		.4byte	.LFE2-.LFB2
 1668 0143 01       		.uleb128 0x1
 1669 0144 9C       		.byte	0x9c
 1670 0145 B4010000 		.4byte	0x1b4
 1671 0149 0D       		.uleb128 0xd
 1672 014a F9040000 		.4byte	.LASF22
 1673 014e 01       		.byte	0x1
 1674 014f B9       		.byte	0xb9
 1675 0150 6B000000 		.4byte	0x6b
 1676 0154 00000000 		.4byte	.LLST0
 1677 0158 0E       		.uleb128 0xe
 1678 0159 06000000 		.4byte	.LVL4
 1679 015d 13090000 		.4byte	0x913
 1680 0161 0A       		.uleb128 0xa
 1681 0162 24000000 		.4byte	.LVL6
 1682 0166 1E090000 		.4byte	0x91e
 1683 016a 74010000 		.4byte	0x174
 1684 016e 0B       		.uleb128 0xb
 1685 016f 01       		.uleb128 0x1
 1686 0170 50       		.byte	0x50
 1687 0171 01       		.uleb128 0x1
 1688 0172 30       		.byte	0x30
 1689 0173 00       		.byte	0
 1690 0174 0A       		.uleb128 0xa
 1691 0175 34000000 		.4byte	.LVL7
 1692 0179 2F090000 		.4byte	0x92f
 1693 017d 87010000 		.4byte	0x187
 1694 0181 0B       		.uleb128 0xb
 1695 0182 01       		.uleb128 0x1
 1696 0183 50       		.byte	0x50
 1697 0184 01       		.uleb128 0x1
 1698 0185 32       		.byte	0x32
 1699 0186 00       		.byte	0
 1700 0187 0A       		.uleb128 0xa
 1701 0188 3A000000 		.4byte	.LVL8
 1702 018c 1E090000 		.4byte	0x91e
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 59


 1703 0190 9A010000 		.4byte	0x19a
 1704 0194 0B       		.uleb128 0xb
 1705 0195 01       		.uleb128 0x1
 1706 0196 50       		.byte	0x50
 1707 0197 01       		.uleb128 0x1
 1708 0198 32       		.byte	0x32
 1709 0199 00       		.byte	0
 1710 019a 0E       		.uleb128 0xe
 1711 019b 3E000000 		.4byte	.LVL9
 1712 019f 40090000 		.4byte	0x940
 1713 01a3 0C       		.uleb128 0xc
 1714 01a4 44000000 		.4byte	.LVL10
 1715 01a8 47090000 		.4byte	0x947
 1716 01ac 0B       		.uleb128 0xb
 1717 01ad 01       		.uleb128 0x1
 1718 01ae 50       		.byte	0x50
 1719 01af 02       		.uleb128 0x2
 1720 01b0 75       		.byte	0x75
 1721 01b1 00       		.sleb128 0
 1722 01b2 00       		.byte	0
 1723 01b3 00       		.byte	0
 1724 01b4 09       		.uleb128 0x9
 1725 01b5 59000000 		.4byte	.LASF20
 1726 01b9 01       		.byte	0x1
 1727 01ba 4C       		.byte	0x4c
 1728 01bb 00000000 		.4byte	.LFB0
 1729 01bf 20000000 		.4byte	.LFE0-.LFB0
 1730 01c3 01       		.uleb128 0x1
 1731 01c4 9C       		.byte	0x9c
 1732 01c5 DC010000 		.4byte	0x1dc
 1733 01c9 0E       		.uleb128 0xe
 1734 01ca 0E000000 		.4byte	.LVL12
 1735 01ce CC000000 		.4byte	0xcc
 1736 01d2 0E       		.uleb128 0xe
 1737 01d3 18000000 		.4byte	.LVL13
 1738 01d7 34010000 		.4byte	0x134
 1739 01db 00       		.byte	0
 1740 01dc 09       		.uleb128 0x9
 1741 01dd 33050000 		.4byte	.LASF21
 1742 01e1 01       		.byte	0x1
 1743 01e2 F0       		.byte	0xf0
 1744 01e3 00000000 		.4byte	.LFB3
 1745 01e7 48000000 		.4byte	.LFE3-.LFB3
 1746 01eb 01       		.uleb128 0x1
 1747 01ec 9C       		.byte	0x9c
 1748 01ed 49020000 		.4byte	0x249
 1749 01f1 0D       		.uleb128 0xd
 1750 01f2 F9040000 		.4byte	.LASF22
 1751 01f6 01       		.byte	0x1
 1752 01f7 F2       		.byte	0xf2
 1753 01f8 6B000000 		.4byte	0x6b
 1754 01fc 13000000 		.4byte	.LLST1
 1755 0200 0E       		.uleb128 0xe
 1756 0201 06000000 		.4byte	.LVL14
 1757 0205 13090000 		.4byte	0x913
 1758 0209 0E       		.uleb128 0xe
 1759 020a 16000000 		.4byte	.LVL16
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 60


 1760 020e 58090000 		.4byte	0x958
 1761 0212 0A       		.uleb128 0xa
 1762 0213 26000000 		.4byte	.LVL17
 1763 0217 5F090000 		.4byte	0x95f
 1764 021b 25020000 		.4byte	0x225
 1765 021f 0B       		.uleb128 0xb
 1766 0220 01       		.uleb128 0x1
 1767 0221 50       		.byte	0x50
 1768 0222 01       		.uleb128 0x1
 1769 0223 30       		.byte	0x30
 1770 0224 00       		.byte	0
 1771 0225 0A       		.uleb128 0xa
 1772 0226 34000000 		.4byte	.LVL18
 1773 022a 5F090000 		.4byte	0x95f
 1774 022e 38020000 		.4byte	0x238
 1775 0232 0B       		.uleb128 0xb
 1776 0233 01       		.uleb128 0x1
 1777 0234 50       		.byte	0x50
 1778 0235 01       		.uleb128 0x1
 1779 0236 32       		.byte	0x32
 1780 0237 00       		.byte	0
 1781 0238 0C       		.uleb128 0xc
 1782 0239 3A000000 		.4byte	.LVL19
 1783 023d 47090000 		.4byte	0x947
 1784 0241 0B       		.uleb128 0xb
 1785 0242 01       		.uleb128 0x1
 1786 0243 50       		.byte	0x50
 1787 0244 02       		.uleb128 0x2
 1788 0245 74       		.byte	0x74
 1789 0246 00       		.sleb128 0
 1790 0247 00       		.byte	0
 1791 0248 00       		.byte	0
 1792 0249 0F       		.uleb128 0xf
 1793 024a 00010000 		.4byte	.LASF48
 1794 024e 01       		.byte	0x1
 1795 024f 2701     		.2byte	0x127
 1796 0251 6B000000 		.4byte	0x6b
 1797 0255 00000000 		.4byte	.LFB4
 1798 0259 04000000 		.4byte	.LFE4-.LFB4
 1799 025d 01       		.uleb128 0x1
 1800 025e 9C       		.byte	0x9c
 1801 025f 10       		.uleb128 0x10
 1802 0260 5A050000 		.4byte	.LASF23
 1803 0264 01       		.byte	0x1
 1804 0265 3F01     		.2byte	0x13f
 1805 0267 00000000 		.4byte	.LFB5
 1806 026b 02000000 		.4byte	.LFE5-.LFB5
 1807 026f 01       		.uleb128 0x1
 1808 0270 9C       		.byte	0x9c
 1809 0271 84020000 		.4byte	0x284
 1810 0275 11       		.uleb128 0x11
 1811 0276 4E010000 		.4byte	.LASF25
 1812 027a 01       		.byte	0x1
 1813 027b 3F01     		.2byte	0x13f
 1814 027d 6B000000 		.4byte	0x6b
 1815 0281 01       		.uleb128 0x1
 1816 0282 50       		.byte	0x50
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 61


 1817 0283 00       		.byte	0
 1818 0284 10       		.uleb128 0x10
 1819 0285 C4040000 		.4byte	.LASF24
 1820 0289 01       		.byte	0x1
 1821 028a 6701     		.2byte	0x167
 1822 028c 00000000 		.4byte	.LFB6
 1823 0290 0C000000 		.4byte	.LFE6-.LFB6
 1824 0294 01       		.uleb128 0x1
 1825 0295 9C       		.byte	0x9c
 1826 0296 A9020000 		.4byte	0x2a9
 1827 029a 11       		.uleb128 0x11
 1828 029b 72020000 		.4byte	.LASF26
 1829 029f 01       		.byte	0x1
 1830 02a0 6701     		.2byte	0x167
 1831 02a2 6B000000 		.4byte	0x6b
 1832 02a6 01       		.uleb128 0x1
 1833 02a7 50       		.byte	0x50
 1834 02a8 00       		.byte	0
 1835 02a9 12       		.uleb128 0x12
 1836 02aa EA000000 		.4byte	.LASF30
 1837 02ae 01       		.byte	0x1
 1838 02af 8801     		.2byte	0x188
 1839 02b1 6B000000 		.4byte	0x6b
 1840 02b5 00000000 		.4byte	.LFB7
 1841 02b9 5C000000 		.4byte	.LFE7-.LFB7
 1842 02bd 01       		.uleb128 0x1
 1843 02be 9C       		.byte	0x9c
 1844 02bf 16030000 		.4byte	0x316
 1845 02c3 13       		.uleb128 0x13
 1846 02c4 87040000 		.4byte	.LASF27
 1847 02c8 01       		.byte	0x1
 1848 02c9 8A01     		.2byte	0x18a
 1849 02cb 6B000000 		.4byte	0x6b
 1850 02cf 26000000 		.4byte	.LLST2
 1851 02d3 13       		.uleb128 0x13
 1852 02d4 E9040000 		.4byte	.LASF28
 1853 02d8 01       		.byte	0x1
 1854 02d9 8E01     		.2byte	0x18e
 1855 02db 6B000000 		.4byte	0x6b
 1856 02df 44000000 		.4byte	.LLST3
 1857 02e3 13       		.uleb128 0x13
 1858 02e4 26030000 		.4byte	.LASF29
 1859 02e8 01       		.byte	0x1
 1860 02e9 8F01     		.2byte	0x18f
 1861 02eb 6B000000 		.4byte	0x6b
 1862 02ef 89000000 		.4byte	.LLST4
 1863 02f3 0A       		.uleb128 0xa
 1864 02f4 08000000 		.4byte	.LVL23
 1865 02f8 5F090000 		.4byte	0x95f
 1866 02fc 06030000 		.4byte	0x306
 1867 0300 0B       		.uleb128 0xb
 1868 0301 01       		.uleb128 0x1
 1869 0302 50       		.byte	0x50
 1870 0303 01       		.uleb128 0x1
 1871 0304 30       		.byte	0x30
 1872 0305 00       		.byte	0
 1873 0306 0C       		.uleb128 0xc
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 62


 1874 0307 4A000000 		.4byte	.LVL35
 1875 030b 1E090000 		.4byte	0x91e
 1876 030f 0B       		.uleb128 0xb
 1877 0310 01       		.uleb128 0x1
 1878 0311 50       		.byte	0x50
 1879 0312 01       		.uleb128 0x1
 1880 0313 30       		.byte	0x30
 1881 0314 00       		.byte	0
 1882 0315 00       		.byte	0
 1883 0316 12       		.uleb128 0x12
 1884 0317 9A040000 		.4byte	.LASF31
 1885 031b 01       		.byte	0x1
 1886 031c E501     		.2byte	0x1e5
 1887 031e 6B000000 		.4byte	0x6b
 1888 0322 00000000 		.4byte	.LFB8
 1889 0326 24000000 		.4byte	.LFE8-.LFB8
 1890 032a 01       		.uleb128 0x1
 1891 032b 9C       		.byte	0x9c
 1892 032c 3F030000 		.4byte	0x33f
 1893 0330 14       		.uleb128 0x14
 1894 0331 2C050000 		.4byte	.LASF32
 1895 0335 01       		.byte	0x1
 1896 0336 E701     		.2byte	0x1e7
 1897 0338 6B000000 		.4byte	0x6b
 1898 033c 01       		.uleb128 0x1
 1899 033d 50       		.byte	0x50
 1900 033e 00       		.byte	0
 1901 033f 12       		.uleb128 0x12
 1902 0340 DC040000 		.4byte	.LASF33
 1903 0344 01       		.byte	0x1
 1904 0345 1402     		.2byte	0x214
 1905 0347 6B000000 		.4byte	0x6b
 1906 034b 00000000 		.4byte	.LFB9
 1907 034f 78000000 		.4byte	.LFE9-.LFB9
 1908 0353 01       		.uleb128 0x1
 1909 0354 9C       		.byte	0x9c
 1910 0355 BC030000 		.4byte	0x3bc
 1911 0359 13       		.uleb128 0x13
 1912 035a 87040000 		.4byte	.LASF27
 1913 035e 01       		.byte	0x1
 1914 035f 1602     		.2byte	0x216
 1915 0361 6B000000 		.4byte	0x6b
 1916 0365 9C000000 		.4byte	.LLST5
 1917 0369 13       		.uleb128 0x13
 1918 036a 37030000 		.4byte	.LASF34
 1919 036e 01       		.byte	0x1
 1920 036f 1702     		.2byte	0x217
 1921 0371 6B000000 		.4byte	0x6b
 1922 0375 E9000000 		.4byte	.LLST6
 1923 0379 13       		.uleb128 0x13
 1924 037a E9040000 		.4byte	.LASF28
 1925 037e 01       		.byte	0x1
 1926 037f 1A02     		.2byte	0x21a
 1927 0381 6B000000 		.4byte	0x6b
 1928 0385 FC000000 		.4byte	.LLST7
 1929 0389 13       		.uleb128 0x13
 1930 038a 26030000 		.4byte	.LASF29
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 63


 1931 038e 01       		.byte	0x1
 1932 038f 1B02     		.2byte	0x21b
 1933 0391 6B000000 		.4byte	0x6b
 1934 0395 41010000 		.4byte	.LLST8
 1935 0399 0A       		.uleb128 0xa
 1936 039a 08000000 		.4byte	.LVL40
 1937 039e 5F090000 		.4byte	0x95f
 1938 03a2 AC030000 		.4byte	0x3ac
 1939 03a6 0B       		.uleb128 0xb
 1940 03a7 01       		.uleb128 0x1
 1941 03a8 50       		.byte	0x50
 1942 03a9 01       		.uleb128 0x1
 1943 03aa 30       		.byte	0x30
 1944 03ab 00       		.byte	0
 1945 03ac 0C       		.uleb128 0xc
 1946 03ad 62000000 		.4byte	.LVL56
 1947 03b1 1E090000 		.4byte	0x91e
 1948 03b5 0B       		.uleb128 0xb
 1949 03b6 01       		.uleb128 0x1
 1950 03b7 50       		.byte	0x50
 1951 03b8 01       		.uleb128 0x1
 1952 03b9 30       		.byte	0x30
 1953 03ba 00       		.byte	0
 1954 03bb 00       		.byte	0
 1955 03bc 12       		.uleb128 0x12
 1956 03bd 86010000 		.4byte	.LASF35
 1957 03c1 01       		.byte	0x1
 1958 03c2 7A02     		.2byte	0x27a
 1959 03c4 76000000 		.4byte	0x76
 1960 03c8 00000000 		.4byte	.LFB10
 1961 03cc 28000000 		.4byte	.LFE10-.LFB10
 1962 03d0 01       		.uleb128 0x1
 1963 03d1 9C       		.byte	0x9c
 1964 03d2 16040000 		.4byte	0x416
 1965 03d6 13       		.uleb128 0x13
 1966 03d7 C0010000 		.4byte	.LASF36
 1967 03db 01       		.byte	0x1
 1968 03dc 7E02     		.2byte	0x27e
 1969 03de 76000000 		.4byte	0x76
 1970 03e2 54010000 		.4byte	.LLST9
 1971 03e6 0A       		.uleb128 0xa
 1972 03e7 08000000 		.4byte	.LVL58
 1973 03eb 5F090000 		.4byte	0x95f
 1974 03ef F9030000 		.4byte	0x3f9
 1975 03f3 0B       		.uleb128 0xb
 1976 03f4 01       		.uleb128 0x1
 1977 03f5 50       		.byte	0x50
 1978 03f6 01       		.uleb128 0x1
 1979 03f7 30       		.byte	0x30
 1980 03f8 00       		.byte	0
 1981 03f9 0A       		.uleb128 0xa
 1982 03fa 16000000 		.4byte	.LVL60
 1983 03fe 1E090000 		.4byte	0x91e
 1984 0402 0C040000 		.4byte	0x40c
 1985 0406 0B       		.uleb128 0xb
 1986 0407 01       		.uleb128 0x1
 1987 0408 50       		.byte	0x50
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 64


 1988 0409 01       		.uleb128 0x1
 1989 040a 30       		.byte	0x30
 1990 040b 00       		.byte	0
 1991 040c 0E       		.uleb128 0xe
 1992 040d 1C000000 		.4byte	.LVL62
 1993 0411 A9020000 		.4byte	0x2a9
 1994 0415 00       		.byte	0
 1995 0416 12       		.uleb128 0x12
 1996 0417 17050000 		.4byte	.LASF37
 1997 041b 01       		.byte	0x1
 1998 041c AB02     		.2byte	0x2ab
 1999 041e 6B000000 		.4byte	0x6b
 2000 0422 00000000 		.4byte	.LFB11
 2001 0426 58000000 		.4byte	.LFE11-.LFB11
 2002 042a 01       		.uleb128 0x1
 2003 042b 9C       		.byte	0x9c
 2004 042c 63040000 		.4byte	0x463
 2005 0430 13       		.uleb128 0x13
 2006 0431 3F020000 		.4byte	.LASF38
 2007 0435 01       		.byte	0x1
 2008 0436 AE02     		.2byte	0x2ae
 2009 0438 6B000000 		.4byte	0x6b
 2010 043c 67010000 		.4byte	.LLST10
 2011 0440 0A       		.uleb128 0xa
 2012 0441 08000000 		.4byte	.LVL63
 2013 0445 5F090000 		.4byte	0x95f
 2014 0449 53040000 		.4byte	0x453
 2015 044d 0B       		.uleb128 0xb
 2016 044e 01       		.uleb128 0x1
 2017 044f 50       		.byte	0x50
 2018 0450 01       		.uleb128 0x1
 2019 0451 30       		.byte	0x30
 2020 0452 00       		.byte	0
 2021 0453 0C       		.uleb128 0xc
 2022 0454 4E000000 		.4byte	.LVL69
 2023 0458 1E090000 		.4byte	0x91e
 2024 045c 0B       		.uleb128 0xb
 2025 045d 01       		.uleb128 0x1
 2026 045e 50       		.byte	0x50
 2027 045f 01       		.uleb128 0x1
 2028 0460 30       		.byte	0x30
 2029 0461 00       		.byte	0
 2030 0462 00       		.byte	0
 2031 0463 10       		.uleb128 0x10
 2032 0464 74050000 		.4byte	.LASF39
 2033 0468 01       		.byte	0x1
 2034 0469 F502     		.2byte	0x2f5
 2035 046b 00000000 		.4byte	.LFB12
 2036 046f 40000000 		.4byte	.LFE12-.LFB12
 2037 0473 01       		.uleb128 0x1
 2038 0474 9C       		.byte	0x9c
 2039 0475 BE040000 		.4byte	0x4be
 2040 0479 13       		.uleb128 0x13
 2041 047a F9040000 		.4byte	.LASF22
 2042 047e 01       		.byte	0x1
 2043 047f F702     		.2byte	0x2f7
 2044 0481 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 65


 2045 0485 90010000 		.4byte	.LLST11
 2046 0489 0E       		.uleb128 0xe
 2047 048a 06000000 		.4byte	.LVL71
 2048 048e 13090000 		.4byte	0x913
 2049 0492 0E       		.uleb128 0xe
 2050 0493 1C000000 		.4byte	.LVL72
 2051 0497 47090000 		.4byte	0x947
 2052 049b 0A       		.uleb128 0xa
 2053 049c 22000000 		.4byte	.LVL73
 2054 04a0 5F090000 		.4byte	0x95f
 2055 04a4 AE040000 		.4byte	0x4ae
 2056 04a8 0B       		.uleb128 0xb
 2057 04a9 01       		.uleb128 0x1
 2058 04aa 50       		.byte	0x50
 2059 04ab 01       		.uleb128 0x1
 2060 04ac 30       		.byte	0x30
 2061 04ad 00       		.byte	0
 2062 04ae 0C       		.uleb128 0xc
 2063 04af 34000000 		.4byte	.LVL74
 2064 04b3 1E090000 		.4byte	0x91e
 2065 04b7 0B       		.uleb128 0xb
 2066 04b8 01       		.uleb128 0x1
 2067 04b9 50       		.byte	0x50
 2068 04ba 01       		.uleb128 0x1
 2069 04bb 30       		.byte	0x30
 2070 04bc 00       		.byte	0
 2071 04bd 00       		.byte	0
 2072 04be 10       		.uleb128 0x10
 2073 04bf 23040000 		.4byte	.LASF40
 2074 04c3 01       		.byte	0x1
 2075 04c4 2D03     		.2byte	0x32d
 2076 04c6 00000000 		.4byte	.LFB13
 2077 04ca 02000000 		.4byte	.LFE13-.LFB13
 2078 04ce 01       		.uleb128 0x1
 2079 04cf 9C       		.byte	0x9c
 2080 04d0 E3040000 		.4byte	0x4e3
 2081 04d4 11       		.uleb128 0x11
 2082 04d5 20010000 		.4byte	.LASF41
 2083 04d9 01       		.byte	0x1
 2084 04da 2D03     		.2byte	0x32d
 2085 04dc 6B000000 		.4byte	0x6b
 2086 04e0 01       		.uleb128 0x1
 2087 04e1 50       		.byte	0x50
 2088 04e2 00       		.byte	0
 2089 04e3 10       		.uleb128 0x10
 2090 04e4 00030000 		.4byte	.LASF42
 2091 04e8 01       		.byte	0x1
 2092 04e9 5903     		.2byte	0x359
 2093 04eb 00000000 		.4byte	.LFB14
 2094 04ef 0C000000 		.4byte	.LFE14-.LFB14
 2095 04f3 01       		.uleb128 0x1
 2096 04f4 9C       		.byte	0x9c
 2097 04f5 08050000 		.4byte	0x508
 2098 04f9 11       		.uleb128 0x11
 2099 04fa F8020000 		.4byte	.LASF43
 2100 04fe 01       		.byte	0x1
 2101 04ff 5903     		.2byte	0x359
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 66


 2102 0501 6B000000 		.4byte	0x6b
 2103 0505 01       		.uleb128 0x1
 2104 0506 50       		.byte	0x50
 2105 0507 00       		.byte	0
 2106 0508 10       		.uleb128 0x10
 2107 0509 13030000 		.4byte	.LASF44
 2108 050d 01       		.byte	0x1
 2109 050e 6D03     		.2byte	0x36d
 2110 0510 00000000 		.4byte	.LFB15
 2111 0514 0C000000 		.4byte	.LFE15-.LFB15
 2112 0518 01       		.uleb128 0x1
 2113 0519 9C       		.byte	0x9c
 2114 051a 2D050000 		.4byte	0x52d
 2115 051e 11       		.uleb128 0x11
 2116 051f F8020000 		.4byte	.LASF43
 2117 0523 01       		.byte	0x1
 2118 0524 6D03     		.2byte	0x36d
 2119 0526 6B000000 		.4byte	0x6b
 2120 052a 01       		.uleb128 0x1
 2121 052b 50       		.byte	0x50
 2122 052c 00       		.byte	0
 2123 052d 10       		.uleb128 0x10
 2124 052e 64000000 		.4byte	.LASF45
 2125 0532 01       		.byte	0x1
 2126 0533 8C03     		.2byte	0x38c
 2127 0535 00000000 		.4byte	.LFB16
 2128 0539 0C000000 		.4byte	.LFE16-.LFB16
 2129 053d 01       		.uleb128 0x1
 2130 053e 9C       		.byte	0x9c
 2131 053f 52050000 		.4byte	0x552
 2132 0543 11       		.uleb128 0x11
 2133 0544 72020000 		.4byte	.LASF26
 2134 0548 01       		.byte	0x1
 2135 0549 8C03     		.2byte	0x38c
 2136 054b 6B000000 		.4byte	0x6b
 2137 054f 01       		.uleb128 0x1
 2138 0550 50       		.byte	0x50
 2139 0551 00       		.byte	0
 2140 0552 10       		.uleb128 0x10
 2141 0553 47040000 		.4byte	.LASF46
 2142 0557 01       		.byte	0x1
 2143 0558 AE03     		.2byte	0x3ae
 2144 055a 00000000 		.4byte	.LFB17
 2145 055e 5C000000 		.4byte	.LFE17-.LFB17
 2146 0562 01       		.uleb128 0x1
 2147 0563 9C       		.byte	0x9c
 2148 0564 9B050000 		.4byte	0x59b
 2149 0568 15       		.uleb128 0x15
 2150 0569 1D000000 		.4byte	.LASF47
 2151 056d 01       		.byte	0x1
 2152 056e AE03     		.2byte	0x3ae
 2153 0570 6B000000 		.4byte	0x6b
 2154 0574 A3010000 		.4byte	.LLST12
 2155 0578 0A       		.uleb128 0xa
 2156 0579 12000000 		.4byte	.LVL81
 2157 057d 5F090000 		.4byte	0x95f
 2158 0581 8B050000 		.4byte	0x58b
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 67


 2159 0585 0B       		.uleb128 0xb
 2160 0586 01       		.uleb128 0x1
 2161 0587 50       		.byte	0x50
 2162 0588 01       		.uleb128 0x1
 2163 0589 32       		.byte	0x32
 2164 058a 00       		.byte	0
 2165 058b 0C       		.uleb128 0xc
 2166 058c 48000000 		.4byte	.LVL82
 2167 0590 1E090000 		.4byte	0x91e
 2168 0594 0B       		.uleb128 0xb
 2169 0595 01       		.uleb128 0x1
 2170 0596 50       		.byte	0x50
 2171 0597 01       		.uleb128 0x1
 2172 0598 32       		.byte	0x32
 2173 0599 00       		.byte	0
 2174 059a 00       		.byte	0
 2175 059b 0F       		.uleb128 0xf
 2176 059c AF020000 		.4byte	.LASF49
 2177 05a0 01       		.byte	0x1
 2178 05a1 EB03     		.2byte	0x3eb
 2179 05a3 6B000000 		.4byte	0x6b
 2180 05a7 00000000 		.4byte	.LFB18
 2181 05ab 0C000000 		.4byte	.LFE18-.LFB18
 2182 05af 01       		.uleb128 0x1
 2183 05b0 9C       		.byte	0x9c
 2184 05b1 10       		.uleb128 0x10
 2185 05b2 DD000000 		.4byte	.LASF50
 2186 05b6 01       		.byte	0x1
 2187 05b7 1104     		.2byte	0x411
 2188 05b9 00000000 		.4byte	.LFB19
 2189 05bd 6C000000 		.4byte	.LFE19-.LFB19
 2190 05c1 01       		.uleb128 0x1
 2191 05c2 9C       		.byte	0x9c
 2192 05c3 07060000 		.4byte	0x607
 2193 05c7 15       		.uleb128 0x15
 2194 05c8 1D000000 		.4byte	.LASF47
 2195 05cc 01       		.byte	0x1
 2196 05cd 1104     		.2byte	0x411
 2197 05cf 6B000000 		.4byte	0x6b
 2198 05d3 C4010000 		.4byte	.LLST13
 2199 05d7 13       		.uleb128 0x13
 2200 05d8 E1010000 		.4byte	.LASF51
 2201 05dc 01       		.byte	0x1
 2202 05dd 1804     		.2byte	0x418
 2203 05df 6B000000 		.4byte	0x6b
 2204 05e3 F7010000 		.4byte	.LLST14
 2205 05e7 13       		.uleb128 0x13
 2206 05e8 56010000 		.4byte	.LASF52
 2207 05ec 01       		.byte	0x1
 2208 05ed 1904     		.2byte	0x419
 2209 05ef 6B000000 		.4byte	0x6b
 2210 05f3 0A020000 		.4byte	.LLST15
 2211 05f7 0C       		.uleb128 0xc
 2212 05f8 58000000 		.4byte	.LVL89
 2213 05fc 70090000 		.4byte	0x970
 2214 0600 0B       		.uleb128 0xb
 2215 0601 01       		.uleb128 0x1
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 68


 2216 0602 50       		.byte	0x50
 2217 0603 01       		.uleb128 0x1
 2218 0604 32       		.byte	0x32
 2219 0605 00       		.byte	0
 2220 0606 00       		.byte	0
 2221 0607 10       		.uleb128 0x10
 2222 0608 4B050000 		.4byte	.LASF53
 2223 060c 01       		.byte	0x1
 2224 060d 7904     		.2byte	0x479
 2225 060f 00000000 		.4byte	.LFB20
 2226 0613 28000000 		.4byte	.LFE20-.LFB20
 2227 0617 01       		.uleb128 0x1
 2228 0618 9C       		.byte	0x9c
 2229 0619 47060000 		.4byte	0x647
 2230 061d 15       		.uleb128 0x15
 2231 061e 3B000000 		.4byte	.LASF54
 2232 0622 01       		.byte	0x1
 2233 0623 7904     		.2byte	0x479
 2234 0625 47060000 		.4byte	0x647
 2235 0629 1D020000 		.4byte	.LLST16
 2236 062d 13       		.uleb128 0x13
 2237 062e 69020000 		.4byte	.LASF55
 2238 0632 01       		.byte	0x1
 2239 0633 7B04     		.2byte	0x47b
 2240 0635 76000000 		.4byte	0x76
 2241 0639 5F020000 		.4byte	.LLST17
 2242 063d 0E       		.uleb128 0xe
 2243 063e 10000000 		.4byte	.LVL93
 2244 0642 B1050000 		.4byte	0x5b1
 2245 0646 00       		.byte	0
 2246 0647 07       		.uleb128 0x7
 2247 0648 04       		.byte	0x4
 2248 0649 4D060000 		.4byte	0x64d
 2249 064d 16       		.uleb128 0x16
 2250 064e 8F000000 		.4byte	0x8f
 2251 0652 10       		.uleb128 0x10
 2252 0653 F2010000 		.4byte	.LASF56
 2253 0657 01       		.byte	0x1
 2254 0658 A704     		.2byte	0x4a7
 2255 065a 00000000 		.4byte	.LFB21
 2256 065e 28000000 		.4byte	.LFE21-.LFB21
 2257 0662 01       		.uleb128 0x1
 2258 0663 9C       		.byte	0x9c
 2259 0664 A2060000 		.4byte	0x6a2
 2260 0668 15       		.uleb128 0x15
 2261 0669 3B000000 		.4byte	.LASF54
 2262 066d 01       		.byte	0x1
 2263 066e A704     		.2byte	0x4a7
 2264 0670 A2060000 		.4byte	0x6a2
 2265 0674 A0020000 		.4byte	.LLST18
 2266 0678 15       		.uleb128 0x15
 2267 0679 7D040000 		.4byte	.LASF57
 2268 067d 01       		.byte	0x1
 2269 067e A704     		.2byte	0x4a7
 2270 0680 6B000000 		.4byte	0x6b
 2271 0684 E2020000 		.4byte	.LLST19
 2272 0688 13       		.uleb128 0x13
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 69


 2273 0689 69020000 		.4byte	.LASF55
 2274 068d 01       		.byte	0x1
 2275 068e AA04     		.2byte	0x4aa
 2276 0690 6B000000 		.4byte	0x6b
 2277 0694 1C030000 		.4byte	.LLST20
 2278 0698 0E       		.uleb128 0xe
 2279 0699 12000000 		.4byte	.LVL102
 2280 069d B1050000 		.4byte	0x5b1
 2281 06a1 00       		.byte	0
 2282 06a2 07       		.uleb128 0x7
 2283 06a3 04       		.byte	0x4
 2284 06a4 A8060000 		.4byte	0x6a8
 2285 06a8 16       		.uleb128 0x16
 2286 06a9 6B000000 		.4byte	0x6b
 2287 06ad 10       		.uleb128 0x10
 2288 06ae B3010000 		.4byte	.LASF58
 2289 06b2 01       		.byte	0x1
 2290 06b3 CE04     		.2byte	0x4ce
 2291 06b5 00000000 		.4byte	.LFB22
 2292 06b9 20000000 		.4byte	.LFE22-.LFB22
 2293 06bd 01       		.uleb128 0x1
 2294 06be 9C       		.byte	0x9c
 2295 06bf FF060000 		.4byte	0x6ff
 2296 06c3 15       		.uleb128 0x15
 2297 06c4 1D000000 		.4byte	.LASF47
 2298 06c8 01       		.byte	0x1
 2299 06c9 CE04     		.2byte	0x4ce
 2300 06cb 6B000000 		.4byte	0x6b
 2301 06cf 5D030000 		.4byte	.LLST21
 2302 06d3 0E       		.uleb128 0xe
 2303 06d4 0E000000 		.4byte	.LVL109
 2304 06d8 B1050000 		.4byte	0x5b1
 2305 06dc 0A       		.uleb128 0xa
 2306 06dd 14000000 		.4byte	.LVL110
 2307 06e1 B1050000 		.4byte	0x5b1
 2308 06e5 EF060000 		.4byte	0x6ef
 2309 06e9 0B       		.uleb128 0xb
 2310 06ea 01       		.uleb128 0x1
 2311 06eb 50       		.byte	0x50
 2312 06ec 01       		.uleb128 0x1
 2313 06ed 3D       		.byte	0x3d
 2314 06ee 00       		.byte	0
 2315 06ef 0C       		.uleb128 0xc
 2316 06f0 1A000000 		.4byte	.LVL111
 2317 06f4 B1050000 		.4byte	0x5b1
 2318 06f8 0B       		.uleb128 0xb
 2319 06f9 01       		.uleb128 0x1
 2320 06fa 50       		.byte	0x50
 2321 06fb 01       		.uleb128 0x1
 2322 06fc 3A       		.byte	0x3a
 2323 06fd 00       		.byte	0
 2324 06fe 00       		.byte	0
 2325 06ff 12       		.uleb128 0x12
 2326 0700 09040000 		.4byte	.LASF59
 2327 0704 01       		.byte	0x1
 2328 0705 F904     		.2byte	0x4f9
 2329 0707 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 70


 2330 070b 00000000 		.4byte	.LFB23
 2331 070f 44000000 		.4byte	.LFE23-.LFB23
 2332 0713 01       		.uleb128 0x1
 2333 0714 9C       		.byte	0x9c
 2334 0715 4C070000 		.4byte	0x74c
 2335 0719 13       		.uleb128 0x13
 2336 071a 3F020000 		.4byte	.LASF38
 2337 071e 01       		.byte	0x1
 2338 071f FC04     		.2byte	0x4fc
 2339 0721 6B000000 		.4byte	0x6b
 2340 0725 7E030000 		.4byte	.LLST22
 2341 0729 0A       		.uleb128 0xa
 2342 072a 08000000 		.4byte	.LVL112
 2343 072e 5F090000 		.4byte	0x95f
 2344 0732 3C070000 		.4byte	0x73c
 2345 0736 0B       		.uleb128 0xb
 2346 0737 01       		.uleb128 0x1
 2347 0738 50       		.byte	0x50
 2348 0739 01       		.uleb128 0x1
 2349 073a 32       		.byte	0x32
 2350 073b 00       		.byte	0
 2351 073c 0C       		.uleb128 0xc
 2352 073d 3C000000 		.4byte	.LVL118
 2353 0741 1E090000 		.4byte	0x91e
 2354 0745 0B       		.uleb128 0xb
 2355 0746 01       		.uleb128 0x1
 2356 0747 50       		.byte	0x50
 2357 0748 01       		.uleb128 0x1
 2358 0749 32       		.byte	0x32
 2359 074a 00       		.byte	0
 2360 074b 00       		.byte	0
 2361 074c 10       		.uleb128 0x10
 2362 074d A0010000 		.4byte	.LASF60
 2363 0751 01       		.byte	0x1
 2364 0752 4A05     		.2byte	0x54a
 2365 0754 00000000 		.4byte	.LFB24
 2366 0758 3C000000 		.4byte	.LFE24-.LFB24
 2367 075c 01       		.uleb128 0x1
 2368 075d 9C       		.byte	0x9c
 2369 075e A7070000 		.4byte	0x7a7
 2370 0762 13       		.uleb128 0x13
 2371 0763 F9040000 		.4byte	.LASF22
 2372 0767 01       		.byte	0x1
 2373 0768 4C05     		.2byte	0x54c
 2374 076a 6B000000 		.4byte	0x6b
 2375 076e A7030000 		.4byte	.LLST23
 2376 0772 0E       		.uleb128 0xe
 2377 0773 06000000 		.4byte	.LVL120
 2378 0777 13090000 		.4byte	0x913
 2379 077b 0E       		.uleb128 0xe
 2380 077c 1C000000 		.4byte	.LVL121
 2381 0780 47090000 		.4byte	0x947
 2382 0784 0A       		.uleb128 0xa
 2383 0785 22000000 		.4byte	.LVL122
 2384 0789 5F090000 		.4byte	0x95f
 2385 078d 97070000 		.4byte	0x797
 2386 0791 0B       		.uleb128 0xb
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 71


 2387 0792 01       		.uleb128 0x1
 2388 0793 50       		.byte	0x50
 2389 0794 01       		.uleb128 0x1
 2390 0795 32       		.byte	0x32
 2391 0796 00       		.byte	0
 2392 0797 0C       		.uleb128 0xc
 2393 0798 30000000 		.4byte	.LVL123
 2394 079c 1E090000 		.4byte	0x91e
 2395 07a0 0B       		.uleb128 0xb
 2396 07a1 01       		.uleb128 0x1
 2397 07a2 50       		.byte	0x50
 2398 07a3 01       		.uleb128 0x1
 2399 07a4 32       		.byte	0x32
 2400 07a5 00       		.byte	0
 2401 07a6 00       		.byte	0
 2402 07a7 10       		.uleb128 0x10
 2403 07a8 6E040000 		.4byte	.LASF61
 2404 07ac 01       		.byte	0x1
 2405 07ad A005     		.2byte	0x5a0
 2406 07af 00000000 		.4byte	.LFB25
 2407 07b3 5C000000 		.4byte	.LFE25-.LFB25
 2408 07b7 01       		.uleb128 0x1
 2409 07b8 9C       		.byte	0x9c
 2410 07b9 FA070000 		.4byte	0x7fa
 2411 07bd 15       		.uleb128 0x15
 2412 07be 7E010000 		.4byte	.LASF62
 2413 07c2 01       		.byte	0x1
 2414 07c3 A005     		.2byte	0x5a0
 2415 07c5 6B000000 		.4byte	0x6b
 2416 07c9 BA030000 		.4byte	.LLST24
 2417 07cd 17       		.uleb128 0x17
 2418 07ce 08000000 		.4byte	.LBB2
 2419 07d2 40000000 		.4byte	.LBE2-.LBB2
 2420 07d6 13       		.uleb128 0x13
 2421 07d7 D5020000 		.4byte	.LASF63
 2422 07db 01       		.byte	0x1
 2423 07dc A805     		.2byte	0x5a8
 2424 07de 6B000000 		.4byte	0x6b
 2425 07e2 DB030000 		.4byte	.LLST25
 2426 07e6 14       		.uleb128 0x14
 2427 07e7 BE000000 		.4byte	.LASF64
 2428 07eb 01       		.byte	0x1
 2429 07ec D005     		.2byte	0x5d0
 2430 07ee 6B000000 		.4byte	0x6b
 2431 07f2 05       		.uleb128 0x5
 2432 07f3 03       		.byte	0x3
 2433 07f4 08000000 		.4byte	txPeriod.4878
 2434 07f8 00       		.byte	0
 2435 07f9 00       		.byte	0
 2436 07fa 10       		.uleb128 0x10
 2437 07fb 79020000 		.4byte	.LASF65
 2438 07ff 01       		.byte	0x1
 2439 0800 2406     		.2byte	0x624
 2440 0802 00000000 		.4byte	.LFB26
 2441 0806 02000000 		.4byte	.LFE26-.LFB26
 2442 080a 01       		.uleb128 0x1
 2443 080b 9C       		.byte	0x9c
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 72


 2444 080c 1F080000 		.4byte	0x81f
 2445 0810 11       		.uleb128 0x11
 2446 0811 20010000 		.4byte	.LASF41
 2447 0815 01       		.byte	0x1
 2448 0816 2406     		.2byte	0x624
 2449 0818 6B000000 		.4byte	0x6b
 2450 081c 01       		.uleb128 0x1
 2451 081d 50       		.byte	0x50
 2452 081e 00       		.byte	0
 2453 081f 18       		.uleb128 0x18
 2454 0820 0A050000 		.4byte	.LASF66
 2455 0824 01       		.byte	0x1
 2456 0825 1B       		.byte	0x1b
 2457 0826 6B000000 		.4byte	0x6b
 2458 082a 05       		.uleb128 0x5
 2459 082b 03       		.byte	0x3
 2460 082c 00000000 		.4byte	UART_initVar
 2461 0830 19       		.uleb128 0x19
 2462 0831 6B000000 		.4byte	0x6b
 2463 0835 40080000 		.4byte	0x840
 2464 0839 1A       		.uleb128 0x1a
 2465 083a C5000000 		.4byte	0xc5
 2466 083e FE       		.byte	0xfe
 2467 083f 00       		.byte	0
 2468 0840 18       		.uleb128 0x18
 2469 0841 70010000 		.4byte	.LASF67
 2470 0845 01       		.byte	0x1
 2471 0846 1E       		.byte	0x1e
 2472 0847 51080000 		.4byte	0x851
 2473 084b 05       		.uleb128 0x5
 2474 084c 03       		.byte	0x3
 2475 084d 00000000 		.4byte	UART_txBuffer
 2476 0851 06       		.uleb128 0x6
 2477 0852 30080000 		.4byte	0x830
 2478 0856 18       		.uleb128 0x18
 2479 0857 92000000 		.4byte	.LASF68
 2480 085b 01       		.byte	0x1
 2481 085c 1F       		.byte	0x1f
 2482 085d AD000000 		.4byte	0xad
 2483 0861 05       		.uleb128 0x5
 2484 0862 03       		.byte	0x3
 2485 0863 00000000 		.4byte	UART_txBufferRead
 2486 0867 18       		.uleb128 0x18
 2487 0868 28000000 		.4byte	.LASF69
 2488 086c 01       		.byte	0x1
 2489 086d 20       		.byte	0x20
 2490 086e 6B000000 		.4byte	0x6b
 2491 0872 05       		.uleb128 0x5
 2492 0873 03       		.byte	0x3
 2493 0874 00000000 		.4byte	UART_txBufferWrite
 2494 0878 18       		.uleb128 0x18
 2495 0879 F2030000 		.4byte	.LASF70
 2496 087d 01       		.byte	0x1
 2497 087e 24       		.byte	0x24
 2498 087f 6B000000 		.4byte	0x6b
 2499 0883 05       		.uleb128 0x5
 2500 0884 03       		.byte	0x3
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 73


 2501 0885 00000000 		.4byte	UART_errorStatus
 2502 0889 18       		.uleb128 0x18
 2503 088a 3D050000 		.4byte	.LASF71
 2504 088e 01       		.byte	0x1
 2505 088f 25       		.byte	0x25
 2506 0890 9A080000 		.4byte	0x89a
 2507 0894 05       		.uleb128 0x5
 2508 0895 03       		.byte	0x3
 2509 0896 00000000 		.4byte	UART_rxBuffer
 2510 089a 06       		.uleb128 0x6
 2511 089b 30080000 		.4byte	0x830
 2512 089f 18       		.uleb128 0x18
 2513 08a0 57020000 		.4byte	.LASF72
 2514 08a4 01       		.byte	0x1
 2515 08a5 26       		.byte	0x26
 2516 08a6 AD000000 		.4byte	0xad
 2517 08aa 05       		.uleb128 0x5
 2518 08ab 03       		.byte	0x3
 2519 08ac 00000000 		.4byte	UART_rxBufferRead
 2520 08b0 18       		.uleb128 0x18
 2521 08b1 2C010000 		.4byte	.LASF73
 2522 08b5 01       		.byte	0x1
 2523 08b6 27       		.byte	0x27
 2524 08b7 AD000000 		.4byte	0xad
 2525 08bb 05       		.uleb128 0x5
 2526 08bc 03       		.byte	0x3
 2527 08bd 00000000 		.4byte	UART_rxBufferWrite
 2528 08c1 18       		.uleb128 0x18
 2529 08c2 27020000 		.4byte	.LASF74
 2530 08c6 01       		.byte	0x1
 2531 08c7 28       		.byte	0x28
 2532 08c8 AD000000 		.4byte	0xad
 2533 08cc 05       		.uleb128 0x5
 2534 08cd 03       		.byte	0x3
 2535 08ce 00000000 		.4byte	UART_rxBufferLoopDetect
 2536 08d2 18       		.uleb128 0x18
 2537 08d3 7C000000 		.4byte	.LASF75
 2538 08d7 01       		.byte	0x1
 2539 08d8 29       		.byte	0x29
 2540 08d9 AD000000 		.4byte	0xad
 2541 08dd 05       		.uleb128 0x5
 2542 08de 03       		.byte	0x3
 2543 08df 00000000 		.4byte	UART_rxBufferOverflow
 2544 08e3 1B       		.uleb128 0x1b
 2545 08e4 3F010000 		.4byte	.LASF86
 2546 08e8 03       		.byte	0x3
 2547 08e9 46       		.byte	0x46
 2548 08ea B2000000 		.4byte	0xb2
 2549 08ee FD080000 		.4byte	0x8fd
 2550 08f2 1C       		.uleb128 0x1c
 2551 08f3 6B000000 		.4byte	0x6b
 2552 08f7 1C       		.uleb128 0x1c
 2553 08f8 B2000000 		.4byte	0xb2
 2554 08fc 00       		.byte	0
 2555 08fd 1D       		.uleb128 0x1d
 2556 08fe E1030000 		.4byte	.LASF76
 2557 0902 03       		.byte	0x3
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 74


 2558 0903 49       		.byte	0x49
 2559 0904 13090000 		.4byte	0x913
 2560 0908 1C       		.uleb128 0x1c
 2561 0909 6B000000 		.4byte	0x6b
 2562 090d 1C       		.uleb128 0x1c
 2563 090e 6B000000 		.4byte	0x6b
 2564 0912 00       		.byte	0
 2565 0913 1E       		.uleb128 0x1e
 2566 0914 00020000 		.4byte	.LASF87
 2567 0918 03       		.byte	0x3
 2568 0919 5E       		.byte	0x5e
 2569 091a 6B000000 		.4byte	0x6b
 2570 091e 1D       		.uleb128 0x1d
 2571 091f 62040000 		.4byte	.LASF77
 2572 0923 03       		.byte	0x3
 2573 0924 4C       		.byte	0x4c
 2574 0925 2F090000 		.4byte	0x92f
 2575 0929 1C       		.uleb128 0x1c
 2576 092a 6B000000 		.4byte	0x6b
 2577 092e 00       		.byte	0
 2578 092f 1D       		.uleb128 0x1d
 2579 0930 E6020000 		.4byte	.LASF78
 2580 0934 03       		.byte	0x3
 2581 0935 51       		.byte	0x51
 2582 0936 40090000 		.4byte	0x940
 2583 093a 1C       		.uleb128 0x1c
 2584 093b 6B000000 		.4byte	0x6b
 2585 093f 00       		.byte	0
 2586 0940 1F       		.uleb128 0x1f
 2587 0941 C1020000 		.4byte	.LASF80
 2588 0945 04       		.byte	0x4
 2589 0946 23       		.byte	0x23
 2590 0947 1D       		.uleb128 0x1d
 2591 0948 07000000 		.4byte	.LASF79
 2592 094c 03       		.byte	0x3
 2593 094d 5F       		.byte	0x5f
 2594 094e 58090000 		.4byte	0x958
 2595 0952 1C       		.uleb128 0x1c
 2596 0953 6B000000 		.4byte	0x6b
 2597 0957 00       		.byte	0
 2598 0958 1F       		.uleb128 0x1f
 2599 0959 CE030000 		.4byte	.LASF81
 2600 095d 04       		.byte	0x4
 2601 095e 27       		.byte	0x27
 2602 095f 1D       		.uleb128 0x1d
 2603 0960 D0000000 		.4byte	.LASF82
 2604 0964 03       		.byte	0x3
 2605 0965 4E       		.byte	0x4e
 2606 0966 70090000 		.4byte	0x970
 2607 096a 1C       		.uleb128 0x1c
 2608 096b 6B000000 		.4byte	0x6b
 2609 096f 00       		.byte	0
 2610 0970 20       		.uleb128 0x20
 2611 0971 17020000 		.4byte	.LASF88
 2612 0975 03       		.byte	0x3
 2613 0976 50       		.byte	0x50
 2614 0977 1C       		.uleb128 0x1c
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 75


 2615 0978 6B000000 		.4byte	0x6b
 2616 097c 00       		.byte	0
 2617 097d 00       		.byte	0
 2618              		.section	.debug_abbrev,"",%progbits
 2619              	.Ldebug_abbrev0:
 2620 0000 01       		.uleb128 0x1
 2621 0001 11       		.uleb128 0x11
 2622 0002 01       		.byte	0x1
 2623 0003 25       		.uleb128 0x25
 2624 0004 0E       		.uleb128 0xe
 2625 0005 13       		.uleb128 0x13
 2626 0006 0B       		.uleb128 0xb
 2627 0007 03       		.uleb128 0x3
 2628 0008 0E       		.uleb128 0xe
 2629 0009 1B       		.uleb128 0x1b
 2630 000a 0E       		.uleb128 0xe
 2631 000b 55       		.uleb128 0x55
 2632 000c 17       		.uleb128 0x17
 2633 000d 11       		.uleb128 0x11
 2634 000e 01       		.uleb128 0x1
 2635 000f 10       		.uleb128 0x10
 2636 0010 17       		.uleb128 0x17
 2637 0011 00       		.byte	0
 2638 0012 00       		.byte	0
 2639 0013 02       		.uleb128 0x2
 2640 0014 24       		.uleb128 0x24
 2641 0015 00       		.byte	0
 2642 0016 0B       		.uleb128 0xb
 2643 0017 0B       		.uleb128 0xb
 2644 0018 3E       		.uleb128 0x3e
 2645 0019 0B       		.uleb128 0xb
 2646 001a 03       		.uleb128 0x3
 2647 001b 0E       		.uleb128 0xe
 2648 001c 00       		.byte	0
 2649 001d 00       		.byte	0
 2650 001e 03       		.uleb128 0x3
 2651 001f 24       		.uleb128 0x24
 2652 0020 00       		.byte	0
 2653 0021 0B       		.uleb128 0xb
 2654 0022 0B       		.uleb128 0xb
 2655 0023 3E       		.uleb128 0x3e
 2656 0024 0B       		.uleb128 0xb
 2657 0025 03       		.uleb128 0x3
 2658 0026 08       		.uleb128 0x8
 2659 0027 00       		.byte	0
 2660 0028 00       		.byte	0
 2661 0029 04       		.uleb128 0x4
 2662 002a 16       		.uleb128 0x16
 2663 002b 00       		.byte	0
 2664 002c 03       		.uleb128 0x3
 2665 002d 0E       		.uleb128 0xe
 2666 002e 3A       		.uleb128 0x3a
 2667 002f 0B       		.uleb128 0xb
 2668 0030 3B       		.uleb128 0x3b
 2669 0031 0B       		.uleb128 0xb
 2670 0032 49       		.uleb128 0x49
 2671 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 76


 2672 0034 00       		.byte	0
 2673 0035 00       		.byte	0
 2674 0036 05       		.uleb128 0x5
 2675 0037 16       		.uleb128 0x16
 2676 0038 00       		.byte	0
 2677 0039 03       		.uleb128 0x3
 2678 003a 0E       		.uleb128 0xe
 2679 003b 3A       		.uleb128 0x3a
 2680 003c 0B       		.uleb128 0xb
 2681 003d 3B       		.uleb128 0x3b
 2682 003e 05       		.uleb128 0x5
 2683 003f 49       		.uleb128 0x49
 2684 0040 13       		.uleb128 0x13
 2685 0041 00       		.byte	0
 2686 0042 00       		.byte	0
 2687 0043 06       		.uleb128 0x6
 2688 0044 35       		.uleb128 0x35
 2689 0045 00       		.byte	0
 2690 0046 49       		.uleb128 0x49
 2691 0047 13       		.uleb128 0x13
 2692 0048 00       		.byte	0
 2693 0049 00       		.byte	0
 2694 004a 07       		.uleb128 0x7
 2695 004b 0F       		.uleb128 0xf
 2696 004c 00       		.byte	0
 2697 004d 0B       		.uleb128 0xb
 2698 004e 0B       		.uleb128 0xb
 2699 004f 49       		.uleb128 0x49
 2700 0050 13       		.uleb128 0x13
 2701 0051 00       		.byte	0
 2702 0052 00       		.byte	0
 2703 0053 08       		.uleb128 0x8
 2704 0054 15       		.uleb128 0x15
 2705 0055 00       		.byte	0
 2706 0056 27       		.uleb128 0x27
 2707 0057 19       		.uleb128 0x19
 2708 0058 00       		.byte	0
 2709 0059 00       		.byte	0
 2710 005a 09       		.uleb128 0x9
 2711 005b 2E       		.uleb128 0x2e
 2712 005c 01       		.byte	0x1
 2713 005d 3F       		.uleb128 0x3f
 2714 005e 19       		.uleb128 0x19
 2715 005f 03       		.uleb128 0x3
 2716 0060 0E       		.uleb128 0xe
 2717 0061 3A       		.uleb128 0x3a
 2718 0062 0B       		.uleb128 0xb
 2719 0063 3B       		.uleb128 0x3b
 2720 0064 0B       		.uleb128 0xb
 2721 0065 27       		.uleb128 0x27
 2722 0066 19       		.uleb128 0x19
 2723 0067 11       		.uleb128 0x11
 2724 0068 01       		.uleb128 0x1
 2725 0069 12       		.uleb128 0x12
 2726 006a 06       		.uleb128 0x6
 2727 006b 40       		.uleb128 0x40
 2728 006c 18       		.uleb128 0x18
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 77


 2729 006d 9742     		.uleb128 0x2117
 2730 006f 19       		.uleb128 0x19
 2731 0070 01       		.uleb128 0x1
 2732 0071 13       		.uleb128 0x13
 2733 0072 00       		.byte	0
 2734 0073 00       		.byte	0
 2735 0074 0A       		.uleb128 0xa
 2736 0075 898201   		.uleb128 0x4109
 2737 0078 01       		.byte	0x1
 2738 0079 11       		.uleb128 0x11
 2739 007a 01       		.uleb128 0x1
 2740 007b 31       		.uleb128 0x31
 2741 007c 13       		.uleb128 0x13
 2742 007d 01       		.uleb128 0x1
 2743 007e 13       		.uleb128 0x13
 2744 007f 00       		.byte	0
 2745 0080 00       		.byte	0
 2746 0081 0B       		.uleb128 0xb
 2747 0082 8A8201   		.uleb128 0x410a
 2748 0085 00       		.byte	0
 2749 0086 02       		.uleb128 0x2
 2750 0087 18       		.uleb128 0x18
 2751 0088 9142     		.uleb128 0x2111
 2752 008a 18       		.uleb128 0x18
 2753 008b 00       		.byte	0
 2754 008c 00       		.byte	0
 2755 008d 0C       		.uleb128 0xc
 2756 008e 898201   		.uleb128 0x4109
 2757 0091 01       		.byte	0x1
 2758 0092 11       		.uleb128 0x11
 2759 0093 01       		.uleb128 0x1
 2760 0094 31       		.uleb128 0x31
 2761 0095 13       		.uleb128 0x13
 2762 0096 00       		.byte	0
 2763 0097 00       		.byte	0
 2764 0098 0D       		.uleb128 0xd
 2765 0099 34       		.uleb128 0x34
 2766 009a 00       		.byte	0
 2767 009b 03       		.uleb128 0x3
 2768 009c 0E       		.uleb128 0xe
 2769 009d 3A       		.uleb128 0x3a
 2770 009e 0B       		.uleb128 0xb
 2771 009f 3B       		.uleb128 0x3b
 2772 00a0 0B       		.uleb128 0xb
 2773 00a1 49       		.uleb128 0x49
 2774 00a2 13       		.uleb128 0x13
 2775 00a3 02       		.uleb128 0x2
 2776 00a4 17       		.uleb128 0x17
 2777 00a5 00       		.byte	0
 2778 00a6 00       		.byte	0
 2779 00a7 0E       		.uleb128 0xe
 2780 00a8 898201   		.uleb128 0x4109
 2781 00ab 00       		.byte	0
 2782 00ac 11       		.uleb128 0x11
 2783 00ad 01       		.uleb128 0x1
 2784 00ae 31       		.uleb128 0x31
 2785 00af 13       		.uleb128 0x13
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 78


 2786 00b0 00       		.byte	0
 2787 00b1 00       		.byte	0
 2788 00b2 0F       		.uleb128 0xf
 2789 00b3 2E       		.uleb128 0x2e
 2790 00b4 00       		.byte	0
 2791 00b5 3F       		.uleb128 0x3f
 2792 00b6 19       		.uleb128 0x19
 2793 00b7 03       		.uleb128 0x3
 2794 00b8 0E       		.uleb128 0xe
 2795 00b9 3A       		.uleb128 0x3a
 2796 00ba 0B       		.uleb128 0xb
 2797 00bb 3B       		.uleb128 0x3b
 2798 00bc 05       		.uleb128 0x5
 2799 00bd 27       		.uleb128 0x27
 2800 00be 19       		.uleb128 0x19
 2801 00bf 49       		.uleb128 0x49
 2802 00c0 13       		.uleb128 0x13
 2803 00c1 11       		.uleb128 0x11
 2804 00c2 01       		.uleb128 0x1
 2805 00c3 12       		.uleb128 0x12
 2806 00c4 06       		.uleb128 0x6
 2807 00c5 40       		.uleb128 0x40
 2808 00c6 18       		.uleb128 0x18
 2809 00c7 9742     		.uleb128 0x2117
 2810 00c9 19       		.uleb128 0x19
 2811 00ca 00       		.byte	0
 2812 00cb 00       		.byte	0
 2813 00cc 10       		.uleb128 0x10
 2814 00cd 2E       		.uleb128 0x2e
 2815 00ce 01       		.byte	0x1
 2816 00cf 3F       		.uleb128 0x3f
 2817 00d0 19       		.uleb128 0x19
 2818 00d1 03       		.uleb128 0x3
 2819 00d2 0E       		.uleb128 0xe
 2820 00d3 3A       		.uleb128 0x3a
 2821 00d4 0B       		.uleb128 0xb
 2822 00d5 3B       		.uleb128 0x3b
 2823 00d6 05       		.uleb128 0x5
 2824 00d7 27       		.uleb128 0x27
 2825 00d8 19       		.uleb128 0x19
 2826 00d9 11       		.uleb128 0x11
 2827 00da 01       		.uleb128 0x1
 2828 00db 12       		.uleb128 0x12
 2829 00dc 06       		.uleb128 0x6
 2830 00dd 40       		.uleb128 0x40
 2831 00de 18       		.uleb128 0x18
 2832 00df 9742     		.uleb128 0x2117
 2833 00e1 19       		.uleb128 0x19
 2834 00e2 01       		.uleb128 0x1
 2835 00e3 13       		.uleb128 0x13
 2836 00e4 00       		.byte	0
 2837 00e5 00       		.byte	0
 2838 00e6 11       		.uleb128 0x11
 2839 00e7 05       		.uleb128 0x5
 2840 00e8 00       		.byte	0
 2841 00e9 03       		.uleb128 0x3
 2842 00ea 0E       		.uleb128 0xe
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 79


 2843 00eb 3A       		.uleb128 0x3a
 2844 00ec 0B       		.uleb128 0xb
 2845 00ed 3B       		.uleb128 0x3b
 2846 00ee 05       		.uleb128 0x5
 2847 00ef 49       		.uleb128 0x49
 2848 00f0 13       		.uleb128 0x13
 2849 00f1 02       		.uleb128 0x2
 2850 00f2 18       		.uleb128 0x18
 2851 00f3 00       		.byte	0
 2852 00f4 00       		.byte	0
 2853 00f5 12       		.uleb128 0x12
 2854 00f6 2E       		.uleb128 0x2e
 2855 00f7 01       		.byte	0x1
 2856 00f8 3F       		.uleb128 0x3f
 2857 00f9 19       		.uleb128 0x19
 2858 00fa 03       		.uleb128 0x3
 2859 00fb 0E       		.uleb128 0xe
 2860 00fc 3A       		.uleb128 0x3a
 2861 00fd 0B       		.uleb128 0xb
 2862 00fe 3B       		.uleb128 0x3b
 2863 00ff 05       		.uleb128 0x5
 2864 0100 27       		.uleb128 0x27
 2865 0101 19       		.uleb128 0x19
 2866 0102 49       		.uleb128 0x49
 2867 0103 13       		.uleb128 0x13
 2868 0104 11       		.uleb128 0x11
 2869 0105 01       		.uleb128 0x1
 2870 0106 12       		.uleb128 0x12
 2871 0107 06       		.uleb128 0x6
 2872 0108 40       		.uleb128 0x40
 2873 0109 18       		.uleb128 0x18
 2874 010a 9742     		.uleb128 0x2117
 2875 010c 19       		.uleb128 0x19
 2876 010d 01       		.uleb128 0x1
 2877 010e 13       		.uleb128 0x13
 2878 010f 00       		.byte	0
 2879 0110 00       		.byte	0
 2880 0111 13       		.uleb128 0x13
 2881 0112 34       		.uleb128 0x34
 2882 0113 00       		.byte	0
 2883 0114 03       		.uleb128 0x3
 2884 0115 0E       		.uleb128 0xe
 2885 0116 3A       		.uleb128 0x3a
 2886 0117 0B       		.uleb128 0xb
 2887 0118 3B       		.uleb128 0x3b
 2888 0119 05       		.uleb128 0x5
 2889 011a 49       		.uleb128 0x49
 2890 011b 13       		.uleb128 0x13
 2891 011c 02       		.uleb128 0x2
 2892 011d 17       		.uleb128 0x17
 2893 011e 00       		.byte	0
 2894 011f 00       		.byte	0
 2895 0120 14       		.uleb128 0x14
 2896 0121 34       		.uleb128 0x34
 2897 0122 00       		.byte	0
 2898 0123 03       		.uleb128 0x3
 2899 0124 0E       		.uleb128 0xe
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 80


 2900 0125 3A       		.uleb128 0x3a
 2901 0126 0B       		.uleb128 0xb
 2902 0127 3B       		.uleb128 0x3b
 2903 0128 05       		.uleb128 0x5
 2904 0129 49       		.uleb128 0x49
 2905 012a 13       		.uleb128 0x13
 2906 012b 02       		.uleb128 0x2
 2907 012c 18       		.uleb128 0x18
 2908 012d 00       		.byte	0
 2909 012e 00       		.byte	0
 2910 012f 15       		.uleb128 0x15
 2911 0130 05       		.uleb128 0x5
 2912 0131 00       		.byte	0
 2913 0132 03       		.uleb128 0x3
 2914 0133 0E       		.uleb128 0xe
 2915 0134 3A       		.uleb128 0x3a
 2916 0135 0B       		.uleb128 0xb
 2917 0136 3B       		.uleb128 0x3b
 2918 0137 05       		.uleb128 0x5
 2919 0138 49       		.uleb128 0x49
 2920 0139 13       		.uleb128 0x13
 2921 013a 02       		.uleb128 0x2
 2922 013b 17       		.uleb128 0x17
 2923 013c 00       		.byte	0
 2924 013d 00       		.byte	0
 2925 013e 16       		.uleb128 0x16
 2926 013f 26       		.uleb128 0x26
 2927 0140 00       		.byte	0
 2928 0141 49       		.uleb128 0x49
 2929 0142 13       		.uleb128 0x13
 2930 0143 00       		.byte	0
 2931 0144 00       		.byte	0
 2932 0145 17       		.uleb128 0x17
 2933 0146 0B       		.uleb128 0xb
 2934 0147 01       		.byte	0x1
 2935 0148 11       		.uleb128 0x11
 2936 0149 01       		.uleb128 0x1
 2937 014a 12       		.uleb128 0x12
 2938 014b 06       		.uleb128 0x6
 2939 014c 00       		.byte	0
 2940 014d 00       		.byte	0
 2941 014e 18       		.uleb128 0x18
 2942 014f 34       		.uleb128 0x34
 2943 0150 00       		.byte	0
 2944 0151 03       		.uleb128 0x3
 2945 0152 0E       		.uleb128 0xe
 2946 0153 3A       		.uleb128 0x3a
 2947 0154 0B       		.uleb128 0xb
 2948 0155 3B       		.uleb128 0x3b
 2949 0156 0B       		.uleb128 0xb
 2950 0157 49       		.uleb128 0x49
 2951 0158 13       		.uleb128 0x13
 2952 0159 3F       		.uleb128 0x3f
 2953 015a 19       		.uleb128 0x19
 2954 015b 02       		.uleb128 0x2
 2955 015c 18       		.uleb128 0x18
 2956 015d 00       		.byte	0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 81


 2957 015e 00       		.byte	0
 2958 015f 19       		.uleb128 0x19
 2959 0160 01       		.uleb128 0x1
 2960 0161 01       		.byte	0x1
 2961 0162 49       		.uleb128 0x49
 2962 0163 13       		.uleb128 0x13
 2963 0164 01       		.uleb128 0x1
 2964 0165 13       		.uleb128 0x13
 2965 0166 00       		.byte	0
 2966 0167 00       		.byte	0
 2967 0168 1A       		.uleb128 0x1a
 2968 0169 21       		.uleb128 0x21
 2969 016a 00       		.byte	0
 2970 016b 49       		.uleb128 0x49
 2971 016c 13       		.uleb128 0x13
 2972 016d 2F       		.uleb128 0x2f
 2973 016e 0B       		.uleb128 0xb
 2974 016f 00       		.byte	0
 2975 0170 00       		.byte	0
 2976 0171 1B       		.uleb128 0x1b
 2977 0172 2E       		.uleb128 0x2e
 2978 0173 01       		.byte	0x1
 2979 0174 3F       		.uleb128 0x3f
 2980 0175 19       		.uleb128 0x19
 2981 0176 03       		.uleb128 0x3
 2982 0177 0E       		.uleb128 0xe
 2983 0178 3A       		.uleb128 0x3a
 2984 0179 0B       		.uleb128 0xb
 2985 017a 3B       		.uleb128 0x3b
 2986 017b 0B       		.uleb128 0xb
 2987 017c 27       		.uleb128 0x27
 2988 017d 19       		.uleb128 0x19
 2989 017e 49       		.uleb128 0x49
 2990 017f 13       		.uleb128 0x13
 2991 0180 3C       		.uleb128 0x3c
 2992 0181 19       		.uleb128 0x19
 2993 0182 01       		.uleb128 0x1
 2994 0183 13       		.uleb128 0x13
 2995 0184 00       		.byte	0
 2996 0185 00       		.byte	0
 2997 0186 1C       		.uleb128 0x1c
 2998 0187 05       		.uleb128 0x5
 2999 0188 00       		.byte	0
 3000 0189 49       		.uleb128 0x49
 3001 018a 13       		.uleb128 0x13
 3002 018b 00       		.byte	0
 3003 018c 00       		.byte	0
 3004 018d 1D       		.uleb128 0x1d
 3005 018e 2E       		.uleb128 0x2e
 3006 018f 01       		.byte	0x1
 3007 0190 3F       		.uleb128 0x3f
 3008 0191 19       		.uleb128 0x19
 3009 0192 03       		.uleb128 0x3
 3010 0193 0E       		.uleb128 0xe
 3011 0194 3A       		.uleb128 0x3a
 3012 0195 0B       		.uleb128 0xb
 3013 0196 3B       		.uleb128 0x3b
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 82


 3014 0197 0B       		.uleb128 0xb
 3015 0198 27       		.uleb128 0x27
 3016 0199 19       		.uleb128 0x19
 3017 019a 3C       		.uleb128 0x3c
 3018 019b 19       		.uleb128 0x19
 3019 019c 01       		.uleb128 0x1
 3020 019d 13       		.uleb128 0x13
 3021 019e 00       		.byte	0
 3022 019f 00       		.byte	0
 3023 01a0 1E       		.uleb128 0x1e
 3024 01a1 2E       		.uleb128 0x2e
 3025 01a2 00       		.byte	0
 3026 01a3 3F       		.uleb128 0x3f
 3027 01a4 19       		.uleb128 0x19
 3028 01a5 03       		.uleb128 0x3
 3029 01a6 0E       		.uleb128 0xe
 3030 01a7 3A       		.uleb128 0x3a
 3031 01a8 0B       		.uleb128 0xb
 3032 01a9 3B       		.uleb128 0x3b
 3033 01aa 0B       		.uleb128 0xb
 3034 01ab 27       		.uleb128 0x27
 3035 01ac 19       		.uleb128 0x19
 3036 01ad 49       		.uleb128 0x49
 3037 01ae 13       		.uleb128 0x13
 3038 01af 3C       		.uleb128 0x3c
 3039 01b0 19       		.uleb128 0x19
 3040 01b1 00       		.byte	0
 3041 01b2 00       		.byte	0
 3042 01b3 1F       		.uleb128 0x1f
 3043 01b4 2E       		.uleb128 0x2e
 3044 01b5 00       		.byte	0
 3045 01b6 3F       		.uleb128 0x3f
 3046 01b7 19       		.uleb128 0x19
 3047 01b8 03       		.uleb128 0x3
 3048 01b9 0E       		.uleb128 0xe
 3049 01ba 3A       		.uleb128 0x3a
 3050 01bb 0B       		.uleb128 0xb
 3051 01bc 3B       		.uleb128 0x3b
 3052 01bd 0B       		.uleb128 0xb
 3053 01be 27       		.uleb128 0x27
 3054 01bf 19       		.uleb128 0x19
 3055 01c0 3C       		.uleb128 0x3c
 3056 01c1 19       		.uleb128 0x19
 3057 01c2 00       		.byte	0
 3058 01c3 00       		.byte	0
 3059 01c4 20       		.uleb128 0x20
 3060 01c5 2E       		.uleb128 0x2e
 3061 01c6 01       		.byte	0x1
 3062 01c7 3F       		.uleb128 0x3f
 3063 01c8 19       		.uleb128 0x19
 3064 01c9 03       		.uleb128 0x3
 3065 01ca 0E       		.uleb128 0xe
 3066 01cb 3A       		.uleb128 0x3a
 3067 01cc 0B       		.uleb128 0xb
 3068 01cd 3B       		.uleb128 0x3b
 3069 01ce 0B       		.uleb128 0xb
 3070 01cf 27       		.uleb128 0x27
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 83


 3071 01d0 19       		.uleb128 0x19
 3072 01d1 3C       		.uleb128 0x3c
 3073 01d2 19       		.uleb128 0x19
 3074 01d3 00       		.byte	0
 3075 01d4 00       		.byte	0
 3076 01d5 00       		.byte	0
 3077              		.section	.debug_loc,"",%progbits
 3078              	.Ldebug_loc0:
 3079              	.LLST0:
 3080 0000 08000000 		.4byte	.LVL5
 3081 0004 44000000 		.4byte	.LVL11
 3082 0008 0100     		.2byte	0x1
 3083 000a 55       		.byte	0x55
 3084 000b 00000000 		.4byte	0
 3085 000f 00000000 		.4byte	0
 3086              	.LLST1:
 3087 0013 08000000 		.4byte	.LVL15
 3088 0017 3A000000 		.4byte	.LVL20
 3089 001b 0100     		.2byte	0x1
 3090 001d 54       		.byte	0x54
 3091 001e 00000000 		.4byte	0
 3092 0022 00000000 		.4byte	0
 3093              	.LLST2:
 3094 0026 22000000 		.4byte	.LVL26
 3095 002a 3E000000 		.4byte	.LVL32
 3096 002e 0100     		.2byte	0x1
 3097 0030 54       		.byte	0x54
 3098 0031 44000000 		.4byte	.LVL34
 3099 0035 4C000000 		.4byte	.LVL36
 3100 0039 0100     		.2byte	0x1
 3101 003b 54       		.byte	0x54
 3102 003c 00000000 		.4byte	0
 3103 0040 00000000 		.4byte	0
 3104              	.LLST3:
 3105 0044 0E000000 		.4byte	.LVL24
 3106 0048 24000000 		.4byte	.LVL27
 3107 004c 0100     		.2byte	0x1
 3108 004e 53       		.byte	0x53
 3109 004f 24000000 		.4byte	.LVL27
 3110 0053 26000000 		.4byte	.LVL28
 3111 0057 0300     		.2byte	0x3
 3112 0059 73       		.byte	0x73
 3113 005a 7F       		.sleb128 -1
 3114 005b 9F       		.byte	0x9f
 3115 005c 26000000 		.4byte	.LVL28
 3116 0060 32000000 		.4byte	.LVL30
 3117 0064 0100     		.2byte	0x1
 3118 0066 53       		.byte	0x53
 3119 0067 32000000 		.4byte	.LVL30
 3120 006b 3C000000 		.4byte	.LVL31
 3121 006f 0500     		.2byte	0x5
 3122 0071 03       		.byte	0x3
 3123 0072 00000000 		.4byte	UART_rxBufferRead
 3124 0076 3E000000 		.4byte	.LVL32
 3125 007a 40000000 		.4byte	.LVL33
 3126 007e 0100     		.2byte	0x1
 3127 0080 53       		.byte	0x53
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 84


 3128 0081 00000000 		.4byte	0
 3129 0085 00000000 		.4byte	0
 3130              	.LLST4:
 3131 0089 12000000 		.4byte	.LVL25
 3132 008d 49000000 		.4byte	.LVL35-1
 3133 0091 0100     		.2byte	0x1
 3134 0093 51       		.byte	0x51
 3135 0094 00000000 		.4byte	0
 3136 0098 00000000 		.4byte	0
 3137              	.LLST5:
 3138 009c 02000000 		.4byte	.LVL39
 3139 00a0 22000000 		.4byte	.LVL43
 3140 00a4 0200     		.2byte	0x2
 3141 00a6 30       		.byte	0x30
 3142 00a7 9F       		.byte	0x9f
 3143 00a8 22000000 		.4byte	.LVL43
 3144 00ac 3E000000 		.4byte	.LVL49
 3145 00b0 0100     		.2byte	0x1
 3146 00b2 54       		.byte	0x54
 3147 00b3 3E000000 		.4byte	.LVL49
 3148 00b7 4E000000 		.4byte	.LVL52
 3149 00bb 0200     		.2byte	0x2
 3150 00bd 30       		.byte	0x30
 3151 00be 9F       		.byte	0x9f
 3152 00bf 4E000000 		.4byte	.LVL52
 3153 00c3 56000000 		.4byte	.LVL53
 3154 00c7 0100     		.2byte	0x1
 3155 00c9 54       		.byte	0x54
 3156 00ca 56000000 		.4byte	.LVL53
 3157 00ce 5A000000 		.4byte	.LVL54
 3158 00d2 0200     		.2byte	0x2
 3159 00d4 30       		.byte	0x30
 3160 00d5 9F       		.byte	0x9f
 3161 00d6 5A000000 		.4byte	.LVL54
 3162 00da 64000000 		.4byte	.LVL57
 3163 00de 0100     		.2byte	0x1
 3164 00e0 54       		.byte	0x54
 3165 00e1 00000000 		.4byte	0
 3166 00e5 00000000 		.4byte	0
 3167              	.LLST6:
 3168 00e9 44000000 		.4byte	.LVL51
 3169 00ed 5C000000 		.4byte	.LVL55
 3170 00f1 0100     		.2byte	0x1
 3171 00f3 53       		.byte	0x53
 3172 00f4 00000000 		.4byte	0
 3173 00f8 00000000 		.4byte	0
 3174              	.LLST7:
 3175 00fc 0E000000 		.4byte	.LVL41
 3176 0100 24000000 		.4byte	.LVL44
 3177 0104 0100     		.2byte	0x1
 3178 0106 53       		.byte	0x53
 3179 0107 24000000 		.4byte	.LVL44
 3180 010b 26000000 		.4byte	.LVL45
 3181 010f 0300     		.2byte	0x3
 3182 0111 73       		.byte	0x73
 3183 0112 7F       		.sleb128 -1
 3184 0113 9F       		.byte	0x9f
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 85


 3185 0114 26000000 		.4byte	.LVL45
 3186 0118 32000000 		.4byte	.LVL47
 3187 011c 0100     		.2byte	0x1
 3188 011e 53       		.byte	0x53
 3189 011f 32000000 		.4byte	.LVL47
 3190 0123 3C000000 		.4byte	.LVL48
 3191 0127 0500     		.2byte	0x5
 3192 0129 03       		.byte	0x3
 3193 012a 00000000 		.4byte	UART_rxBufferRead
 3194 012e 3E000000 		.4byte	.LVL49
 3195 0132 40000000 		.4byte	.LVL50
 3196 0136 0100     		.2byte	0x1
 3197 0138 53       		.byte	0x53
 3198 0139 00000000 		.4byte	0
 3199 013d 00000000 		.4byte	0
 3200              	.LLST8:
 3201 0141 12000000 		.4byte	.LVL42
 3202 0145 61000000 		.4byte	.LVL56-1
 3203 0149 0100     		.2byte	0x1
 3204 014b 51       		.byte	0x51
 3205 014c 00000000 		.4byte	0
 3206 0150 00000000 		.4byte	0
 3207              	.LLST9:
 3208 0154 0C000000 		.4byte	.LVL59
 3209 0158 18000000 		.4byte	.LVL61
 3210 015c 0100     		.2byte	0x1
 3211 015e 54       		.byte	0x54
 3212 015f 00000000 		.4byte	0
 3213 0163 00000000 		.4byte	0
 3214              	.LLST10:
 3215 0167 36000000 		.4byte	.LVL64
 3216 016b 38000000 		.4byte	.LVL65
 3217 016f 0100     		.2byte	0x1
 3218 0171 54       		.byte	0x54
 3219 0172 44000000 		.4byte	.LVL66
 3220 0176 46000000 		.4byte	.LVL67
 3221 017a 0100     		.2byte	0x1
 3222 017c 54       		.byte	0x54
 3223 017d 48000000 		.4byte	.LVL68
 3224 0181 50000000 		.4byte	.LVL70
 3225 0185 0100     		.2byte	0x1
 3226 0187 54       		.byte	0x54
 3227 0188 00000000 		.4byte	0
 3228 018c 00000000 		.4byte	0
 3229              	.LLST11:
 3230 0190 06000000 		.4byte	.LVL71
 3231 0194 1B000000 		.4byte	.LVL72-1
 3232 0198 0100     		.2byte	0x1
 3233 019a 50       		.byte	0x50
 3234 019b 00000000 		.4byte	0
 3235 019f 00000000 		.4byte	0
 3236              	.LLST12:
 3237 01a3 00000000 		.4byte	.LVL79
 3238 01a7 0E000000 		.4byte	.LVL80
 3239 01ab 0100     		.2byte	0x1
 3240 01ad 50       		.byte	0x50
 3241 01ae 0E000000 		.4byte	.LVL80
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 86


 3242 01b2 5C000000 		.4byte	.LFE17
 3243 01b6 0400     		.2byte	0x4
 3244 01b8 F3       		.byte	0xf3
 3245 01b9 01       		.uleb128 0x1
 3246 01ba 50       		.byte	0x50
 3247 01bb 9F       		.byte	0x9f
 3248 01bc 00000000 		.4byte	0
 3249 01c0 00000000 		.4byte	0
 3250              	.LLST13:
 3251 01c4 00000000 		.4byte	.LVL83
 3252 01c8 54000000 		.4byte	.LVL88
 3253 01cc 0100     		.2byte	0x1
 3254 01ce 50       		.byte	0x50
 3255 01cf 54000000 		.4byte	.LVL88
 3256 01d3 57000000 		.4byte	.LVL89-1
 3257 01d7 0800     		.2byte	0x8
 3258 01d9 71       		.byte	0x71
 3259 01da 00       		.sleb128 0
 3260 01db 03       		.byte	0x3
 3261 01dc FFFFFFFF 		.4byte	UART_txBuffer-1
 3262 01e0 22       		.byte	0x22
 3263 01e1 57000000 		.4byte	.LVL89-1
 3264 01e5 6C000000 		.4byte	.LFE19
 3265 01e9 0400     		.2byte	0x4
 3266 01eb F3       		.byte	0xf3
 3267 01ec 01       		.uleb128 0x1
 3268 01ed 50       		.byte	0x50
 3269 01ee 9F       		.byte	0x9f
 3270 01ef 00000000 		.4byte	0
 3271 01f3 00000000 		.4byte	0
 3272              	.LLST14:
 3273 01f7 06000000 		.4byte	.LVL84
 3274 01fb 57000000 		.4byte	.LVL89-1
 3275 01ff 0100     		.2byte	0x1
 3276 0201 51       		.byte	0x51
 3277 0202 00000000 		.4byte	0
 3278 0206 00000000 		.4byte	0
 3279              	.LLST15:
 3280 020a 0A000000 		.4byte	.LVL85
 3281 020e 57000000 		.4byte	.LVL89-1
 3282 0212 0100     		.2byte	0x1
 3283 0214 52       		.byte	0x52
 3284 0215 00000000 		.4byte	0
 3285 0219 00000000 		.4byte	0
 3286              	.LLST16:
 3287 021d 00000000 		.4byte	.LVL90
 3288 0221 0C000000 		.4byte	.LVL92
 3289 0225 0100     		.2byte	0x1
 3290 0227 50       		.byte	0x50
 3291 0228 0C000000 		.4byte	.LVL92
 3292 022c 16000000 		.4byte	.LVL96
 3293 0230 0100     		.2byte	0x1
 3294 0232 55       		.byte	0x55
 3295 0233 16000000 		.4byte	.LVL96
 3296 0237 1A000000 		.4byte	.LVL97
 3297 023b 0100     		.2byte	0x1
 3298 023d 50       		.byte	0x50
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 87


 3299 023e 1A000000 		.4byte	.LVL97
 3300 0242 20000000 		.4byte	.LVL98
 3301 0246 0100     		.2byte	0x1
 3302 0248 55       		.byte	0x55
 3303 0249 20000000 		.4byte	.LVL98
 3304 024d 28000000 		.4byte	.LFE20
 3305 0251 0400     		.2byte	0x4
 3306 0253 F3       		.byte	0xf3
 3307 0254 01       		.uleb128 0x1
 3308 0255 50       		.byte	0x50
 3309 0256 9F       		.byte	0x9f
 3310 0257 00000000 		.4byte	0
 3311 025b 00000000 		.4byte	0
 3312              	.LLST17:
 3313 025f 02000000 		.4byte	.LVL91
 3314 0263 0C000000 		.4byte	.LVL92
 3315 0267 0200     		.2byte	0x2
 3316 0269 30       		.byte	0x30
 3317 026a 9F       		.byte	0x9f
 3318 026b 0C000000 		.4byte	.LVL92
 3319 026f 12000000 		.4byte	.LVL94
 3320 0273 0100     		.2byte	0x1
 3321 0275 54       		.byte	0x54
 3322 0276 14000000 		.4byte	.LVL95
 3323 027a 16000000 		.4byte	.LVL96
 3324 027e 0100     		.2byte	0x1
 3325 0280 54       		.byte	0x54
 3326 0281 16000000 		.4byte	.LVL96
 3327 0285 1A000000 		.4byte	.LVL97
 3328 0289 0200     		.2byte	0x2
 3329 028b 30       		.byte	0x30
 3330 028c 9F       		.byte	0x9f
 3331 028d 1A000000 		.4byte	.LVL97
 3332 0291 20000000 		.4byte	.LVL98
 3333 0295 0100     		.2byte	0x1
 3334 0297 54       		.byte	0x54
 3335 0298 00000000 		.4byte	0
 3336 029c 00000000 		.4byte	0
 3337              	.LLST18:
 3338 02a0 00000000 		.4byte	.LVL99
 3339 02a4 0C000000 		.4byte	.LVL101
 3340 02a8 0100     		.2byte	0x1
 3341 02aa 50       		.byte	0x50
 3342 02ab 0C000000 		.4byte	.LVL101
 3343 02af 18000000 		.4byte	.LVL105
 3344 02b3 0100     		.2byte	0x1
 3345 02b5 56       		.byte	0x56
 3346 02b6 18000000 		.4byte	.LVL105
 3347 02ba 1E000000 		.4byte	.LVL106
 3348 02be 0100     		.2byte	0x1
 3349 02c0 50       		.byte	0x50
 3350 02c1 1E000000 		.4byte	.LVL106
 3351 02c5 22000000 		.4byte	.LVL107
 3352 02c9 0100     		.2byte	0x1
 3353 02cb 56       		.byte	0x56
 3354 02cc 22000000 		.4byte	.LVL107
 3355 02d0 28000000 		.4byte	.LFE21
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 88


 3356 02d4 0400     		.2byte	0x4
 3357 02d6 F3       		.byte	0xf3
 3358 02d7 01       		.uleb128 0x1
 3359 02d8 50       		.byte	0x50
 3360 02d9 9F       		.byte	0x9f
 3361 02da 00000000 		.4byte	0
 3362 02de 00000000 		.4byte	0
 3363              	.LLST19:
 3364 02e2 00000000 		.4byte	.LVL99
 3365 02e6 0C000000 		.4byte	.LVL101
 3366 02ea 0100     		.2byte	0x1
 3367 02ec 51       		.byte	0x51
 3368 02ed 0C000000 		.4byte	.LVL101
 3369 02f1 18000000 		.4byte	.LVL105
 3370 02f5 0400     		.2byte	0x4
 3371 02f7 F3       		.byte	0xf3
 3372 02f8 01       		.uleb128 0x1
 3373 02f9 51       		.byte	0x51
 3374 02fa 9F       		.byte	0x9f
 3375 02fb 18000000 		.4byte	.LVL105
 3376 02ff 1E000000 		.4byte	.LVL106
 3377 0303 0100     		.2byte	0x1
 3378 0305 51       		.byte	0x51
 3379 0306 1E000000 		.4byte	.LVL106
 3380 030a 28000000 		.4byte	.LFE21
 3381 030e 0400     		.2byte	0x4
 3382 0310 F3       		.byte	0xf3
 3383 0311 01       		.uleb128 0x1
 3384 0312 51       		.byte	0x51
 3385 0313 9F       		.byte	0x9f
 3386 0314 00000000 		.4byte	0
 3387 0318 00000000 		.4byte	0
 3388              	.LLST20:
 3389 031c 02000000 		.4byte	.LVL100
 3390 0320 0C000000 		.4byte	.LVL101
 3391 0324 0200     		.2byte	0x2
 3392 0326 30       		.byte	0x30
 3393 0327 9F       		.byte	0x9f
 3394 0328 0C000000 		.4byte	.LVL101
 3395 032c 14000000 		.4byte	.LVL103
 3396 0330 0100     		.2byte	0x1
 3397 0332 54       		.byte	0x54
 3398 0333 16000000 		.4byte	.LVL104
 3399 0337 18000000 		.4byte	.LVL105
 3400 033b 0100     		.2byte	0x1
 3401 033d 54       		.byte	0x54
 3402 033e 18000000 		.4byte	.LVL105
 3403 0342 1E000000 		.4byte	.LVL106
 3404 0346 0200     		.2byte	0x2
 3405 0348 30       		.byte	0x30
 3406 0349 9F       		.byte	0x9f
 3407 034a 1E000000 		.4byte	.LVL106
 3408 034e 22000000 		.4byte	.LVL107
 3409 0352 0100     		.2byte	0x1
 3410 0354 54       		.byte	0x54
 3411 0355 00000000 		.4byte	0
 3412 0359 00000000 		.4byte	0
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 89


 3413              	.LLST21:
 3414 035d 00000000 		.4byte	.LVL108
 3415 0361 0D000000 		.4byte	.LVL109-1
 3416 0365 0100     		.2byte	0x1
 3417 0367 50       		.byte	0x50
 3418 0368 0D000000 		.4byte	.LVL109-1
 3419 036c 20000000 		.4byte	.LFE22
 3420 0370 0400     		.2byte	0x4
 3421 0372 F3       		.byte	0xf3
 3422 0373 01       		.uleb128 0x1
 3423 0374 50       		.byte	0x50
 3424 0375 9F       		.byte	0x9f
 3425 0376 00000000 		.4byte	0
 3426 037a 00000000 		.4byte	0
 3427              	.LLST22:
 3428 037e 26000000 		.4byte	.LVL113
 3429 0382 28000000 		.4byte	.LVL114
 3430 0386 0100     		.2byte	0x1
 3431 0388 54       		.byte	0x54
 3432 0389 32000000 		.4byte	.LVL115
 3433 038d 34000000 		.4byte	.LVL116
 3434 0391 0100     		.2byte	0x1
 3435 0393 54       		.byte	0x54
 3436 0394 36000000 		.4byte	.LVL117
 3437 0398 3E000000 		.4byte	.LVL119
 3438 039c 0100     		.2byte	0x1
 3439 039e 54       		.byte	0x54
 3440 039f 00000000 		.4byte	0
 3441 03a3 00000000 		.4byte	0
 3442              	.LLST23:
 3443 03a7 06000000 		.4byte	.LVL120
 3444 03ab 1B000000 		.4byte	.LVL121-1
 3445 03af 0100     		.2byte	0x1
 3446 03b1 50       		.byte	0x50
 3447 03b2 00000000 		.4byte	0
 3448 03b6 00000000 		.4byte	0
 3449              	.LLST24:
 3450 03ba 00000000 		.4byte	.LVL124
 3451 03be 3C000000 		.4byte	.LVL129
 3452 03c2 0100     		.2byte	0x1
 3453 03c4 50       		.byte	0x50
 3454 03c5 3C000000 		.4byte	.LVL129
 3455 03c9 5C000000 		.4byte	.LFE25
 3456 03cd 0400     		.2byte	0x4
 3457 03cf F3       		.byte	0xf3
 3458 03d0 01       		.uleb128 0x1
 3459 03d1 50       		.byte	0x50
 3460 03d2 9F       		.byte	0x9f
 3461 03d3 00000000 		.4byte	0
 3462 03d7 00000000 		.4byte	0
 3463              	.LLST25:
 3464 03db 26000000 		.4byte	.LVL125
 3465 03df 2A000000 		.4byte	.LVL126
 3466 03e3 0100     		.2byte	0x1
 3467 03e5 53       		.byte	0x53
 3468 03e6 36000000 		.4byte	.LVL127
 3469 03ea 3A000000 		.4byte	.LVL128
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 90


 3470 03ee 0100     		.2byte	0x1
 3471 03f0 53       		.byte	0x53
 3472 03f1 00000000 		.4byte	0
 3473 03f5 00000000 		.4byte	0
 3474              		.section	.debug_aranges,"",%progbits
 3475 0000 EC000000 		.4byte	0xec
 3476 0004 0200     		.2byte	0x2
 3477 0006 00000000 		.4byte	.Ldebug_info0
 3478 000a 04       		.byte	0x4
 3479 000b 00       		.byte	0
 3480 000c 0000     		.2byte	0
 3481 000e 0000     		.2byte	0
 3482 0010 00000000 		.4byte	.LFB1
 3483 0014 68000000 		.4byte	.LFE1-.LFB1
 3484 0018 00000000 		.4byte	.LFB2
 3485 001c 54000000 		.4byte	.LFE2-.LFB2
 3486 0020 00000000 		.4byte	.LFB0
 3487 0024 20000000 		.4byte	.LFE0-.LFB0
 3488 0028 00000000 		.4byte	.LFB3
 3489 002c 48000000 		.4byte	.LFE3-.LFB3
 3490 0030 00000000 		.4byte	.LFB4
 3491 0034 04000000 		.4byte	.LFE4-.LFB4
 3492 0038 00000000 		.4byte	.LFB5
 3493 003c 02000000 		.4byte	.LFE5-.LFB5
 3494 0040 00000000 		.4byte	.LFB6
 3495 0044 0C000000 		.4byte	.LFE6-.LFB6
 3496 0048 00000000 		.4byte	.LFB7
 3497 004c 5C000000 		.4byte	.LFE7-.LFB7
 3498 0050 00000000 		.4byte	.LFB8
 3499 0054 24000000 		.4byte	.LFE8-.LFB8
 3500 0058 00000000 		.4byte	.LFB9
 3501 005c 78000000 		.4byte	.LFE9-.LFB9
 3502 0060 00000000 		.4byte	.LFB10
 3503 0064 28000000 		.4byte	.LFE10-.LFB10
 3504 0068 00000000 		.4byte	.LFB11
 3505 006c 58000000 		.4byte	.LFE11-.LFB11
 3506 0070 00000000 		.4byte	.LFB12
 3507 0074 40000000 		.4byte	.LFE12-.LFB12
 3508 0078 00000000 		.4byte	.LFB13
 3509 007c 02000000 		.4byte	.LFE13-.LFB13
 3510 0080 00000000 		.4byte	.LFB14
 3511 0084 0C000000 		.4byte	.LFE14-.LFB14
 3512 0088 00000000 		.4byte	.LFB15
 3513 008c 0C000000 		.4byte	.LFE15-.LFB15
 3514 0090 00000000 		.4byte	.LFB16
 3515 0094 0C000000 		.4byte	.LFE16-.LFB16
 3516 0098 00000000 		.4byte	.LFB17
 3517 009c 5C000000 		.4byte	.LFE17-.LFB17
 3518 00a0 00000000 		.4byte	.LFB18
 3519 00a4 0C000000 		.4byte	.LFE18-.LFB18
 3520 00a8 00000000 		.4byte	.LFB19
 3521 00ac 6C000000 		.4byte	.LFE19-.LFB19
 3522 00b0 00000000 		.4byte	.LFB20
 3523 00b4 28000000 		.4byte	.LFE20-.LFB20
 3524 00b8 00000000 		.4byte	.LFB21
 3525 00bc 28000000 		.4byte	.LFE21-.LFB21
 3526 00c0 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 91


 3527 00c4 20000000 		.4byte	.LFE22-.LFB22
 3528 00c8 00000000 		.4byte	.LFB23
 3529 00cc 44000000 		.4byte	.LFE23-.LFB23
 3530 00d0 00000000 		.4byte	.LFB24
 3531 00d4 3C000000 		.4byte	.LFE24-.LFB24
 3532 00d8 00000000 		.4byte	.LFB25
 3533 00dc 5C000000 		.4byte	.LFE25-.LFB25
 3534 00e0 00000000 		.4byte	.LFB26
 3535 00e4 02000000 		.4byte	.LFE26-.LFB26
 3536 00e8 00000000 		.4byte	0
 3537 00ec 00000000 		.4byte	0
 3538              		.section	.debug_ranges,"",%progbits
 3539              	.Ldebug_ranges0:
 3540 0000 00000000 		.4byte	.LFB1
 3541 0004 68000000 		.4byte	.LFE1
 3542 0008 00000000 		.4byte	.LFB2
 3543 000c 54000000 		.4byte	.LFE2
 3544 0010 00000000 		.4byte	.LFB0
 3545 0014 20000000 		.4byte	.LFE0
 3546 0018 00000000 		.4byte	.LFB3
 3547 001c 48000000 		.4byte	.LFE3
 3548 0020 00000000 		.4byte	.LFB4
 3549 0024 04000000 		.4byte	.LFE4
 3550 0028 00000000 		.4byte	.LFB5
 3551 002c 02000000 		.4byte	.LFE5
 3552 0030 00000000 		.4byte	.LFB6
 3553 0034 0C000000 		.4byte	.LFE6
 3554 0038 00000000 		.4byte	.LFB7
 3555 003c 5C000000 		.4byte	.LFE7
 3556 0040 00000000 		.4byte	.LFB8
 3557 0044 24000000 		.4byte	.LFE8
 3558 0048 00000000 		.4byte	.LFB9
 3559 004c 78000000 		.4byte	.LFE9
 3560 0050 00000000 		.4byte	.LFB10
 3561 0054 28000000 		.4byte	.LFE10
 3562 0058 00000000 		.4byte	.LFB11
 3563 005c 58000000 		.4byte	.LFE11
 3564 0060 00000000 		.4byte	.LFB12
 3565 0064 40000000 		.4byte	.LFE12
 3566 0068 00000000 		.4byte	.LFB13
 3567 006c 02000000 		.4byte	.LFE13
 3568 0070 00000000 		.4byte	.LFB14
 3569 0074 0C000000 		.4byte	.LFE14
 3570 0078 00000000 		.4byte	.LFB15
 3571 007c 0C000000 		.4byte	.LFE15
 3572 0080 00000000 		.4byte	.LFB16
 3573 0084 0C000000 		.4byte	.LFE16
 3574 0088 00000000 		.4byte	.LFB17
 3575 008c 5C000000 		.4byte	.LFE17
 3576 0090 00000000 		.4byte	.LFB18
 3577 0094 0C000000 		.4byte	.LFE18
 3578 0098 00000000 		.4byte	.LFB19
 3579 009c 6C000000 		.4byte	.LFE19
 3580 00a0 00000000 		.4byte	.LFB20
 3581 00a4 28000000 		.4byte	.LFE20
 3582 00a8 00000000 		.4byte	.LFB21
 3583 00ac 28000000 		.4byte	.LFE21
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 92


 3584 00b0 00000000 		.4byte	.LFB22
 3585 00b4 20000000 		.4byte	.LFE22
 3586 00b8 00000000 		.4byte	.LFB23
 3587 00bc 44000000 		.4byte	.LFE23
 3588 00c0 00000000 		.4byte	.LFB24
 3589 00c4 3C000000 		.4byte	.LFE24
 3590 00c8 00000000 		.4byte	.LFB25
 3591 00cc 5C000000 		.4byte	.LFE25
 3592 00d0 00000000 		.4byte	.LFB26
 3593 00d4 02000000 		.4byte	.LFE26
 3594 00d8 00000000 		.4byte	0
 3595 00dc 00000000 		.4byte	0
 3596              		.section	.debug_line,"",%progbits
 3597              	.Ldebug_line0:
 3598 0000 57030000 		.section	.debug_str,"MS",%progbits,1
 3598      02006100 
 3598      00000201 
 3598      FB0E0D00 
 3598      01010101 
 3599              	.LASF10:
 3600 0000 75696E74 		.ascii	"uint16\000"
 3600      313600
 3601              	.LASF79:
 3602 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3602      69744372 
 3602      69746963 
 3602      616C5365 
 3602      6374696F 
 3603              	.LASF47:
 3604 001d 74784461 		.ascii	"txDataByte\000"
 3604      74614279 
 3604      746500
 3605              	.LASF69:
 3606 0028 55415254 		.ascii	"UART_txBufferWrite\000"
 3606      5F747842 
 3606      75666665 
 3606      72577269 
 3606      746500
 3607              	.LASF54:
 3608 003b 73747269 		.ascii	"string\000"
 3608      6E6700
 3609              	.LASF7:
 3610 0042 6C6F6E67 		.ascii	"long long unsigned int\000"
 3610      206C6F6E 
 3610      6720756E 
 3610      7369676E 
 3610      65642069 
 3611              	.LASF20:
 3612 0059 55415254 		.ascii	"UART_Start\000"
 3612      5F537461 
 3612      727400
 3613              	.LASF45:
 3614 0064 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3614      5F536574 
 3614      5478496E 
 3614      74657272 
 3614      7570744D 
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 93


 3615              	.LASF75:
 3616 007c 55415254 		.ascii	"UART_rxBufferOverflow\000"
 3616      5F727842 
 3616      75666665 
 3616      724F7665 
 3616      72666C6F 
 3617              	.LASF68:
 3618 0092 55415254 		.ascii	"UART_txBufferRead\000"
 3618      5F747842 
 3618      75666665 
 3618      72526561 
 3618      6400
 3619              	.LASF6:
 3620 00a4 6C6F6E67 		.ascii	"long long int\000"
 3620      206C6F6E 
 3620      6720696E 
 3620      7400
 3621              	.LASF0:
 3622 00b2 7369676E 		.ascii	"signed char\000"
 3622      65642063 
 3622      68617200 
 3623              	.LASF64:
 3624 00be 74785065 		.ascii	"txPeriod\000"
 3624      72696F64 
 3624      00
 3625              	.LASF4:
 3626 00c7 6C6F6E67 		.ascii	"long int\000"
 3626      20696E74 
 3626      00
 3627              	.LASF82:
 3628 00d0 4379496E 		.ascii	"CyIntDisable\000"
 3628      74446973 
 3628      61626C65 
 3628      00
 3629              	.LASF50:
 3630 00dd 55415254 		.ascii	"UART_PutChar\000"
 3630      5F507574 
 3630      43686172 
 3630      00
 3631              	.LASF30:
 3632 00ea 55415254 		.ascii	"UART_ReadRxData\000"
 3632      5F526561 
 3632      64527844 
 3632      61746100 
 3633              	.LASF9:
 3634 00fa 75696E74 		.ascii	"uint8\000"
 3634      3800
 3635              	.LASF48:
 3636 0100 55415254 		.ascii	"UART_ReadControlRegister\000"
 3636      5F526561 
 3636      64436F6E 
 3636      74726F6C 
 3636      52656769 
 3637              	.LASF12:
 3638 0119 646F7562 		.ascii	"double\000"
 3638      6C6500
 3639              	.LASF41:
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 94


 3640 0120 61646472 		.ascii	"addressMode\000"
 3640      6573734D 
 3640      6F646500 
 3641              	.LASF73:
 3642 012c 55415254 		.ascii	"UART_rxBufferWrite\000"
 3642      5F727842 
 3642      75666665 
 3642      72577269 
 3642      746500
 3643              	.LASF86:
 3644 013f 4379496E 		.ascii	"CyIntSetVector\000"
 3644      74536574 
 3644      56656374 
 3644      6F7200
 3645              	.LASF25:
 3646 014e 636F6E74 		.ascii	"control\000"
 3646      726F6C00 
 3647              	.LASF52:
 3648 0156 6C6F6354 		.ascii	"locTxBufferRead\000"
 3648      78427566 
 3648      66657252 
 3648      65616400 
 3649              	.LASF18:
 3650 0166 55415254 		.ascii	"UART_Init\000"
 3650      5F496E69 
 3650      7400
 3651              	.LASF67:
 3652 0170 55415254 		.ascii	"UART_txBuffer\000"
 3652      5F747842 
 3652      75666665 
 3652      7200
 3653              	.LASF62:
 3654 017e 7265744D 		.ascii	"retMode\000"
 3654      6F646500 
 3655              	.LASF35:
 3656 0186 55415254 		.ascii	"UART_GetByte\000"
 3656      5F476574 
 3656      42797465 
 3656      00
 3657              	.LASF8:
 3658 0193 756E7369 		.ascii	"unsigned int\000"
 3658      676E6564 
 3658      20696E74 
 3658      00
 3659              	.LASF60:
 3660 01a0 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3660      5F436C65 
 3660      61725478 
 3660      42756666 
 3660      657200
 3661              	.LASF58:
 3662 01b3 55415254 		.ascii	"UART_PutCRLF\000"
 3662      5F507574 
 3662      43524C46 
 3662      00
 3663              	.LASF36:
 3664 01c0 6C6F6345 		.ascii	"locErrorStatus\000"
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 95


 3664      72726F72 
 3664      53746174 
 3664      757300
 3665              	.LASF5:
 3666 01cf 6C6F6E67 		.ascii	"long unsigned int\000"
 3666      20756E73 
 3666      69676E65 
 3666      6420696E 
 3666      7400
 3667              	.LASF51:
 3668 01e1 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3668      78427566 
 3668      66657257 
 3668      72697465 
 3668      00
 3669              	.LASF56:
 3670 01f2 55415254 		.ascii	"UART_PutArray\000"
 3670      5F507574 
 3670      41727261 
 3670      7900
 3671              	.LASF87:
 3672 0200 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3672      74657243 
 3672      72697469 
 3672      63616C53 
 3672      65637469 
 3673              	.LASF88:
 3674 0217 4379496E 		.ascii	"CyIntSetPending\000"
 3674      74536574 
 3674      50656E64 
 3674      696E6700 
 3675              	.LASF74:
 3676 0227 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 3676      5F727842 
 3676      75666665 
 3676      724C6F6F 
 3676      70446574 
 3677              	.LASF38:
 3678 023f 73697A65 		.ascii	"size\000"
 3678      00
 3679              	.LASF3:
 3680 0244 73686F72 		.ascii	"short unsigned int\000"
 3680      7420756E 
 3680      7369676E 
 3680      65642069 
 3680      6E7400
 3681              	.LASF72:
 3682 0257 55415254 		.ascii	"UART_rxBufferRead\000"
 3682      5F727842 
 3682      75666665 
 3682      72526561 
 3682      6400
 3683              	.LASF55:
 3684 0269 62756649 		.ascii	"bufIndex\000"
 3684      6E646578 
 3684      00
 3685              	.LASF26:
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 96


 3686 0272 696E7453 		.ascii	"intSrc\000"
 3686      726300
 3687              	.LASF65:
 3688 0279 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3688      5F536574 
 3688      54784164 
 3688      64726573 
 3688      734D6F64 
 3689              	.LASF84:
 3690 028f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART.c\000"
 3690      6E657261 
 3690      7465645F 
 3690      536F7572 
 3690      63655C50 
 3691              	.LASF49:
 3692 02af 55415254 		.ascii	"UART_ReadTxStatus\000"
 3692      5F526561 
 3692      64547853 
 3692      74617475 
 3692      7300
 3693              	.LASF80:
 3694 02c1 55415254 		.ascii	"UART_IntClock_Start\000"
 3694      5F496E74 
 3694      436C6F63 
 3694      6B5F5374 
 3694      61727400 
 3695              	.LASF63:
 3696 02d5 746D7053 		.ascii	"tmpStat\000"
 3696      74617400 
 3697              	.LASF17:
 3698 02dd 73697A65 		.ascii	"sizetype\000"
 3698      74797065 
 3698      00
 3699              	.LASF78:
 3700 02e6 4379496E 		.ascii	"CyIntClearPending\000"
 3700      74436C65 
 3700      61725065 
 3700      6E64696E 
 3700      6700
 3701              	.LASF43:
 3702 02f8 61646472 		.ascii	"address\000"
 3702      65737300 
 3703              	.LASF42:
 3704 0300 55415254 		.ascii	"UART_SetRxAddress1\000"
 3704      5F536574 
 3704      52784164 
 3704      64726573 
 3704      733100
 3705              	.LASF44:
 3706 0313 55415254 		.ascii	"UART_SetRxAddress2\000"
 3706      5F536574 
 3706      52784164 
 3706      64726573 
 3706      733200
 3707              	.LASF29:
 3708 0326 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3708      78427566 
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 97


 3708      66657257 
 3708      72697465 
 3708      00
 3709              	.LASF34:
 3710 0337 72785374 		.ascii	"rxStatus\000"
 3710      61747573 
 3710      00
 3711              	.LASF83:
 3712 0340 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3712      4320342E 
 3712      392E3320 
 3712      32303135 
 3712      30333033 
 3713 0373 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3713      20726576 
 3713      6973696F 
 3713      6E203232 
 3713      31323230 
 3714 03a6 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3714      66756E63 
 3714      74696F6E 
 3714      2D736563 
 3714      74696F6E 
 3715              	.LASF81:
 3716 03ce 55415254 		.ascii	"UART_IntClock_Stop\000"
 3716      5F496E74 
 3716      436C6F63 
 3716      6B5F5374 
 3716      6F7000
 3717              	.LASF76:
 3718 03e1 4379496E 		.ascii	"CyIntSetPriority\000"
 3718      74536574 
 3718      5072696F 
 3718      72697479 
 3718      00
 3719              	.LASF70:
 3720 03f2 55415254 		.ascii	"UART_errorStatus\000"
 3720      5F657272 
 3720      6F725374 
 3720      61747573 
 3720      00
 3721              	.LASF11:
 3722 0403 666C6F61 		.ascii	"float\000"
 3722      7400
 3723              	.LASF59:
 3724 0409 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3724      5F476574 
 3724      54784275 
 3724      66666572 
 3724      53697A65 
 3725              	.LASF15:
 3726 041e 72656738 		.ascii	"reg8\000"
 3726      00
 3727              	.LASF40:
 3728 0423 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3728      5F536574 
 3728      52784164 
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 98


 3728      64726573 
 3728      734D6F64 
 3729              	.LASF1:
 3730 0439 756E7369 		.ascii	"unsigned char\000"
 3730      676E6564 
 3730      20636861 
 3730      7200
 3731              	.LASF46:
 3732 0447 55415254 		.ascii	"UART_WriteTxData\000"
 3732      5F577269 
 3732      74655478 
 3732      44617461 
 3732      00
 3733              	.LASF2:
 3734 0458 73686F72 		.ascii	"short int\000"
 3734      7420696E 
 3734      7400
 3735              	.LASF77:
 3736 0462 4379496E 		.ascii	"CyIntEnable\000"
 3736      74456E61 
 3736      626C6500 
 3737              	.LASF61:
 3738 046e 55415254 		.ascii	"UART_SendBreak\000"
 3738      5F53656E 
 3738      64427265 
 3738      616B00
 3739              	.LASF57:
 3740 047d 62797465 		.ascii	"byteCount\000"
 3740      436F756E 
 3740      7400
 3741              	.LASF27:
 3742 0487 72784461 		.ascii	"rxData\000"
 3742      746100
 3743              	.LASF19:
 3744 048e 55415254 		.ascii	"UART_Enable\000"
 3744      5F456E61 
 3744      626C6500 
 3745              	.LASF31:
 3746 049a 55415254 		.ascii	"UART_ReadRxStatus\000"
 3746      5F526561 
 3746      64527853 
 3746      74617475 
 3746      7300
 3747              	.LASF14:
 3748 04ac 63686172 		.ascii	"char\000"
 3748      00
 3749              	.LASF16:
 3750 04b1 63796973 		.ascii	"cyisraddress\000"
 3750      72616464 
 3750      72657373 
 3750      00
 3751              	.LASF13:
 3752 04be 63686172 		.ascii	"char8\000"
 3752      3800
 3753              	.LASF24:
 3754 04c4 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3754      5F536574 
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 99


 3754      5278496E 
 3754      74657272 
 3754      7570744D 
 3755              	.LASF33:
 3756 04dc 55415254 		.ascii	"UART_GetChar\000"
 3756      5F476574 
 3756      43686172 
 3756      00
 3757              	.LASF28:
 3758 04e9 6C6F6352 		.ascii	"locRxBufferRead\000"
 3758      78427566 
 3758      66657252 
 3758      65616400 
 3759              	.LASF22:
 3760 04f9 656E6162 		.ascii	"enableInterrupts\000"
 3760      6C65496E 
 3760      74657272 
 3760      75707473 
 3760      00
 3761              	.LASF66:
 3762 050a 55415254 		.ascii	"UART_initVar\000"
 3762      5F696E69 
 3762      74566172 
 3762      00
 3763              	.LASF37:
 3764 0517 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3764      5F476574 
 3764      52784275 
 3764      66666572 
 3764      53697A65 
 3765              	.LASF32:
 3766 052c 73746174 		.ascii	"status\000"
 3766      757300
 3767              	.LASF21:
 3768 0533 55415254 		.ascii	"UART_Stop\000"
 3768      5F53746F 
 3768      7000
 3769              	.LASF71:
 3770 053d 55415254 		.ascii	"UART_rxBuffer\000"
 3770      5F727842 
 3770      75666665 
 3770      7200
 3771              	.LASF53:
 3772 054b 55415254 		.ascii	"UART_PutString\000"
 3772      5F507574 
 3772      53747269 
 3772      6E6700
 3773              	.LASF23:
 3774 055a 55415254 		.ascii	"UART_WriteControlRegister\000"
 3774      5F577269 
 3774      7465436F 
 3774      6E74726F 
 3774      6C526567 
 3775              	.LASF39:
 3776 0574 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3776      5F436C65 
 3776      61725278 
ARM GAS  C:\Users\LAIMON~1\AppData\Local\Temp\ccLSPELT.s 			page 100


 3776      42756666 
 3776      657200
 3777              	.LASF85:
 3778 0587 433A5C55 		.ascii	"C:\\Users\\LaimonasIgnas\\Desktop\\Plant_control2_0"
 3778      73657273 
 3778      5C4C6169 
 3778      6D6F6E61 
 3778      7349676E 
 3779 05b6 2E637964 		.ascii	".cydsn\\PSoC\\Plant_control2_0.cydsn\000"
 3779      736E5C50 
 3779      536F435C 
 3779      506C616E 
 3779      745F636F 
 3780              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
